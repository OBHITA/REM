//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Pillar.FluentRuleEngine.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Messages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Messages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Pillar.FluentRuleEngine.Resources.Messages", typeof(Messages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Then Length of {PropertyName} must be less then or equal to {CompareValue}..
        /// </summary>
        public static string Constraint_MaxLength_Message {
            get {
                return ResourceManager.GetString("Constraint_MaxLength_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Then Length of {PropertyName} must be Greater then or equal to {CompareValue}..
        /// </summary>
        public static string Constraint_MinLength_Message {
            get {
                return ResourceManager.GetString("Constraint_MinLength_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} does not meet specification ({Specification})..
        /// </summary>
        public static string Constraint_Specification_Message {
            get {
                return ResourceManager.GetString("Constraint_Specification_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} must be {ComparisonOperator} {CompareValue}..
        /// </summary>
        public static string Constraints_Comparison_Message {
            get {
                return ResourceManager.GetString("Constraints_Comparison_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} must be between but not equal to {StartValue} - {EndValue}.
        /// </summary>
        public static string Constraints_ExclusiveBetween_Message {
            get {
                return ResourceManager.GetString("Constraints_ExclusiveBetween_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} must be between or equal to {StartValue} - {EndValue}.
        /// </summary>
        public static string Constraints_InclusiveBetween_Message {
            get {
                return ResourceManager.GetString("Constraints_InclusiveBetween_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} must be in list: {ListString}..
        /// </summary>
        public static string Constraints_InList_Message {
            get {
                return ResourceManager.GetString("Constraints_InList_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} must not be empty..
        /// </summary>
        public static string Constraints_NotEmpty_Message {
            get {
                return ResourceManager.GetString("Constraints_NotEmpty_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} must not be empty or white space..
        /// </summary>
        public static string Constraints_NotEmptyOrWhiteSpace_Message {
            get {
                return ResourceManager.GetString("Constraints_NotEmptyOrWhiteSpace_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} must not be empty..
        /// </summary>
        public static string Constraints_NotNull_Message {
            get {
                return ResourceManager.GetString("Constraints_NotNull_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} must be empty..
        /// </summary>
        public static string Constraints_Null_Message {
            get {
                return ResourceManager.GetString("Constraints_Null_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} does not match regex ({RegexString})..
        /// </summary>
        public static string Constraints_Regex_Message {
            get {
                return ResourceManager.GetString("Constraints_Regex_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Property Rule must have at least one constraint..
        /// </summary>
        public static string InvalidNumberOfConstraints {
            get {
                return ResourceManager.GetString("InvalidNumberOfConstraints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When clause is missing..
        /// </summary>
        public static string MissingWhenClause {
            get {
                return ResourceManager.GetString("MissingWhenClause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is required..
        /// </summary>
        public static string NotNullFormat {
            get {
                return ResourceManager.GetString("NotNullFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The When Clause cannot be added until after the Then Clause is added..
        /// </summary>
        public static string ThenClauseMustPrecedeWhenClause {
            get {
                return ResourceManager.GetString("ThenClauseMustPrecedeWhenClause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Then Clause cannot be added until after the When Clause is added..
        /// </summary>
        public static string WhenClauseMustPrecedeThenClause {
            get {
                return ResourceManager.GetString("WhenClauseMustPrecedeThenClause", resourceCulture);
            }
        }
    }
}
