//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CodeAnalysisDatabaseRules {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class CodeAnalysisDatabaseRules {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal CodeAnalysisDatabaseRules() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CodeAnalysisDatabaseRules.CodeAnalysisDatabaseRules", typeof(CodeAnalysisDatabaseRules).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DatabaseRules.
        /// </summary>
        internal static string CategoryResource {
            get {
                return ResourceManager.GetString("CategoryResource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SQL data type based column naming rule..
        /// </summary>
        internal static string ColumnNamingRule_RuleName {
            get {
                return ResourceManager.GetString("ColumnNamingRule_RuleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Index with the name as (foreignKeyName + &quot;_IDX&quot;) should exist for every Foreign Key Constraint.
        /// </summary>
        internal static string ExpectedIndexExistsForForeignKey_RuleName {
            get {
                return ResourceManager.GetString("ExpectedIndexExistsForForeignKey_RuleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A ForeignKey columnu must named after (matches or ends with) the PrimaryKey column name of the Foreign Table.
        /// </summary>
        internal static string ForeignKeyColumnNamingRule_RuleName {
            get {
                return ResourceManager.GetString("ForeignKeyColumnNamingRule_RuleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A ForeignKey is required for all references..
        /// </summary>
        internal static string ForeignKeyExistsForReferencesRule_RuleName {
            get {
                return ResourceManager.GetString("ForeignKeyExistsForReferencesRule_RuleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ForeignKey should be named SourceTable_ReferencedTable_FK.
        /// </summary>
        internal static string ForeignKeyNamingRule_RuleName {
            get {
                return ResourceManager.GetString("ForeignKeyNamingRule_RuleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PrimaryKey Column should be named TableName_PK.
        /// </summary>
        internal static string PrimaryKeyColumnNamingRule_RuleName {
            get {
                return ResourceManager.GetString("PrimaryKeyColumnNamingRule_RuleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PrimaryKey should be named TableName_PK.
        /// </summary>
        internal static string PrimaryKeyNamingRule_RuleName {
            get {
                return ResourceManager.GetString("PrimaryKeyNamingRule_RuleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Primary Key is required.
        /// </summary>
        internal static string PrimaryKeyRule_RuleName {
            get {
                return ResourceManager.GetString("PrimaryKeyRule_RuleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only 1 PrimaryKey per table is allowed..
        /// </summary>
        internal static string SinglePrimaryKeyPerTableRule_RuleName {
            get {
                return ResourceManager.GetString("SinglePrimaryKeyPerTableRule_RuleName", resourceCulture);
            }
        }
    }
}
