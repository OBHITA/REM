<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:System="clr-namespace:System;assembly=mscorlib"
	xmlns:sdk1="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk"
	xmlns:toolkitInput="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit"
	xmlns:toolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Toolkit"
	xmlns:primitives="clr-namespace:System.Windows.Controls.Primitives;assembly=System.Windows.Controls"
	xmlns:dataInput="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Data.Input"
	xmlns:behavior="clr-namespace:Rem.Ria.Infrastructure.View.Behavior;assembly=Rem.Ria.Infrastructure"	
    xmlns:telerik="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls" 
    xmlns:telerikInput="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls.Input" 
    xmlns:Telerik_Windows_Controls_Chromes="clr-namespace:Telerik.Windows.Controls.Chromes;assembly=Telerik.Windows.Controls" 
    xmlns:Primitives="clr-namespace:Telerik.Windows.Controls.Primitives;assembly=Telerik.Windows.Controls" 
    xmlns:Animation="clr-namespace:Telerik.Windows.Controls.Animation;assembly=Telerik.Windows.Controls" 
    xmlns:Telerik_Windows_Controls_Calendar="clr-namespace:Telerik.Windows.Controls.Calendar;assembly=Telerik.Windows.Controls.Input" 
    xmlns:Converter="clr-namespace:Rem.Ria.Infrastructure.View.Converter;assembly=Rem.Ria.Infrastructure"
    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" 
    xmlns:GridView="clr-namespace:Telerik.Windows.Controls.GridView;assembly=Telerik.Windows.Controls.GridView" 
	xmlns:Controls1="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls.Input"
    xmlns:CustomControls="clr-namespace:Rem.Ria.Infrastructure.View.CustomControls"
    xmlns:schedule="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls.ScheduleView" xmlns:Controls="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls.Navigation"
	xmlns:telerikTabControl="clr-namespace:Telerik.Windows.Controls.TabControl;assembly=Telerik.Windows.Controls.Navigation"
    xmlns:telerikNavigation="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls.Navigation"
	mc:Ignorable="d">
    <ResourceDictionary.MergedDictionaries>

        <ResourceDictionary Source="Brushes.xaml"/>

    </ResourceDictionary.MergedDictionaries>
    <BitmapImage x:Key="DefaultStaffImage" UriSource="../../Images/DefaultStaffImage.png"/>

    <Style x:Key="LoginInformationTextBlockStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#FFBBBDBF"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
    </Style>

    <!-- Converters -->
    <telerik:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverterInstance"/>
    <telerik:InvertedBooleanToVisibilityConverter x:Key="InvertedBooleanToVisibilityConverterInstance"/>
    <telerik:BooleanToOpacityConverter x:Key="BooleanToOpacityConverterInstance"/>
    <Converter:FluideStateToTileConverter x:Key="FluideStateToTileConverterInstance"/>
    <schedule:NullToVisibilityConverter x:Key="NullToVisibilityConverterInstance"/>
    <schedule:InvertedNullToVisibilityConverter x:Key="InvertedNullToVisibilityConverterInstance"/>
    <GridView:GridLineWidthToThicknessConverter x:Key="GridLineWidthToThicknessConverter" />
    <Converter:VisitStatusToBrushConverter x:Key="VisitStatusToBrushConvert"/>
    <Converter:ToUpperCaseConverter x:Key="ToUpperCaseConvert"/>
    <Converter:ByteToImageConverter x:Key="ByteToImageConverterInstance"/>
    <Converter:Hl7SyndromicSurveillanceVisitAssociationConverter x:Key="Hl7SyndromicSurveillanceVisitAssociationConverterInstance"/>
    <Converter:IntegerToNullableConverter x:Key="IntegerToNullableConverterInstance"/>
    <Converter:NullableBooleanToVisibilityConverter x:Key="NullableBooleanToVisibilityConverterInstance"/>
    <Converter:InvertedNullableBooleanToVisibilityConverter x:Key="InvertedNullableBooleanToVisibilityConverterInstance"/>
    <Converter:QuestionAnswerToVisibilityConverter x:Key="QuestionAnswerToVisibilityConverterInstance"/>
    <Converter:DictionaryKeyValueConverter x:Key="DictionaryKeyValueConverterInstance"/>
    <Converter:InvertedBooleanConverter x:Key="InvertedBooleanConverterInstance"/>
    <Converter:NullableBooleanToYesNoConverter x:Key="NullableBooleanToYesNoConverterInstance"/>
    <Converter:StringToNullableConverter x:Key="StringToNullableConverterInstance"/>
    <Converter:MultiNullToVisibilityConverter x:Key="MultiNullToVisibilityConverterInstance"/>
    <Converter:IntegerToCsvValueConverter x:Key="IntegerToCsvValueConverterInstance" />
    <Converter:BooleanToFluidContentControlStateLargeConverter x:Key="BooleanToFluidContentControlStateLargeConverterInstance" />

    <!-- Start Telerik Resources -->
    <System:Int32 x:Key="CalendarWeekHeaderHorizontalBackgroundZIndex">0</System:Int32>
    <System:Int32 x:Key="CalendarWeekHeaderHorizontalInnerBorderZIndex">0</System:Int32>
    <System:Int32 x:Key="CalendarWeekHeaderHorizontalOuterBorderZIndex">0</System:Int32>
    <System:Int32 x:Key="CalendarWeekHeaderVerticalBackgroundZIndex">0</System:Int32>
    <System:Int32 x:Key="CalendarWeekHeaderVerticalInnerBorderZIndex">0</System:Int32>
    <System:Int32 x:Key="CalendarWeekHeaderVerticalOuterBorderZIndex">0</System:Int32>

    <telerik:Office_BlackTheme x:Key="Theme"/>

    <CornerRadius x:Key="SplitButton_LeftPartCornerRadius">1 0 0 1</CornerRadius>
    <CornerRadius x:Key="SplitButton_RightPartCornerRadius">0 1 1 0</CornerRadius>
    <CornerRadius x:Key="SplitButton_SpanCornerRadius">3</CornerRadius>
    <CornerRadius x:Key="SplitButton_SpanInnerCornerRadius">0</CornerRadius>

    <Thickness x:Key="CalendarItemsMargin">1 0 1 1</Thickness>
    <Thickness x:Key="CalendarViewBorderThickness">1</Thickness>
    <Thickness x:Key="CalendarViewHeaderMargin">0 0 0 0</Thickness>
    <Thickness x:Key="CalendarViewHeaderPadding">3</Thickness>
    <Thickness x:Key="CalendarViewMargin">-1 -1 0 0</Thickness>
    <Thickness x:Key="CalendarWeekHeaderHorizontalBackgroundMargin">2 1 2 2</Thickness>
    <Thickness x:Key="CalendarWeekHeaderHorizontalInnerBorderMargin">1 0 1 1</Thickness>
    <Thickness x:Key="CalendarWeekHeaderHorizontalInnerBorderThickness">1</Thickness>
    <Thickness x:Key="CalendarWeekHeaderHorizontalOuterBorderMargin">0 0 0 0</Thickness>
    <Thickness x:Key="CalendarWeekHeaderHorizontalOuterBorderThickness">1 0 1 1</Thickness>
    <Thickness x:Key="CalendarWeekHeaderVerticalBackgroundMargin">2 2 1 2</Thickness>
    <Thickness x:Key="CalendarWeekHeaderVerticalInnerBorderMargin">1 1 0 1</Thickness>
    <Thickness x:Key="CalendarWeekHeaderVerticalInnerBorderThickness">1</Thickness>
    <Thickness x:Key="CalendarWeekHeaderVerticalOuterBorderMargin">0 0 -1 0</Thickness>
    <Thickness x:Key="CalendarWeekHeaderVerticalOuterBorderThickness">1</Thickness>
    <!-- End Telerik Resources -->

    <!-- CONTROL/VALIDATION/DATA TEMPLATES-->
    <ControlTemplate x:Key="ValidationToolTipTemplate">
        <Grid x:Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
            <Grid.RenderTransform>
                <TranslateTransform x:Name="xform" X="-25"/>
            </Grid.RenderTransform>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0"/>
                        <VisualTransition GeneratedDuration="0:0:0.2" To="Open">
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="xform">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase Amplitude=".3" EasingMode="EaseOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Closed">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Open">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="xform"/>
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Background="#052A2E31" CornerRadius="5" Margin="4,4,-4,-4"/>
            <Border Background="#152A2E31" CornerRadius="4" Margin="3,3,-3,-3"/>
            <Border Background="#252A2E31" CornerRadius="3" Margin="2,2,-2,-2"/>
            <Border Background="#352A2E31" CornerRadius="2" Margin="1,1,-1,-1"/>
            <Border Background="#FFDC000C" CornerRadius="2"/>
            <Border CornerRadius="2">
                <TextBlock Foreground="White" MaxWidth="250" Margin="8,4,8,4" TextWrapping="Wrap" Text="{Binding (Validation.Errors)[0].ErrorContent}" UseLayoutRounding="false"/>
            </Border>
        </Grid>
    </ControlTemplate>
    <DataTemplate x:Key="DataTemplate2">
        <Grid>
            <CheckBox Content="CheckBox" Margin="0,0,0,3" d:LayoutOverrides="Width, Height"/>
        </Grid>
    </DataTemplate>


    <DataTemplate x:Key="QuickSearchItemTemplate">
        <Border Width="Auto" MinWidth="226" CornerRadius="5" OpacityMask="#FF060606">
            <Grid Margin="4,0,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="40"/>
                    <ColumnDefinition MinWidth="220" Width="auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="15"/>
                    <RowDefinition Height="15"/>
                    <RowDefinition Height="15"/>
                    <RowDefinition Height="6"/>
                </Grid.RowDefinitions>
                <Border BorderThickness="0.5" CornerRadius="2" Grid.RowSpan="3" d:LayoutOverrides="VerticalMargin" Background="White" Width="35" Height="35" HorizontalAlignment="Center">
                    <Canvas HorizontalAlignment="Left" Width="24" Margin="4,0,0,0">
                        <Path Stretch="Fill" Fill="#FFE5E5E5" Data="F1 M 27.6807,27.0377C 31.4313,27.0377 34.4727,23.9964 34.4727,20.2471C 34.4727,16.4964 31.4313,13.4551 27.6807,13.4551C 23.9313,13.4551 20.89,16.4964 20.89,20.2471C 20.89,23.9964 23.9313,27.0377 27.6807,27.0377 Z " Height="13.412" UseLayoutRounding="False" Width="13.413" Canvas.Left="5.95" Canvas.Top="2.979" HorizontalAlignment="Left"/>
                        <Path Stretch="Fill" Fill="#FFE5E5E5" Data="F1 M 38.6508,32.7825C 38.6508,30.4772 36.7815,28.6039 34.4721,28.6039L 20.3695,28.6039C 18.0615,28.6039 16.1895,30.4772 16.1895,32.7825L 16.1895,41.6625L 19.9295,41.6625L 19.9295,37.0625C 19.9295,36.6799 20.2388,36.3692 20.6215,36.3692C 21.0041,36.3692 21.3135,36.6799 21.3135,37.0625L 21.3135,41.6625L 33.6001,41.6625L 33.6001,37.0625C 33.6001,36.6799 33.9108,36.3692 34.2921,36.3692C 34.6761,36.3692 34.9855,36.6799 34.9855,37.0625L 34.9855,41.6625L 38.6508,41.6625L 38.6508,32.7825 Z " Height="12.895" UseLayoutRounding="False" Canvas.Left="0.568" Canvas.Top="17.937" Width="22.919" HorizontalAlignment="Left"/>
                    </Canvas>
                    <!--<Image x:Name="ClientPhotoImage" Source="{Binding ClientPhoto}" Margin="0,0,1,3" Stretch="UniformToFill" />-->

                </Border>

                <TextBlock x:Name="FullNameTextBox" Text="{Binding FullName}" d:IsHidden="false" Grid.Column="2" Margin="0" 
						Foreground="#FF0C0B0B" HorizontalAlignment="Left"/>

                <TextBlock Grid.Column="2" Grid.Row="1" TextWrapping="Wrap" x:Name="BirthDateTextBlock" 
						Text="{Binding BirthDate, StringFormat=d}" HorizontalAlignment="Left" Margin="0,0,0,0" />

                <TextBlock x:Name="GenderTextBlock" Grid.Column="2" Grid.Row="2" TextWrapping="Wrap" Text="{Binding GenderName}" 
						VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,0,0,0"/>
            </Grid>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="LookupValueSimpleNameTemplate">
        <TextBlock Text="{Binding Name}" />
    </DataTemplate>
    <DataTemplate x:Key="ItemEditPanelDataTemplate">
        <Grid Margin="8,0,0,0">
            <dataInput:Label Margin="0,0,0,4" d:LayoutOverrides="Width, Height" Foreground="White"/>
        </Grid>
    </DataTemplate>
    <ControlTemplate x:Key="CommonValidationToolTipTemplate" TargetType="ToolTip">
        <Grid x:Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
            <Grid.RenderTransform>
                <TranslateTransform x:Name="Translation" X="-25"/>
            </Grid.RenderTransform>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0"/>
                        <VisualTransition GeneratedDuration="0:0:0.2" To="Open">
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="Translation">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase Amplitude=".3" EasingMode="EaseOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Closed">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Open">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="Translation"/>
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Background="#052A2E31" CornerRadius="5" Margin="4,4,-4,-4"/>
            <Border Background="#152A2E31" CornerRadius="4" Margin="3,3,-3,-3"/>
            <Border Background="#252A2E31" CornerRadius="3" Margin="2,2,-2,-2"/>
            <Border Background="#352A2E31" CornerRadius="2" Margin="1,1,-1,-1"/>
            <Border Background="#FFDC000C" CornerRadius="2">
                <TextBlock Foreground="White" MaxWidth="250" Margin="8,4,8,4" TextWrapping="Wrap" Text="{Binding (Validation.Errors)[0].ErrorContent}" UseLayoutRounding="false"/>
            </Border>
        </Grid>
    </ControlTemplate>


    <!-- CONTROL STYLES-->
    <Style x:Key="DetailsItemsControlStyle" TargetType="ItemsControl">
        <Setter Property="Background" Value="#FFEDEDED"/>
        <Setter Property="Margin" Value="0,0,10,10"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="BorderBrush" Value="DarkGray"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="#FF4D4D4D"/>
    </Style>

    <Style x:Key="DragBorderStyle" TargetType="Border">
        <Setter Property="Background" Value="LightBlue"/>
        <Setter Property="BorderBrush" Value="DarkBlue"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="5"/>
    </Style>

    <!-- Button Styles -->
    <Style x:Key="BaseStandardButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource REMControl_Background_Normal}"/>
        <Setter Property="Foreground" Value="{StaticResource BaseButtonForeground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.3" To="Normal"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BaseButtonForeground}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background2" Duration="0">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BaseButtonForeground_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InnerBorder2" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background3" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InnerBorder3" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background_Disabled" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background6" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource REMControl_Background_Normal}" CornerRadius="3" BorderBrush="Black"/>
                        <Border x:Name="InnerBorder" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_InnerBorder_Normal}"  CornerRadius="2" Margin="1"/>
                        <Border x:Name="Background2" Background="{StaticResource REMControl_Background_MouseOver}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_OuterBorder_MouseOver}" CornerRadius="3" Opacity="0"/>
                        <Border x:Name="InnerBorder2" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_InnerBorder_MouseOver}"  CornerRadius="2" Margin="1" Opacity="0"/>
                        <Border x:Name="Background3" Background="{StaticResource REMControl_Background_Pressed}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_OuterBorder_Pressed}" CornerRadius="3" Opacity="0"/>
                        <Border x:Name="InnerBorder3" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_InnerBorder_Pressed}"  CornerRadius="2" Margin="1" Opacity="0"/>
                        <Border x:Name="Background4" Background="{StaticResource REMControl_Background_Checked}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_OuterBorder_Checked}" CornerRadius="3" Opacity="0" Margin="0,2,0,-2"/>
                        <Border x:Name="InnerBorder4" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_InnerBorder_Checked}"  CornerRadius="2" Margin="1" Opacity="0"/>
                        <Border x:Name="Background5" Background="{StaticResource REMControl_Background_MouseOverChecked}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_OuterBorder_MouseOverChecked}" CornerRadius="3" Opacity="0"/>
                        <Border x:Name="InnerBorder5" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_InnerBorder_MouseOverChecked}"  CornerRadius="2" Margin="1" Opacity="0"/>
                        <Border x:Name="Background6" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_OuterBorder_Checked}" CornerRadius="3" Opacity="0"/>
                        <ContentControl x:Name="Content"
								Margin="{TemplateBinding Padding}"
								Content="{TemplateBinding Content}"
								ContentTemplate="{TemplateBinding ContentTemplate}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								Foreground="{TemplateBinding Foreground}" FontSize="10.667"
								 />
                        <Border x:Name="Background_Disabled" Background="LightGray" Opacity="0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsEnabled" Value="True"/>
    </Style>

    <Style BasedOn="{StaticResource BaseStandardButtonStyle}" TargetType="Button"/>





    <Style x:Key="ButtonChromeRemStyle" TargetType="Telerik_Windows_Controls_Chromes:ButtonChrome">
        <Setter Property="Background" Value="{StaticResource REMControl_Background_Normal}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource REMControl_OuterBorder_Normal}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Telerik_Windows_Controls_Chromes:ButtonChrome">
                    <Grid>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStatesGroup">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="MouseOver" GeneratedDuration="00:00:00.150" To="None"/>
                                    <VisualTransition From="Active" GeneratedDuration="00:00:00.150" To="None"/>
                                    <VisualTransition From="Normal" GeneratedDuration="0" To="MouseOver"/>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.3" To="Normal"/>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0" To="Pressed"/>
                                    <VisualTransition From="Normal" GeneratedDuration="0" To="Checked"/>
                                    <VisualTransition From="None" GeneratedDuration="0" To="Checked"/>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0" To="Checked"/>
                                    <VisualTransition From="Pressed" GeneratedDuration="0" To="Checked"/>
                                    <VisualTransition From="Checked" GeneratedDuration="0:0:0.3" To="Normal"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="None">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Active">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background6" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Highlighted">

                                </VisualState>
                                <VisualState x:Name="Selected">

                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background4" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InnerBorder4" d:IsOptimized="True"/>
                                    </Storyboard>

                                </VisualState>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background4" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InnerBorder4" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DisabledChecked">

                                </VisualState>
                                <VisualState x:Name="MouseOverChecked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00.115" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background5" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InnerBorder5" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00.115" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background2" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InnerBorder2" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00.050" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background3" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InnerBorder3" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">

                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.97" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InnerBorderDisabled" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundDisabled" d:IsOptimized="True"/>
                                    </Storyboard>

                                </VisualState>
                                <VisualState x:Name="NoneVertical">

                                </VisualState>
                                <VisualState x:Name="NormalVertical"/>
                                <VisualState x:Name="MouseOverVertical">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00.115" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PressedVertical">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00.050" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DisabledVertical">

                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStatesGroup">
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.150">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.150" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.115" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background6" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>


                        <Border x:Name="Background" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}"/>
                        <Border x:Name="InnerBorder" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_InnerBorder_Normal}"  CornerRadius="{TemplateBinding CornerRadius}" Margin="1"/>
                        <Border x:Name="Background2" Background="{StaticResource REMControl_Background_MouseOver}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_OuterBorder_MouseOver}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0"/>
                        <Border x:Name="InnerBorder2" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_InnerBorder_MouseOver}"  CornerRadius="{TemplateBinding CornerRadius}" Margin="1" Opacity="0"/>
                        <Border x:Name="Background3" Background="{StaticResource REMControl_Background_Pressed}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_OuterBorder_Pressed}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0"/>
                        <Border x:Name="InnerBorder3" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_InnerBorder_Pressed}"  CornerRadius="{TemplateBinding CornerRadius}" Margin="1" Opacity="0"/>
                        <Border x:Name="Background4" Background="{StaticResource REMControl_Background_Checked}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_OuterBorder_Checked}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0"/>
                        <Border x:Name="InnerBorder4" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_InnerBorder_Checked}"  CornerRadius="{TemplateBinding CornerRadius}" Margin="1" Opacity="0"/>
                        <Border x:Name="Background5" Background="{StaticResource REMControl_Background_MouseOverChecked}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_OuterBorder_MouseOverChecked}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0"/>
                        <Border x:Name="InnerBorder5" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_InnerBorder_MouseOverChecked}"  CornerRadius="{TemplateBinding CornerRadius}" Margin="1" Opacity="0"/>
                        <Border x:Name="Background6" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_OuterBorder_Focused}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0"/>
                        <Border x:Name="BackgroundDisabled" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Background="#FFB2B1B1" BorderBrush="#FFC8C8C8"  Opacity="0"/>
                        <Border x:Name="InnerBorderDisabled" BorderThickness="{TemplateBinding BorderThickness}"  CornerRadius="{TemplateBinding CornerRadius}" Margin="1" BorderBrush="#FFB2B2B2"  Opacity="0"/>

                        <Border x:Name="CommonStatesWrapper">
                            <Border x:Name="FocusVisual" Visibility="Collapsed" Opacity="0" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" BorderBrush="{StaticResource REMControl_OuterBorder_Focused}">
                            </Border>
                        </Border>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadToggleButtonRemStyle" TargetType="telerik:RadToggleButton">
        <Setter Property="Background" Value="{StaticResource REMControl_Background_Normal}"/>
        <Setter Property="Foreground" Value="{StaticResource BaseButtonForeground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadToggleButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BaseButtonForeground}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Content" To="0.9"
                							Duration="0" Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BaseButtonForeground_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BaseButtonForeground_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BaseButtonForeground_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Telerik_Windows_Controls_Chromes:ButtonChrome
                			Style="{StaticResource ButtonChromeRemStyle}"
                			Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
                			BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                			BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}"
                			RenderEnabled="{TemplateBinding IsEnabled}"
                			RenderNormal="{TemplateBinding IsBackgroundVisible}"
                			RenderMouseOver="{TemplateBinding IsMouseOver}"
                			RenderPressed="{TemplateBinding IsPressed}"
                			RenderFocused="{TemplateBinding IsFocused}"
                			RenderChecked="{TemplateBinding IsChecked}"
                			CornerRadius="{TemplateBinding CornerRadius}" />
                        <ContentControl x:Name="Content"
                			Margin="{TemplateBinding Padding}"
                			Content="{TemplateBinding Content}"
                			ContentTemplate="{TemplateBinding ContentTemplate}"
                			VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                			HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                			Foreground="{Binding Foreground, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
								     />
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BorderlessGrayButtonChromeStyle" TargetType="Telerik_Windows_Controls_Chromes:ButtonChrome">
        <Setter Property="Background" Value="{StaticResource BorderlessGrayButtonBackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="{StaticResource REMControl_OuterBorder_Normal}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Telerik_Windows_Controls_Chromes:ButtonChrome">
                    <Grid>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStatesGroup">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0" To="None"/>
                                    <VisualTransition From="Active" GeneratedDuration="00:00:00.150" To="None"/>
                                    <VisualTransition From="Normal" GeneratedDuration="0" To="MouseOver"/>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0" To="Normal"/>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0" To="Pressed"/>
                                    <VisualTransition From="Normal" GeneratedDuration="0" To="Checked"/>
                                    <VisualTransition From="None" GeneratedDuration="0" To="Checked"/>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0" To="Checked"/>
                                    <VisualTransition From="Pressed" GeneratedDuration="0" To="Checked"/>
                                    <VisualTransition From="Checked" GeneratedDuration="0:0:0.3" To="Normal"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="None">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Active">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background6" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Highlighted"/>
                                <VisualState x:Name="Selected">

                                </VisualState>
                                <VisualState x:Name="Checked">

                                </VisualState>
                                <VisualState x:Name="DisabledChecked"/>
                                <VisualState x:Name="MouseOverChecked">

                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00.115" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background2" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="canvas" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00.050" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background3" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InnerBorder3" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="canvas" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">

                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.97" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InnerBorderDisabled" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundDisabled" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="canvas" d:IsOptimized="True"/>
                                    </Storyboard>

                                </VisualState>
                                <VisualState x:Name="NoneVertical"/>
                                <VisualState x:Name="NormalVertical"/>
                                <VisualState x:Name="MouseOverVertical">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00.115" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PressedVertical">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00.050" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DisabledVertical"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStatesGroup">
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.150">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.150" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Focused">

                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>


                        <Border x:Name="Background" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0"/>
                        <Border x:Name="InnerBorder" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_InnerBorder_Normal}"  CornerRadius="{TemplateBinding CornerRadius}" Margin="1" Opacity="0"/>
                        <Border x:Name="Background2" Background="{StaticResource BorderlessGrayButtonBackgroundBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" BorderBrush="{StaticResource BorderlessGrayButtonBackgroundBrush}" Opacity="0"/>
                        <Border x:Name="InnerBorder2" BorderThickness="{TemplateBinding BorderThickness}"  CornerRadius="{TemplateBinding CornerRadius}" Margin="1" Opacity="0"/>
                        <Border x:Name="Background3" Background="{StaticResource CloseButtonGrayBackgroundBrushPressed}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource CloseButtonGrayBackgroundBrushPressed}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0"/>
                        <Border x:Name="InnerBorder3" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{x:Null}"  CornerRadius="{TemplateBinding CornerRadius}" Margin="1" Opacity="0"/>
                        <Border x:Name="Background4" Background="{StaticResource REMControl_Background_Checked}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_OuterBorder_Checked}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0"/>
                        <Border x:Name="InnerBorder4" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_InnerBorder_Checked}"  CornerRadius="{TemplateBinding CornerRadius}" Margin="1" Opacity="0"/>
                        <Border x:Name="Background5" Background="{StaticResource REMControl_Background_MouseOverChecked}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_OuterBorder_MouseOverChecked}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0"/>
                        <Border x:Name="InnerBorder5" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_InnerBorder_MouseOverChecked}"  CornerRadius="{TemplateBinding CornerRadius}" Margin="1" Opacity="0"/>
                        <Border x:Name="Background6" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0"/>
                        <Border x:Name="BackgroundDisabled" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Background="#FFB2B1B1" BorderBrush="#FFC8C8C8"  Opacity="0"/>
                        <Border x:Name="InnerBorderDisabled" BorderThickness="{TemplateBinding BorderThickness}"  CornerRadius="{TemplateBinding CornerRadius}" Margin="1" BorderBrush="#FFB2B2B2"  Opacity="0"/>

                        <Border x:Name="CommonStatesWrapper">
                            <Border x:Name="FocusVisual" Visibility="Collapsed" Opacity="0" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" BorderBrush="{StaticResource REMControl_OuterBorder_Focused}"/>
                        </Border>

                        <Canvas Width="10" Height="9" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Rectangle Fill="#FF5A5A5A" Height="8" Canvas.Left="8.756" Canvas.Top="5.417" Width="2" UseLayoutRounding="False" d:LayoutRounding="Auto" RenderTransformOrigin="0.5,0.5">
                                <Rectangle.RenderTransform>
                                    <CompositeTransform Rotation="45" TranslateX="-4.836" TranslateY="-5.323" ScaleY="1.135" ScaleX="0.881"/>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                            <Rectangle Fill="#FF5A5A5A" Height="8" Canvas.Left="5.084" Canvas.Top="10.834" Width="2" RenderTransformOrigin="0.5,0.5" UseLayoutRounding="False" d:LayoutRounding="Auto">
                                <Rectangle.RenderTransform>
                                    <CompositeTransform Rotation="135" TranslateX="-1.176" TranslateY="-10.734" ScaleY="1.135" ScaleX="0.881"/>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                        </Canvas>
                        <Canvas x:Name="canvas" Width="10" Height="9" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0">
                            <Rectangle Fill="White" Height="8" Canvas.Left="8.756" Canvas.Top="5.417" Width="2" UseLayoutRounding="False" d:LayoutRounding="Auto" RenderTransformOrigin="0.5,0.5">
                                <Rectangle.RenderTransform>
                                    <CompositeTransform Rotation="45" TranslateX="-4.836" TranslateY="-5.323" ScaleY="1.135" ScaleX="0.881"/>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                            <Rectangle Fill="White" Height="8" Canvas.Left="5.084" Canvas.Top="10.834" Width="2" RenderTransformOrigin="0.5,0.5" UseLayoutRounding="False" d:LayoutRounding="Auto">
                                <Rectangle.RenderTransform>
                                    <CompositeTransform Rotation="135" TranslateX="-1.176" TranslateY="-10.734" ScaleY="1.135" ScaleX="0.881"/>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                        </Canvas>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="BorderlessButtonBaseStyle" TargetType="Telerik_Windows_Controls_Chromes:ButtonChrome">
        <Setter Property="Background" Value="{StaticResource REMControl_Background_Normal}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource REMControl_OuterBorder_Normal}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Telerik_Windows_Controls_Chromes:ButtonChrome">
                    <Grid>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStatesGroup">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0" To="None"/>
                                    <VisualTransition From="Active" GeneratedDuration="00:00:00.150" To="None"/>
                                    <VisualTransition From="Normal" GeneratedDuration="0" To="MouseOver"/>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0" To="Normal"/>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0" To="Pressed"/>
                                    <VisualTransition From="Normal" GeneratedDuration="0" To="Checked"/>
                                    <VisualTransition From="None" GeneratedDuration="0" To="Checked"/>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0" To="Checked"/>
                                    <VisualTransition From="Pressed" GeneratedDuration="0" To="Checked"/>
                                    <VisualTransition From="Checked" GeneratedDuration="0:0:0.3" To="Normal"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="None">
                                </VisualState>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Active">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background6" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Highlighted"/>
                                <VisualState x:Name="Selected">

                                </VisualState>
                                <VisualState x:Name="Checked">

                                </VisualState>
                                <VisualState x:Name="DisabledChecked"/>
                                <VisualState x:Name="MouseOverChecked">

                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00.115" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background2" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InnerBorder2" d:IsOptimized="True"/>

                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00.050" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background3" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InnerBorder3" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">

                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.97" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InnerBorderDisabled" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundDisabled" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BackgroundDisabled">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="InnerBorderDisabled">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                    </Storyboard>

                                </VisualState>
                                <VisualState x:Name="NoneVertical"/>
                                <VisualState x:Name="NormalVertical"/>
                                <VisualState x:Name="MouseOverVertical">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00.115" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PressedVertical">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00.050" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DisabledVertical"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStatesGroup">
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.150">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.150" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Focused">

                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>


                        <Border x:Name="Background" BorderThickness="{TemplateBinding BorderThickness}" Opacity="0">
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF1B1B1B" Offset="0.639"/>
                                    <GradientStop Color="#FFCACACA"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                        </Border>
                        <Border x:Name="InnerBorder" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_InnerBorder_Normal}"  CornerRadius="{TemplateBinding CornerRadius}" Margin="1" Opacity="0"/>
                        <Border x:Name="Background2" Background="{StaticResource CloseButtonGrayBackgroundBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" BorderBrush="{StaticResource CloseButtonGrayOuterBorderBrush}" Opacity="0"/>
                        <Border x:Name="InnerBorder2" BorderThickness="{TemplateBinding BorderThickness}"  CornerRadius="{TemplateBinding CornerRadius}" Margin="1" Opacity="0"/>
                        <Border x:Name="Background3" Background="{StaticResource CloseButtonGrayBackgroundBrushPressed}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource CloseButtonGrayBackgroundBrushPressed}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0"/>
                        <Border x:Name="InnerBorder3" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{x:Null}"  CornerRadius="{TemplateBinding CornerRadius}" Margin="1" Opacity="0"/>
                        <Border x:Name="Background4" Background="{StaticResource REMControl_Background_Checked}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_OuterBorder_Checked}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0"/>
                        <Border x:Name="InnerBorder4" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_InnerBorder_Checked}"  CornerRadius="{TemplateBinding CornerRadius}" Margin="1" Opacity="0"/>
                        <Border x:Name="Background5" Background="{StaticResource REMControl_Background_MouseOverChecked}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_OuterBorder_MouseOverChecked}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0"/>
                        <Border x:Name="InnerBorder5" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_InnerBorder_MouseOverChecked}"  CornerRadius="{TemplateBinding CornerRadius}" Margin="1" Opacity="0"/>
                        <Border x:Name="Background6" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0"/>
                        <Border x:Name="BackgroundDisabled" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Background="#FFB2B1B1" BorderBrush="#FFC8C8C8"  Opacity="0"/>
                        <Border x:Name="InnerBorderDisabled" BorderThickness="{TemplateBinding BorderThickness}"  CornerRadius="{TemplateBinding CornerRadius}" Margin="1" BorderBrush="#FFB2B2B2"  Opacity="0"/>

                        <Border x:Name="CommonStatesWrapper">
                            <Border x:Name="FocusVisual" Visibility="Collapsed" Opacity="0" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" BorderBrush="{StaticResource REMControl_OuterBorder_Focused}"/>
                        </Border>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BorderlessGrayButtonBaseStyle" TargetType="Telerik_Windows_Controls_Chromes:ButtonChrome">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="{StaticResource REMControl_OuterBorder_Normal}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Telerik_Windows_Controls_Chromes:ButtonChrome">
                    <Grid>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStatesGroup">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0" To="None"/>
                                    <VisualTransition From="Active" GeneratedDuration="00:00:00.150" To="None"/>
                                    <VisualTransition From="Normal" GeneratedDuration="0" To="MouseOver"/>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0" To="Normal"/>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0" To="Pressed"/>
                                    <VisualTransition From="Normal" GeneratedDuration="0" To="Checked"/>
                                    <VisualTransition From="None" GeneratedDuration="0" To="Checked"/>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0" To="Checked"/>
                                    <VisualTransition From="Pressed" GeneratedDuration="0" To="Checked"/>
                                    <VisualTransition From="Checked" GeneratedDuration="0:0:0.3" To="Normal"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="None">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Background2">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="InnerBorder2">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Active">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background6" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Highlighted"/>
                                <VisualState x:Name="Selected">

                                </VisualState>
                                <VisualState x:Name="Checked">

                                </VisualState>
                                <VisualState x:Name="DisabledChecked"/>
                                <VisualState x:Name="MouseOverChecked">

                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00.115" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Background2">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="InnerBorder2">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00.050" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background3" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InnerBorder3" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">

                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.97" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InnerBorderDisabled" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundDisabled" d:IsOptimized="True"/>

                                    </Storyboard>

                                </VisualState>
                                <VisualState x:Name="NoneVertical"/>
                                <VisualState x:Name="NormalVertical"/>
                                <VisualState x:Name="MouseOverVertical">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00.115" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PressedVertical">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00.050" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DisabledVertical"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStatesGroup">
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.150">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.150" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Focused">

                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>


                        <Border x:Name="Background" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"  CornerRadius="{TemplateBinding CornerRadius}"/>
                        <Border x:Name="InnerBorder" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_InnerBorder_Normal}"  CornerRadius="{TemplateBinding CornerRadius}" Margin="1" Opacity="0"/>
                        <Border x:Name="Background2" Background="{StaticResource BorderlessGrayButtonBackgroundBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" BorderBrush="{StaticResource CloseButtonGrayOuterBorderBrush}" Visibility="Collapsed"/>
                        <Border x:Name="InnerBorder2" BorderThickness="{TemplateBinding BorderThickness}"  CornerRadius="{TemplateBinding CornerRadius}" Margin="1" Visibility="Collapsed"/>
                        <Border x:Name="Background3" Background="{StaticResource CloseButtonGrayBackgroundBrushPressed}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource CloseButtonGrayBackgroundBrushPressed}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0"/>
                        <Border x:Name="InnerBorder3" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{x:Null}"  CornerRadius="{TemplateBinding CornerRadius}" Margin="1" Opacity="0"/>
                        <Border x:Name="Background4" Background="{StaticResource REMControl_Background_Checked}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_OuterBorder_Checked}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0"/>
                        <Border x:Name="InnerBorder4" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_InnerBorder_Checked}"  CornerRadius="{TemplateBinding CornerRadius}" Margin="1" Opacity="0"/>
                        <Border x:Name="Background5" Background="{StaticResource REMControl_Background_MouseOverChecked}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_OuterBorder_MouseOverChecked}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0"/>
                        <Border x:Name="InnerBorder5" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_InnerBorder_MouseOverChecked}"  CornerRadius="{TemplateBinding CornerRadius}" Margin="1" Opacity="0"/>
                        <Border x:Name="Background6" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0"/>
                        <Border x:Name="BackgroundDisabled" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Background="#FFB2B1B1" BorderBrush="#FFC8C8C8"  Opacity="0"/>
                        <Border x:Name="InnerBorderDisabled" BorderThickness="{TemplateBinding BorderThickness}"  CornerRadius="{TemplateBinding CornerRadius}" Margin="1" BorderBrush="#FFB2B2B2"  Opacity="0"/>

                        <Border x:Name="CommonStatesWrapper">
                            <Border x:Name="FocusVisual" Visibility="Collapsed" Opacity="0" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" BorderBrush="{StaticResource REMControl_OuterBorder_Focused}"/>
                        </Border>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="WorkPadNavigationButtonBaseStyle" TargetType="Telerik_Windows_Controls_Chromes:ButtonChrome">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="CornerRadius" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Telerik_Windows_Controls_Chromes:ButtonChrome">
                    <Grid>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStatesGroup">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="MouseOver" To="None"/>
                                    <VisualTransition From="Active" GeneratedDuration="00:00:00.150" To="None"/>
                                    <VisualTransition From="Normal" GeneratedDuration="0" To="MouseOver"/>
                                    <VisualTransition From="MouseOver" To="Normal"/>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0" To="Pressed"/>
                                    <VisualTransition From="Normal" GeneratedDuration="0" To="Checked"/>
                                    <VisualTransition From="None" GeneratedDuration="0" To="Checked"/>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0" To="Checked"/>
                                    <VisualTransition From="Pressed" GeneratedDuration="0" To="Checked"/>
                                    <VisualTransition From="Checked" GeneratedDuration="0:0:0.3" To="Normal"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="None">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Active">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background6" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Highlighted">

                                </VisualState>
                                <VisualState x:Name="Selected">

                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background4" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InnerBorder4" d:IsOptimized="True"/>
                                    </Storyboard>

                                </VisualState>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background4" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InnerBorder4" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DisabledChecked">

                                </VisualState>
                                <VisualState x:Name="MouseOverChecked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00.115" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background5" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InnerBorder5" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00.115" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background2" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InnerBorder2" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.CornerRadius)" Storyboard.TargetName="Background2">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <CornerRadius>4,4,0,0</CornerRadius>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00.050" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="0.11" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InnerBorder3" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background3" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">

                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InnerBorderDisabled" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundDisabled" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="#FFF7D5A3" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="BackgroundDisabled" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.CornerRadius)" Storyboard.TargetName="BackgroundDisabled">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <CornerRadius>4,4,0,0</CornerRadius>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>

                                </VisualState>
                                <VisualState x:Name="NoneVertical">

                                </VisualState>
                                <VisualState x:Name="NormalVertical"/>
                                <VisualState x:Name="MouseOverVertical">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00.115" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PressedVertical">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00.050" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DisabledVertical">

                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStatesGroup">
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.150">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.150" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.115" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background6" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>


                        <Border Margin="0,0,0,0" Background="#66FFFFFF" />


                        <Border x:Name="Background" BorderThickness="1,0,0,0">
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.015,0.485" StartPoint="0,0.483">
                                    <GradientStop Color="#FF6C6C6C" Offset="0.309"/>
                                    <GradientStop Color="Transparent" Offset="0.459"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                        </Border>
                        <Border x:Name="InnerBorder" BorderThickness="0,0,1,0">
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.985,0.486" StartPoint="1,0.484">
                                    <GradientStop Color="#FF6C6C6C" Offset="0.309"/>
                                    <GradientStop Color="Transparent" Offset="0.459"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                        </Border>
                        <Border x:Name="Background2" Opacity="0">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.497,1.014" StartPoint="0.497,0.03">
                                    <GradientStop Color="#33959595" Offset="1"/>
                                    <GradientStop Color="#19FFFFFF" Offset="0.387"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border x:Name="InnerBorder2" BorderThickness="{TemplateBinding BorderThickness}"  CornerRadius="{TemplateBinding CornerRadius}" Margin="1" Opacity="0"/>
                        <Border x:Name="Background3" BorderBrush="#FF6C6C6C" BorderThickness="1,0" Opacity="0">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,2.691" StartPoint="0.5,0">
                                    <GradientStop Color="#99808080" Offset="0.007"/>
                                    <GradientStop Color="Transparent" Offset="1"/>
                                    <GradientStop Color="#1AC6C6C6" Offset="0.435"/>
                                    <GradientStop Color="#99E0E0E0" Offset="0.006"/>
                                    <GradientStop Color="#7C8B8B8B" Offset="0.195"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border x:Name="InnerBorder3" BorderThickness="{TemplateBinding BorderThickness}"  CornerRadius="{TemplateBinding CornerRadius}" Margin="1" Opacity="0"/>
                        <Border x:Name="Background4" Background="{StaticResource REMControl_Background_Checked}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_OuterBorder_Checked}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0"/>
                        <Border x:Name="InnerBorder4" BorderThickness="{TemplateBinding BorderThickness}"  CornerRadius="{TemplateBinding CornerRadius}" Margin="1" Opacity="0"/>
                        <Border x:Name="Background5" Background="{StaticResource REMControl_Background_MouseOverChecked}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_OuterBorder_MouseOverChecked}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0"/>
                        <Border x:Name="InnerBorder5" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_InnerBorder_MouseOverChecked}"  CornerRadius="{TemplateBinding CornerRadius}" Margin="1" Opacity="0"/>
                        <Border x:Name="Background6" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0"/>
                        <Border x:Name="BackgroundDisabled" BorderThickness="{TemplateBinding BorderThickness}" Background="#FFB2B1B1"  Opacity="0"/>
                        <Border x:Name="InnerBorderDisabled" BorderThickness="{TemplateBinding BorderThickness}"  CornerRadius="{TemplateBinding CornerRadius}" Margin="1" BorderBrush="#FFB2B2B2"  Opacity="0"/>

                        <Border x:Name="CommonStatesWrapper">
                            <Border x:Name="FocusVisual" Visibility="Collapsed" Opacity="0" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}"/>
                        </Border>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="WorkPadNavigationButtonStyle" BasedOn="{StaticResource BaseStandardButtonStyle}" TargetType="telerik:RadButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Content" To="0.9"
                							Duration="0" Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Checked"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Selected"/>
                                <VisualState x:Name="Active"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Telerik_Windows_Controls_Chromes:ButtonChrome
                			Style="{StaticResource WorkPadNavigationButtonBaseStyle}"
                			Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
                			BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                			BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}"
                			RenderEnabled="{TemplateBinding IsEnabled}"
                			RenderNormal="{TemplateBinding IsBackgroundVisible}"
                			RenderMouseOver="{TemplateBinding IsMouseOver}"
                			RenderPressed="{TemplateBinding IsPressed}"
                			RenderFocused="{TemplateBinding IsFocused}"
                			CornerRadius="{TemplateBinding CornerRadius}" Margin="0,0,-1,0" />
                        <ContentControl x:Name="Content"
                			Content="{TemplateBinding Content}"
                			ContentTemplate="{TemplateBinding ContentTemplate}"
                			VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                			HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                			Foreground="{StaticResource BorderlessButtonForeground}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" UseLayoutRounding="True" Padding="4,0" FontWeight="Bold" FontSize="10.667" 
								     >
                            <ContentControl.Effect>
                                <DropShadowEffect Color="White" ShadowDepth="1" BlurRadius="0" Direction="323"/>
                            </ContentControl.Effect>
                        </ContentControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="WorkPadNavigationStyle" BasedOn="{StaticResource WorkPadNavigationButtonStyle}" TargetType="telerik:RadButton">
        <Setter Property="Padding" Value="3"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="Foreground" Value="{StaticResource BorderlessButtonForeground}"/>
        <Setter Property="Background" Value="{StaticResource WorkPadHeaderControl_Background_Normal}"/>
        <Setter Property="BorderBrush" Value="{StaticResource WorkPadHeaderControl_OuterBorder_Normal}"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
    </Style>

    <Style x:Key="WorkPadNavigationToggleButtonStyle" BasedOn="{StaticResource RadToggleButtonRemStyle}" TargetType="telerik:RadToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Content" To="0.9"
                							Duration="0" Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Checked"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Selected"/>
                                <VisualState x:Name="Active"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Telerik_Windows_Controls_Chromes:ButtonChrome
                			Style="{StaticResource WorkPadNavigationButtonBaseStyle}"
                			Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
                			BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                			BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}"
                			RenderEnabled="{TemplateBinding IsEnabled}"
                			RenderNormal="{TemplateBinding IsBackgroundVisible}"
                			RenderMouseOver="{TemplateBinding IsMouseOver}"
                			RenderPressed="{TemplateBinding IsPressed}"
                			RenderFocused="{TemplateBinding IsFocused}"
                			CornerRadius="{TemplateBinding CornerRadius}" Margin="0,0,-1,0" />
                        <ContentControl x:Name="Content"
                			Content="{TemplateBinding Content}"
                			ContentTemplate="{TemplateBinding ContentTemplate}"
                			VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                			HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                			Foreground="{StaticResource BorderlessButtonForeground}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" UseLayoutRounding="True" Padding="4,0" FontWeight="Bold" FontSize="10.667"
								     >
                            <ContentControl.Effect>
                                <DropShadowEffect Color="White" ShadowDepth="1" BlurRadius="0" Direction="323"/>
                            </ContentControl.Effect>
                        </ContentControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="RadButtonRemStyle" BasedOn="{StaticResource BaseStandardButtonStyle}" TargetType="telerik:RadButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BaseButtonForeground}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Content" To="0.9"
                							Duration="0" Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BaseButtonForeground_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BaseButtonForeground_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BaseButtonForeground_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BaseButtonForeground_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Active">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BaseButtonForeground_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Telerik_Windows_Controls_Chromes:ButtonChrome
                			Style="{StaticResource ButtonChromeRemStyle}"
                			Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
                			BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                			BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}"
                			RenderEnabled="{TemplateBinding IsEnabled}"
                			RenderNormal="{TemplateBinding IsBackgroundVisible}"
                			RenderMouseOver="{TemplateBinding IsMouseOver}"
                			RenderPressed="{TemplateBinding IsPressed}"
                			RenderFocused="{TemplateBinding IsFocused}"
                			CornerRadius="{TemplateBinding CornerRadius}" />
                        <ContentControl x:Name="Content"
                			Content="{TemplateBinding Content}"
                			ContentTemplate="{TemplateBinding ContentTemplate}"
                			VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                			HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                			Foreground="{Binding Foreground, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" UseLayoutRounding="True" Padding="4,0"
								     />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	<Style x:Key="FormButtonChromeRemStyle" TargetType="Telerik_Windows_Controls_Chromes:ButtonChrome">
		<Setter Property="Background" Value="{StaticResource FormButtonBackgroundBrushNormal}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="{StaticResource FormButtonOuterBorderBrushNormal}"/>
		<Setter Property="Padding" Value="8"/>
		<Setter Property="FontSize" Value="13.333"/>
        
        <Setter Property="FontFamily" Value="Portable User Interface"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Telerik_Windows_Controls_Chromes:ButtonChrome">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStatesGroup">
								<VisualStateGroup.Transitions>
									<VisualTransition From="MouseOver" GeneratedDuration="00:00:00.150" To="None"/>
									<VisualTransition From="Active" GeneratedDuration="00:00:00.150" To="None"/>
									<VisualTransition From="Normal" GeneratedDuration="0" To="MouseOver"/>
									<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.3" To="Normal"/>
									<VisualTransition From="MouseOver" GeneratedDuration="0" To="Pressed"/>
									<VisualTransition From="Normal" GeneratedDuration="0" To="Checked"/>
									<VisualTransition From="None" GeneratedDuration="0" To="Checked"/>
									<VisualTransition From="MouseOver" GeneratedDuration="0" To="Checked"/>
									<VisualTransition From="Pressed" GeneratedDuration="0" To="Checked"/>
									<VisualTransition From="Checked" GeneratedDuration="0:0:0.3" To="Normal"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="None">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity">
											<LinearDoubleKeyFrame KeyTime="0:0:0" Value="0" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="Active">
									<Storyboard>
										<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background6" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Highlighted"/>
								<VisualState x:Name="Selected">

									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background4" d:IsOptimized="True"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InnerBorder4" d:IsOptimized="True"/>
									</Storyboard>

								</VisualState>
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background4" d:IsOptimized="True"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InnerBorder4" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="DisabledChecked"/>
								<VisualState x:Name="MouseOverChecked">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background5" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity">
											<DiscreteDoubleKeyFrame KeyTime="00:00:00.115" Value="0" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background2" d:IsOptimized="True"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InnerBorder2" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity">
											<DiscreteDoubleKeyFrame KeyTime="00:00:00.050" Value="0" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background3" d:IsOptimized="True"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InnerBorder3" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">

									<Storyboard>
										<DoubleAnimation Duration="0" To="0.97" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InnerBorderDisabled" d:IsOptimized="True"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundDisabled" d:IsOptimized="True"/>
									</Storyboard>

								</VisualState>
								<VisualState x:Name="NoneVertical"/>
								<VisualState x:Name="NormalVertical"/>
								<VisualState x:Name="MouseOverVertical">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity">
											<DiscreteDoubleKeyFrame KeyTime="00:00:00.115" Value="0" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PressedVertical">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity">
											<DiscreteDoubleKeyFrame KeyTime="00:00:00.050" Value="0" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="DisabledVertical"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStatesGroup">
								<VisualState x:Name="Unfocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="00:00:00.150">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity">
											<LinearDoubleKeyFrame KeyTime="00:00:00.150" Value="0" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Focused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity">
											<LinearDoubleKeyFrame KeyTime="00:00:00.115" Value="1" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background6" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>


						<Border x:Name="Background" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}"/>
						<Border x:Name="InnerBorder" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_InnerBorder_Normal}"  CornerRadius="{TemplateBinding CornerRadius}" Margin="1" Visibility="Collapsed"/>
						<Border x:Name="Background2" Background="{StaticResource FormButtonBackgroundBrushMouseOver}" BorderBrush="{StaticResource FormButtonOuterBorderBrushMouseOver}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0" BorderThickness="{TemplateBinding BorderThickness}"/>
						<Border x:Name="InnerBorder2" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_InnerBorder_MouseOver}"  CornerRadius="{TemplateBinding CornerRadius}" Margin="1" Opacity="0" Visibility="Collapsed"/>
						<Border x:Name="Background3" Background="{StaticResource FormButtonBackgroundBrushPressed}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource FormButtonOuterBorderBrushPressed}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0"/>
						<Border x:Name="InnerBorder3" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_InnerBorder_Pressed}"  CornerRadius="{TemplateBinding CornerRadius}" Margin="1" Opacity="0" Visibility="Collapsed"/>
						<Border x:Name="Background4" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" BorderBrush="{StaticResource FormButtonOuterBorderBrushChecked}" Background="{StaticResource FormButtonBackgroundBrushChecked}" Opacity="0"/>
						<Border x:Name="InnerBorder4" BorderBrush="#FF292929"  CornerRadius="{TemplateBinding CornerRadius}" Margin="1" BorderThickness="2,0" Opacity="0"/>
						<Border x:Name="Background5" Background="{StaticResource FormButtonBackgroundBrushChecked}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource FormButtonOuterBorderBrushChecked}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0"/>
						<Border x:Name="InnerBorder5" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_InnerBorder_MouseOverChecked}"  CornerRadius="{TemplateBinding CornerRadius}" Margin="1" Opacity="0" Visibility="Collapsed"/>
						<Border x:Name="Background6" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_OuterBorder_Focused}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0"/>
						<Border x:Name="BackgroundDisabled" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Background="#FFB2B1B1" BorderBrush="#FFC8C8C8"  Opacity="0"/>
						<Border x:Name="InnerBorderDisabled" BorderThickness="{TemplateBinding BorderThickness}"  CornerRadius="{TemplateBinding CornerRadius}" Margin="1" BorderBrush="#FFB2B2B2"  Opacity="0" Visibility="Collapsed"/>

						<Border x:Name="CommonStatesWrapper">
							<Border x:Name="FocusVisual" Visibility="Collapsed" Opacity="0" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" BorderBrush="{StaticResource REMControl_OuterBorder_Focused}"/>
						</Border>

					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
    </Style>
	
	<Style x:Key="FormButtonRemStyle" TargetType="telerik:RadButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource FormButtonForegroundBrushNormal}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Content" To="0.9"
                							Duration="0" Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource FormButtonForegroundBrushNormal}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource FormButtonForegroundBrushNormal}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource FormButtonForegroundBrushMouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource FormButtonForegroundBrushNormal}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Active">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource FormButtonForegroundBrushNormal}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
						
                        <Telerik_Windows_Controls_Chromes:ButtonChrome 
							Style="{StaticResource FormButtonChromeRemStyle}" 
							Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
                			BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                			BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}"
                			RenderEnabled="{TemplateBinding IsEnabled}"
                			RenderNormal="{TemplateBinding IsBackgroundVisible}"
                			RenderMouseOver="{TemplateBinding IsMouseOver}"
                			RenderPressed="{TemplateBinding IsPressed}"
                			RenderFocused="{TemplateBinding IsFocused}"
                			CornerRadius="{TemplateBinding CornerRadius}" />
                        <ContentControl x:Name="Content"
                			Content="{TemplateBinding Content}"
                			ContentTemplate="{TemplateBinding ContentTemplate}"
                			VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                			HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                			Foreground="{Binding Foreground, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" UseLayoutRounding="True"
								     />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{StaticResource FormButtonBackgroundBrushNormal}"/>
        <Setter Property="BorderBrush" Value="{StaticResource FormButtonOuterBorderBrushNormal}"/>
        <Setter Property="Foreground" Value="#FF4D4B4B"/>
    </Style>
	
<Style x:Key="FormRadioButtonRemStyle" TargetType="telerik:RadRadioButton">
        <Setter Property="Background" Value="{StaticResource FormButtonBackgroundBrushNormal}"/>
        <Setter Property="Foreground" Value="{StaticResource FormButtonForegroundBrushNormal}"/>
        <Setter Property="BorderThickness" Value="1"/>
		<Setter Property="CornerRadius" Value="4"/>
        <Setter Property="MinWidth" Value="40"/>
		<Setter Property="MinHeight" Value="22"/>
		<Setter Property="Margin" Value="0,0,10,0"/>
        <Setter Property="BorderBrush" Value="{StaticResource FormButtonOuterBorderBrushNormal}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadRadioButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource FormButtonForegroundBrushNormal}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Content" To="0.9"
                							Duration="0" Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource FormButtonForegroundBrushNormal}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource FormButtonForegroundBrushChecked}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource FormButtonForegroundBrushMouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource FormButtonForegroundBrushNormal}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Active">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BaseButtonForeground}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Telerik_Windows_Controls_Chromes:ButtonChrome
                			Style="{StaticResource FormButtonChromeRemStyle}"
                			Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
                			BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                			BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}"
                			RenderEnabled="{TemplateBinding IsEnabled}"
                			RenderNormal="{TemplateBinding IsBackgroundVisible}"
                			RenderMouseOver="{TemplateBinding IsMouseOver}"
                			RenderPressed="{TemplateBinding IsPressed}"
                			RenderFocused="{TemplateBinding IsFocused}"
                			RenderChecked="{TemplateBinding IsChecked}"
                			CornerRadius="{TemplateBinding CornerRadius}" />
                        <ContentControl x:Name="Content"
                			Content="{TemplateBinding Content}"
                			ContentTemplate="{TemplateBinding ContentTemplate}"
                			VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                			HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                			Foreground="{Binding Foreground, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="4,0"
								     />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	<Style x:Key="FormToggleButtonRemStyle" TargetType="telerik:RadToggleButton">
		<Setter Property="Background" Value="{StaticResource FormButtonBackgroundBrushNormal}"/>
		<Setter Property="Foreground" Value="{StaticResource FormButtonForegroundBrushNormal}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="CornerRadius" Value="4"/>
		<Setter Property="MinWidth" Value="40"/>
		<Setter Property="MinHeight" Value="20"/>
		<Setter Property="Margin" Value="0,0,10,0"/>
		<Setter Property="BorderBrush" Value="{StaticResource FormButtonOuterBorderBrushNormal}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="telerik:RadToggleButton" x:Name="FormToggleButtonContentTemplate">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition From="Normal" GeneratedDuration="0" To="MouseOver"/>
									<VisualTransition From="MouseOver" GeneratedDuration="0" To="Normal"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Normal">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource FormButtonForegroundBrushNormal}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>                        
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="Content" To="0.9"
											Duration="0" Storyboard.TargetProperty="Opacity" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="buttonChrome" d:IsOptimized="True"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Checked">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource FormButtonForegroundBrushChecked}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>                        
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="buttonChrome" d:IsOptimized="True"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Selected">
									<Storyboard>
										<ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Active"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0" To="Focused"/>
									<VisualTransition From="Focused" GeneratedDuration="0" To="Unfocused"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Focused"/>
								<VisualState x:Name="Unfocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Telerik_Windows_Controls_Chromes:ButtonChrome x:Name="buttonChrome" 
							Grid.Column="0"
							Style="{StaticResource FormButtonChromeRemStyle}"
							Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
							BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
							BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}"
							RenderEnabled="{TemplateBinding IsEnabled}"
							RenderNormal="{TemplateBinding IsBackgroundVisible}"
							RenderMouseOver="{TemplateBinding IsMouseOver}"
							RenderPressed="{TemplateBinding IsPressed}"
							RenderChecked="{TemplateBinding IsChecked}"
							RenderFocused="{TemplateBinding IsFocused}"
							CornerRadius="{TemplateBinding CornerRadius}" Padding="0" d:LayoutOverrides="GridBox" />

						<ContentControl x:Name="Content"
							Grid.Column="1"
							Content="{TemplateBinding Content}"
							ContentTemplate="{TemplateBinding ContentTemplate}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
							VerticalContentAlignment="Center" HorizontalContentAlignment="Center" UseLayoutRounding="True" Padding="{TemplateBinding Padding}"
							Foreground="{Binding Foreground, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="4,0"
							/>

					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
    </Style>

    <Style x:Key="RemRadLinkButtonChromeStyle" TargetType="Telerik_Windows_Controls_Chromes:ButtonChrome">
        <Setter Property="Background" Value="{StaticResource REMControl_Background_Normal}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource REMControl_OuterBorder_Normal}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Telerik_Windows_Controls_Chromes:ButtonChrome">
                    <Grid>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStatesGroup">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="MouseOver" GeneratedDuration="00:00:00.150" To="None"/>
                                    <VisualTransition From="Active" GeneratedDuration="00:00:00.150" To="None"/>
                                    <VisualTransition From="Normal" GeneratedDuration="0" To="MouseOver"/>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.3" To="Normal"/>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0" To="Pressed"/>
                                    <VisualTransition From="Normal" GeneratedDuration="0" To="Checked"/>
                                    <VisualTransition From="None" GeneratedDuration="0" To="Checked"/>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0" To="Checked"/>
                                    <VisualTransition From="Pressed" GeneratedDuration="0" To="Checked"/>
                                    <VisualTransition From="Checked" GeneratedDuration="0:0:0.3" To="Normal"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="None">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Active">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background6" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Highlighted"/>
                                <VisualState x:Name="Selected">

                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background4" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InnerBorder4" d:IsOptimized="True"/>
                                    </Storyboard>

                                </VisualState>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background4" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InnerBorder4" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DisabledChecked"/>
                                <VisualState x:Name="MouseOverChecked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00.115" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background5" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InnerBorder5" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00.115" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background2" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InnerBorder2" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="#FF005D8D" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00.050" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background3" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InnerBorder3" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">

                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.97" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InnerBorderDisabled" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundDisabled" d:IsOptimized="True"/>
                                    </Storyboard>

                                </VisualState>
                                <VisualState x:Name="NoneVertical"/>
                                <VisualState x:Name="NormalVertical"/>
                                <VisualState x:Name="MouseOverVertical">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00.115" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PressedVertical">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00.050" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DisabledVertical"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStatesGroup">
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.150">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.150" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.115" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background6" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>


                        <Border x:Name="Background" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Width="16" Height="16" CornerRadius="20" BorderBrush="White"/>
                        <Border x:Name="InnerBorder" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_InnerBorder_Normal}" Margin="1" Width="16" Height="16" CornerRadius="20"/>
                        <Border x:Name="Background2" Background="{StaticResource REMControl_Background_MouseOver}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_OuterBorder_MouseOver}" Opacity="0" Width="16" Height="16" CornerRadius="20"/>
                        <Border x:Name="InnerBorder2" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_InnerBorder_MouseOver}" Margin="1" Opacity="0" Width="16" Height="16" CornerRadius="20"/>
                        <Border x:Name="Background3" Background="{StaticResource REMControl_Background_Pressed}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_OuterBorder_Pressed}" Opacity="0" Width="16" Height="16" CornerRadius="20"/>
                        <Border x:Name="InnerBorder3" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_InnerBorder_Pressed}" Margin="1" Opacity="0" Width="16" Height="16" CornerRadius="20"/>
                        <Border x:Name="Background4" Background="{StaticResource REMControl_Background_Checked}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_OuterBorder_Checked}" Opacity="0" Width="16" Height="16" CornerRadius="20"/>
                        <Border x:Name="InnerBorder4" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_InnerBorder_Checked}" Margin="1" Opacity="0" Width="16" Height="16" CornerRadius="20"/>
                        <Border x:Name="Background5" Background="{StaticResource REMControl_Background_MouseOverChecked}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_OuterBorder_MouseOverChecked}" Opacity="0" Width="16" Height="16" CornerRadius="20"/>
                        <Border x:Name="InnerBorder5" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_InnerBorder_MouseOverChecked}" Margin="1" Opacity="0" Width="16" Height="16" CornerRadius="20"/>
                        <Border x:Name="Background6" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_OuterBorder_Focused}" Opacity="0" Width="16" Height="16" CornerRadius="20"/>
                        <Border x:Name="BackgroundDisabled" BorderThickness="{TemplateBinding BorderThickness}" Background="#FFB2B1B1" BorderBrush="#FFC8C8C8"  Opacity="0" Width="16" Height="16" CornerRadius="20"/>
                        <Border x:Name="InnerBorderDisabled" BorderThickness="{TemplateBinding BorderThickness}" Margin="1" BorderBrush="#FFB2B2B2"  Opacity="0" Width="16" Height="16" CornerRadius="20"/>

                        <Border x:Name="CommonStatesWrapper">
                            <Border x:Name="FocusVisual" Visibility="Collapsed" Opacity="0" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" BorderBrush="{StaticResource REMControl_OuterBorder_Focused}"/>
                        </Border>
                        <Grid Width="16" Height="16">
                            <Canvas Margin="7,3,7,4">
                                <Path x:Name="path" Data="M7.1054274E-15,3 L2,3 L2,9 L7.1054274E-15,9 z M0.99999994,0 C1.5522847,0 2,0.44771528 2,1 C2,1.5522847 1.5522847,2 0.99999994,2 C0.44771519,2 -5.9604638E-08,1.5522847 7.1054274E-15,1 C-5.9604638E-08,0.44771528 0.44771519,0 0.99999994,0 z" Fill="#FFF4F4F5" Height="9" Stretch="Fill" UseLayoutRounding="False" Width="2" d:LayoutOverrides="Width, HorizontalMargin"/>
                            </Canvas>
                        </Grid>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RemRadLinkButtonStyle" BasedOn="{StaticResource BaseStandardButtonStyle}" TargetType="telerik:RadButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadButton">
                    <Grid VerticalAlignment="Center" HorizontalAlignment="Right">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.5"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Content" To="0.9"
                							Duration="0" Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.2" To="#FF005D8D" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Checked"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Selected"/>
                                <VisualState x:Name="Active"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Telerik_Windows_Controls_Chromes:ButtonChrome
                			Grid.Column="1"
                			Style="{StaticResource RemRadLinkButtonChromeStyle}"
                			Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
                			BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                			BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}"
                			RenderEnabled="{TemplateBinding IsEnabled}"
                			RenderNormal="{TemplateBinding IsBackgroundVisible}"
                			RenderMouseOver="{TemplateBinding IsMouseOver}"
                			RenderPressed="{TemplateBinding IsPressed}"
                			RenderFocused="{TemplateBinding IsFocused}"
                			CornerRadius="{TemplateBinding CornerRadius}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        <ContentControl x:Name="Content"
                			Grid.Column="0"
                			Content="{TemplateBinding Content}"
                			ContentTemplate="{TemplateBinding ContentTemplate}"
                			VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                			HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" UseLayoutRounding="True" Padding="4,0"
								     />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScreenerCommentButtonChromeStyle" TargetType="Telerik_Windows_Controls_Chromes:ButtonChrome">
        <Setter Property="Background" Value="{StaticResource REMControl_Background_Normal}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource REMControl_OuterBorder_Normal}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Telerik_Windows_Controls_Chromes:ButtonChrome">
                    <Grid Width="14" Height="14">

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStatesGroup">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="MouseOver" GeneratedDuration="00:00:00.150" To="None"/>
                                    <VisualTransition From="Active" GeneratedDuration="00:00:00.150" To="None"/>
                                    <VisualTransition From="Normal" GeneratedDuration="0" To="MouseOver"/>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.3" To="Normal"/>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0" To="Pressed"/>
                                    <VisualTransition From="Normal" GeneratedDuration="0" To="Checked"/>
                                    <VisualTransition From="None" GeneratedDuration="0" To="Checked"/>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0" To="Checked"/>
                                    <VisualTransition From="Pressed" GeneratedDuration="0" To="Checked"/>
                                    <VisualTransition From="Checked" GeneratedDuration="0:0:0.3" To="Normal"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="None">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Active"/>
                                <VisualState x:Name="Highlighted"/>
                                <VisualState x:Name="Selected"/>
                                <VisualState x:Name="Checked"/>
                                <VisualState x:Name="DisabledChecked"/>
                                <VisualState x:Name="MouseOverChecked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00.115" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00.050" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">

                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.97" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InnerBorderDisabled" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundDisabled" d:IsOptimized="True"/>
                                    </Storyboard>

                                </VisualState>
                                <VisualState x:Name="NoneVertical"/>
                                <VisualState x:Name="NormalVertical"/>
                                <VisualState x:Name="MouseOverVertical">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00.115" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PressedVertical">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00.050" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DisabledVertical"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStatesGroup">
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="BackgroundDisabled" BorderThickness="{TemplateBinding BorderThickness}" Background="#FFB2B1B1" BorderBrush="#FFC8C8C8"  Opacity="0" Width="16" Height="16" CornerRadius="20"/>
                        <Border x:Name="InnerBorderDisabled" BorderThickness="{TemplateBinding BorderThickness}" Margin="1" BorderBrush="#FFB2B2B2"  Opacity="0" Width="16" Height="16" CornerRadius="20"/>

                        <Border x:Name="CommonStatesWrapper" Margin="-1,-1,1,1"/>
                        <Grid Width="14" Height="14">
                            <Canvas Width="14" Height="14">
                                <Path Stretch="Fill" StrokeLineJoin="Round" Stroke="#FF767676" Fill="#FFE5E5E5" Data="F1 M 29.6727,132.458L 41.6966,132.458C 42.9615,132.458 43.9869,133.483 43.9869,134.748L 43.9869,141.237C 43.9869,142.502 42.9615,143.527 41.6966,143.527L 41.3375,143.527L 36.0664,148.203L 37.1921,143.527L 29.6727,143.527C 28.4078,143.527 27.3824,142.502 27.3824,141.237L 27.3824,134.748C 27.3824,133.483 28.4078,132.458 29.6727,132.458 Z " UseLayoutRounding="False" Width="14" Height="14" Canvas.Left="-0.002" Canvas.Top="-0.001" d:LayoutOverrides="Margin"/>
                                <Path Data="M4.1666665,5.6666665 L16.333,5.6666665" Height="1" Canvas.Left="2.103" Stretch="Fill" Stroke="#FF767676" StrokeLineJoin="Round" Canvas.Top="3.069" UseLayoutRounding="False" Width="9.855"/>
                                <Path Data="M4.1666665,5.6666665 L16.333,5.6666665" Height="1" Canvas.Left="2.103" Stretch="Fill" Stroke="#FF767676" StrokeLineJoin="Round" Canvas.Top="5.569" UseLayoutRounding="False" Width="9.855"/>
                            </Canvas>
                        </Grid>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ScreenerCommentButtonStyle" BasedOn="{StaticResource BaseStandardButtonStyle}" TargetType="telerik:RadButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadButton">
                    <Grid VerticalAlignment="Center" HorizontalAlignment="Right">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.5"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Content" To="0.9"
                							Duration="0" Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Checked"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Selected"/>
                                <VisualState x:Name="Active"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Telerik_Windows_Controls_Chromes:ButtonChrome
                			Grid.Column="0"
                			Style="{StaticResource ScreenerCommentButtonChromeStyle}"
                			Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
                			BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                			BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}"
                			RenderEnabled="{TemplateBinding IsEnabled}"
                			RenderNormal="{TemplateBinding IsBackgroundVisible}"
                			RenderMouseOver="{TemplateBinding IsMouseOver}"
                			RenderPressed="{TemplateBinding IsPressed}"
                			RenderFocused="{TemplateBinding IsFocused}"
                			CornerRadius="{TemplateBinding CornerRadius}" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,-3" />
                        <ContentControl x:Name="Content"
                			Grid.Column="1"
                			Content="{TemplateBinding Content}"
                			ContentTemplate="{TemplateBinding ContentTemplate}"
                			VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                			HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" UseLayoutRounding="True" Padding="4,0"
								     />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BorderlessCloseButtonRemStyle" BasedOn="{StaticResource BaseStandardButtonStyle}" TargetType="telerik:RadButton">
        <Setter Property="Foreground" Value="{StaticResource BaseButtonForeground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Content" To="0.9"
                							Duration="0" Storyboard.TargetProperty="Opacity" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="buttonChrome">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Checked"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Selected"/>
                                <VisualState x:Name="Active"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Telerik_Windows_Controls_Chromes:ButtonChrome x:Name="buttonChrome"
                			Style="{StaticResource BorderlessGrayButtonChromeStyle}"
                			Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
                			BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                			BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}"
                			RenderEnabled="{TemplateBinding IsEnabled}"
                			RenderNormal="{TemplateBinding IsBackgroundVisible}"
                			RenderMouseOver="{TemplateBinding IsMouseOver}"
                			RenderPressed="{TemplateBinding IsPressed}"
                			RenderFocused="{TemplateBinding IsFocused}"
                			CornerRadius="{TemplateBinding CornerRadius}" IsTabStop="{TemplateBinding IsTabStop}" />
                        <ContentControl x:Name="Content"
                			Content="{TemplateBinding Content}"
                			ContentTemplate="{TemplateBinding ContentTemplate}"
                			VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                			HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsTabStop="{TemplateBinding IsTabStop}"
                			Foreground="{Binding Foreground, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" UseLayoutRounding="True" Padding="4,0"
								     />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="QuestionHintButtonStyle" BasedOn="{StaticResource RadButtonRemStyle}" TargetType="telerik:RadButton">
        <Setter Property="Height" Value="14"/>
        <Setter Property="Width" Value="14"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Canvas Width="10" Height="10" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Path x:Name="Path" Stretch="Fill" Fill="White" Data="F1 M109.995,110.165 L106.923,110.165 L106.923,107.095 L105.143,107.095 L105.143,111.941 L109.995,111.941 L109.995,110.165 z" Height="5.788" UseLayoutRounding="False" Width="5.796" Canvas.Left="1.776" Canvas.Top="2.166" RenderTransformOrigin="0.5,0.5">
                            <Path.RenderTransform>
                                <CompositeTransform Rotation="-135"/>
                            </Path.RenderTransform>
                        </Path>
                    </Canvas>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="BorderlessButtonStyle" BasedOn="{StaticResource BaseStandardButtonStyle}" TargetType="telerik:RadButton">
        <Setter Property="Foreground" Value="{StaticResource BorderlessButtonForeground}"/>
        <Setter Property="Background" Value="{StaticResource CloseButtonGrayBackgroundBrush}"/>
        <Setter Property="Width" Value="auto"/>
        <Setter Property="BorderThickness" Value=".5"/>
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="Padding" Value="4 2"/>
        <Setter Property="Margin" Value="6 2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadButton" x:Name="BorderlessContentTemplate">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Normal" GeneratedDuration="0" To="MouseOver"/>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0" To="Normal"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="100" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Content" To="0.9"
                							Duration="0" Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                </VisualState>
                                <VisualState x:Name="Checked"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Active"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" To="Focused"/>
                                    <VisualTransition From="Focused" GeneratedDuration="0" To="Unfocused"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Telerik_Windows_Controls_Chromes:ButtonChrome 
						Grid.Column="0"
						Grid.ColumnSpan="2"
                			Style="{StaticResource BorderlessButtonBaseStyle}"
                			Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
                			BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                			BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}"
                			RenderEnabled="{TemplateBinding IsEnabled}"
                			RenderNormal="{TemplateBinding IsBackgroundVisible}"
                			RenderMouseOver="{TemplateBinding IsMouseOver}"
                			RenderPressed="{TemplateBinding IsPressed}"
                			RenderFocused="{TemplateBinding IsFocused}"
                			CornerRadius="{TemplateBinding CornerRadius}" Padding="0" />

                        <ContentControl x:Name="Content"
						Grid.Column="1"
                			Content="{TemplateBinding Content}"
                			ContentTemplate="{TemplateBinding ContentTemplate}"
                			VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                			HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
VerticalContentAlignment="Center" HorizontalContentAlignment="Center" UseLayoutRounding="True" Padding="{TemplateBinding Padding}" FontWeight="Bold" FontFamily="Arial" Margin="{TemplateBinding Margin}" 
Foreground="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Foreground,Mode=TwoWay}"
							>
                            <ContentControl.Effect>
                                <DropShadowEffect Color="White" ShadowDepth="1" BlurRadius="0" Direction="323"/>
                            </ContentControl.Effect>
                        </ContentControl>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="StaticBorderlessButtonStyle" BasedOn="{StaticResource BaseStandardButtonStyle}" TargetType="telerik:RadButton">
        <Setter Property="Foreground" Value="#FF7E7E7E"/>
        <Setter Property="Background" Value="{StaticResource CloseButtonGrayBackgroundBrush}"/>
        <Setter Property="Width" Value="auto"/>
        <Setter Property="BorderThickness" Value=".5"/>
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="Padding" Value="4 2"/>
        <Setter Property="Margin" Value="6 2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadButton" x:Name="StaticBorderlessContentTemplate">
                    <Grid x:Name="grid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Normal" GeneratedDuration="0" To="MouseOver"/>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0" To="Normal"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="#FF7E7E7E" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="Content" d:IsOptimized="True"/>

                                        <DoubleAnimation Duration="0" To="100" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Content" To="0.95"
                                			Duration="0" Storyboard.TargetProperty="Opacity" />
                                        <DoubleAnimation Duration="0" To="0.3" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="#FF4D4D4D" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background2" d:IsOptimized="True"/>

                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Checked"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Active"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" To="Focused"/>
                                    <VisualTransition From="Focused" GeneratedDuration="0" To="Unfocused"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Telerik_Windows_Controls_Chromes:ButtonChrome 
						Grid.Column="0"
						Grid.ColumnSpan="2"
                			Style="{StaticResource BorderlessButtonBaseStyle}"
                			Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
                			BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                			BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}"
                			RenderEnabled="{TemplateBinding IsEnabled}"
                			RenderNormal="{TemplateBinding IsBackgroundVisible}"
                			RenderPressed="{TemplateBinding IsPressed}"
                			RenderFocused="{TemplateBinding IsFocused}"
							RenderMouseOver="{TemplateBinding IsMouseOver}"
                			CornerRadius="{TemplateBinding CornerRadius}" Padding="0"  />

                        <ContentControl x:Name="Content"
						Grid.Column="1"
                			Content="{TemplateBinding Content}"
                			ContentTemplate="{TemplateBinding ContentTemplate}"
                			VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                			HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
VerticalContentAlignment="Center" HorizontalContentAlignment="Center" UseLayoutRounding="True" Padding="{TemplateBinding Padding}" FontWeight="Bold" FontFamily="Arial" Margin="{TemplateBinding Margin}" 
Foreground="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Foreground,Mode=TwoWay}"
							>
                            <ContentControl.Effect>
                                <DropShadowEffect Color="White" ShadowDepth="1" BlurRadius="0" Direction="323"/>
                            </ContentControl.Effect>

                        </ContentControl>
                        <Border x:Name="Background2" Background="{StaticResource CloseButtonGrayBackgroundBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" BorderBrush="{StaticResource CloseButtonGrayOuterBorderBrush}" Opacity=".50"/>
                        <Border x:Name="InnerBorder2" BorderThickness="{TemplateBinding BorderThickness}"  CornerRadius="{TemplateBinding CornerRadius}" BorderBrush="{StaticResource CloseButtonGrayOuterBorderBrush}" Opacity=".75"/>


                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="StaticBorderlessNonDropShadowButtonStyle" BasedOn="{StaticResource BaseStandardButtonStyle}" TargetType="telerik:RadButton">
        <Setter Property="Foreground" Value="#FF7E7E7E"/>
        <Setter Property="Background" Value="{StaticResource CloseButtonGrayBackgroundBrush}"/>
        <Setter Property="Width" Value="auto"/>
        <Setter Property="BorderThickness" Value=".5"/>
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="Padding" Value="4 2"/>
        <Setter Property="Margin" Value="6 2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadButton" x:Name="StaticBorderlessNonDropShadowContentTemplate">
                    <Grid x:Name="grid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Normal" GeneratedDuration="0" To="MouseOver"/>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0" To="Normal"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="#FF7E7E7E" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Content" To="0.95"
                                			Duration="0" Storyboard.TargetProperty="Opacity" />
                                        <DoubleAnimation Duration="0" To="0.3" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="#FF4D4D4D" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background2" d:IsOptimized="True"/>

                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Checked"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Active"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" To="Focused"/>
                                    <VisualTransition From="Focused" GeneratedDuration="0" To="Unfocused"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Telerik_Windows_Controls_Chromes:ButtonChrome 
						Grid.Column="0"
						Grid.ColumnSpan="2"
                			Style="{StaticResource BorderlessButtonBaseStyle}"
                			Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
                			BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                			BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}"
                			RenderEnabled="{TemplateBinding IsEnabled}"
                			RenderNormal="{TemplateBinding IsBackgroundVisible}"
                			RenderPressed="{TemplateBinding IsPressed}"
                			RenderFocused="{TemplateBinding IsFocused}"
							RenderMouseOver="{TemplateBinding IsMouseOver}"
                			CornerRadius="{TemplateBinding CornerRadius}" Padding="0"  />

                        <ContentControl x:Name="Content"
						Grid.Column="1"
                			Content="{TemplateBinding Content}"
                			ContentTemplate="{TemplateBinding ContentTemplate}"
                			VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                			HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
VerticalContentAlignment="Center" HorizontalContentAlignment="Center" UseLayoutRounding="True" Padding="{TemplateBinding Padding}" FontWeight="Bold" FontFamily="Arial" Margin="{TemplateBinding Margin}" 
Foreground="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Foreground,Mode=TwoWay}">
                        </ContentControl>
                        <Border x:Name="Background2" Background="{StaticResource CloseButtonGrayBackgroundBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" BorderBrush="{StaticResource CloseButtonGrayOuterBorderBrush}" Opacity=".50"/>
                        <Border x:Name="InnerBorder2" BorderThickness="{TemplateBinding BorderThickness}"  CornerRadius="{TemplateBinding CornerRadius}" BorderBrush="{StaticResource CloseButtonGrayOuterBorderBrush}" Opacity=".75"/>


                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BorderlessGrayTabButtonStyle" BasedOn="{StaticResource BaseStandardButtonStyle}" TargetType="telerik:RadButton">
        <Setter Property="Foreground" Value="{StaticResource BorderlessButtonForeground}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Width" Value="auto"/>
        <Setter Property="BorderThickness" Value=".5"/>
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="Padding" Value="4 2"/>
        <Setter Property="Margin" Value="6 2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadButton" x:Name="BorderlessGrayTabContentTemplate">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Normal" GeneratedDuration="0" To="MouseOver"/>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0" To="Normal"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal">

                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Content" To="0.9"
                							Duration="0" Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="buttonChrome" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Checked"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="buttonChrome" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Active"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" To="Focused"/>
                                    <VisualTransition From="Focused" GeneratedDuration="0" To="Unfocused"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Telerik_Windows_Controls_Chromes:ButtonChrome x:Name="buttonChrome" 
						Grid.Column="0"
						Grid.ColumnSpan="2"
                			Style="{StaticResource BorderlessGrayButtonBaseStyle}"
                			Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
                			BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                			BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}"
                			RenderEnabled="{TemplateBinding IsEnabled}"
                			RenderNormal="{TemplateBinding IsBackgroundVisible}"
                			RenderMouseOver="{TemplateBinding IsMouseOver}"
                			RenderPressed="{TemplateBinding IsPressed}"
                			RenderFocused="{TemplateBinding IsFocused}"
                			CornerRadius="{TemplateBinding CornerRadius}" Padding="0" />

                        <ContentControl x:Name="Content"
						Grid.Column="1"
                			Content="{TemplateBinding Content}"
                			ContentTemplate="{TemplateBinding ContentTemplate}"
                			VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                			HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
VerticalContentAlignment="Center" HorizontalContentAlignment="Center" UseLayoutRounding="True" Padding="{TemplateBinding Padding}" FontWeight="Bold" FontFamily="Arial" Margin="{TemplateBinding Margin}" 
Foreground="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Foreground,Mode=TwoWay}" Opacity="0.6"
							/>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BorderlessGrayButtonStyle" BasedOn="{StaticResource BaseStandardButtonStyle}" TargetType="telerik:RadButton">
        <Setter Property="Foreground" Value="{StaticResource BorderlessButtonForeground}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Width" Value="auto"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Margin" Value="0 2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadButton" x:Name="BorderlessGrayContentTemplate">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Normal" GeneratedDuration="0" To="MouseOver"/>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0" To="Normal"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Content" To="0.9"
                							Duration="0" Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="buttonChrome" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Checked"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="buttonChrome" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Active"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" To="Focused"/>
                                    <VisualTransition From="Focused" GeneratedDuration="0" To="Unfocused"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Telerik_Windows_Controls_Chromes:ButtonChrome x:Name="buttonChrome" 
						Grid.Column="0"
						Grid.ColumnSpan="2"
                			Style="{StaticResource BorderlessGrayButtonBaseStyle}"
                			Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
                			BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                			BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}"
                			RenderEnabled="{TemplateBinding IsEnabled}"
                			RenderNormal="{TemplateBinding IsBackgroundVisible}"
                			RenderMouseOver="{TemplateBinding IsMouseOver}"
                			RenderPressed="{TemplateBinding IsPressed}"
                			RenderFocused="{TemplateBinding IsFocused}"
                			CornerRadius="{TemplateBinding CornerRadius}" Padding="0" />

                        <ContentControl x:Name="Content"
						Grid.Column="1"
                			Content="{TemplateBinding Content}"
                			ContentTemplate="{TemplateBinding ContentTemplate}"
                			VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                			HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
VerticalContentAlignment="Center" HorizontalContentAlignment="Center" UseLayoutRounding="True" Padding="{TemplateBinding Padding}" FontWeight="Bold" FontFamily="Arial" Margin="{TemplateBinding Margin}" 
Foreground="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Foreground,Mode=TwoWay}" 
							/>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BorderlessGrayToggleButtonStyle" TargetType="telerik:RadToggleButton">
        <Setter Property="Foreground" Value="{StaticResource BorderlessButtonForeground}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Width" Value="auto"/>
        <Setter Property="BorderThickness" Value=".5"/>
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="Padding" Value="4 2"/>
        <Setter Property="Margin" Value="6 2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadToggleButton" x:Name="BorderlessGrayToggleContentTemplate">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Normal" GeneratedDuration="0" To="MouseOver"/>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0" To="Normal"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Content" To="0.9"
                							Duration="0" Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="buttonChrome" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Text)" Storyboard.TargetName="textBlock">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Medications/Problems List"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)" Storyboard.TargetName="textBlock">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <VerticalAlignment>Center</VerticalAlignment>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.HorizontalAlignment)" Storyboard.TargetName="textBlock">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <HorizontalAlignment>Center</HorizontalAlignment>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="buttonChrome" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Active"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" To="Focused"/>
                                    <VisualTransition From="Focused" GeneratedDuration="0" To="Unfocused"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Telerik_Windows_Controls_Chromes:ButtonChrome x:Name="buttonChrome" 
						Grid.Column="0"
                			Style="{StaticResource BorderlessGrayButtonBaseStyle}"
                			Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
                			BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                			BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}"
                			RenderEnabled="{TemplateBinding IsEnabled}"
                			RenderNormal="{TemplateBinding IsBackgroundVisible}"
                			RenderMouseOver="{TemplateBinding IsMouseOver}"
                			RenderPressed="{TemplateBinding IsPressed}"
                			RenderFocused="{TemplateBinding IsFocused}"
                			CornerRadius="{TemplateBinding CornerRadius}" Padding="0" d:LayoutOverrides="GridBox" />

                        <ContentControl x:Name="Content"
						Grid.Column="1"
                			Content="{TemplateBinding Content}"
                			ContentTemplate="{TemplateBinding ContentTemplate}"
                			VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                			HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
VerticalContentAlignment="Center" HorizontalContentAlignment="Center" UseLayoutRounding="True" Padding="{TemplateBinding Padding}" FontWeight="Bold" FontFamily="Arial" Margin="{TemplateBinding Margin}" 
Foreground="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Foreground,Mode=TwoWay}" Opacity="0.6"
							/>
                        <Grid HorizontalAlignment="Center" Height="300" VerticalAlignment="Center" Width="200">
                            <TextBlock x:Name="textBlock" Text="Hide" FontSize="11" Opacity="0.6" FontWeight="Bold"  RenderTransformOrigin="0.5,0.5" VerticalAlignment="Center" TextAlignment="Center">
                        		<TextBlock.RenderTransform>
                        			<CompositeTransform Rotation="-90"/>
                        		</TextBlock.RenderTransform>
                            </TextBlock>
                        </Grid>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BorderlessToggleButtonStyle" TargetType="telerik:RadToggleButton">
        <Setter Property="Foreground" Value="{StaticResource BorderlessButtonForeground}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Width" Value="auto"/>
        <Setter Property="BorderThickness" Value=".5"/>
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="Padding" Value="4 2"/>
        <Setter Property="Margin" Value="6 2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadToggleButton" x:Name="BorderlessToggleContentTemplate">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Normal" GeneratedDuration="0" To="MouseOver">

                                    </VisualTransition>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0" To="Normal"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="#FF4D4D4D" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Content" To="0.9"
                							Duration="0" Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="buttonChrome" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(ButtonChrome.RenderPressed)" Storyboard.TargetName="buttonChrome">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="buttonChrome" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(ButtonChrome.RenderPressed)" Storyboard.TargetName="buttonChrome">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                </VisualState>
                                <VisualState x:Name="Active"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" To="Focused"/>
                                    <VisualTransition From="Focused" GeneratedDuration="0" To="Unfocused"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Telerik_Windows_Controls_Chromes:ButtonChrome x:Name="buttonChrome" 
						Grid.Column="0"
                			Style="{StaticResource BorderlessButtonBaseStyle}"
                			Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
                			BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                			BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}"
                			RenderEnabled="{TemplateBinding IsEnabled}"
                			RenderNormal="{TemplateBinding IsBackgroundVisible}"
                			RenderMouseOver="{TemplateBinding IsMouseOver}"
                			RenderFocused="{TemplateBinding IsFocused}"
                			CornerRadius="{TemplateBinding CornerRadius}" Padding="0" />

                        <ContentControl x:Name="Content"
						Grid.Column="1"
                			Content="{TemplateBinding Content}"
                			ContentTemplate="{TemplateBinding ContentTemplate}"
                			VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                			HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
VerticalContentAlignment="Center" HorizontalContentAlignment="Center" UseLayoutRounding="True" Padding="{TemplateBinding Padding}" FontWeight="Bold" FontFamily="Arial" Margin="{TemplateBinding Margin}" 
Foreground="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Foreground,Mode=TwoWay}" 
							>
                            <ContentControl.Effect>
                                <DropShadowEffect Color="White" ShadowDepth="1" BlurRadius="0" Direction="323"/>
                            </ContentControl.Effect>
                        </ContentControl>

                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadButtonRoundedRemStyle" BasedOn="{StaticResource BaseStandardButtonStyle}" TargetType="telerik:RadButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BaseButtonForeground}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Content" To="0.9"
                							Duration="0" Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BaseButtonForeground_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BaseButtonForeground_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BaseButtonForeground_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BaseButtonForeground_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Active">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BaseButtonForeground_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Telerik_Windows_Controls_Chromes:ButtonChrome
                			Style="{StaticResource ButtonChromeRemStyle}"
                			Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
                			BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                			BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}"
                			RenderEnabled="{TemplateBinding IsEnabled}"
                			RenderNormal="{TemplateBinding IsBackgroundVisible}"
                			RenderMouseOver="{TemplateBinding IsMouseOver}"
                			RenderPressed="{TemplateBinding IsPressed}"
                			RenderFocused="{TemplateBinding IsFocused}"
                			CornerRadius="{TemplateBinding CornerRadius}" />
                        <ContentControl x:Name="Content"
                			Content="{TemplateBinding Content}"
                			ContentTemplate="{TemplateBinding ContentTemplate}"
                			VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                			HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                			Foreground="{Binding Foreground, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" UseLayoutRounding="True" Padding="4,0"
								     />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="WorkPadHeader_RibbonButton_Style" BasedOn="{StaticResource RadButtonRemStyle}" TargetType="telerik:RadButton">
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Margin" Value="2,0"/>
        <Setter Property="Background" Value="{StaticResource WorkPadHeaderControl_Background_Normal}"/>
        <Setter Property="BorderBrush" Value="{StaticResource WorkPadHeaderControl_OuterBorder_Normal}"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
    </Style>
    <Style x:Key="WorkPadHeader_RibbonToggleButton_Style" BasedOn="{StaticResource RadToggleButtonRemStyle}" TargetType="telerik:RadToggleButton">
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Margin" Value="2,0"/>
        <Setter Property="Background" Value="{StaticResource WorkPadHeaderControl_Background_Normal}"/>
        <Setter Property="BorderBrush" Value="{StaticResource WorkPadHeaderControl_OuterBorder_Normal}"/>
    </Style>
    <Style x:Key="TileToggleButtonStyle" TargetType="Telerik_Windows_Controls_Chromes:ButtonChrome">
        <Setter Property="Background" Value="{StaticResource REMControl_Background_Normal}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource REMControl_OuterBorder_Normal}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Telerik_Windows_Controls_Chromes:ButtonChrome">
                    <Grid>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStatesGroup">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="MouseOver" To="None"/>
                                    <VisualTransition From="Active" To="None"/>
                                    <VisualTransition From="Normal" GeneratedDuration="0" To="MouseOver"/>
                                    <VisualTransition From="MouseOver" To="Normal"/>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0" To="Pressed"/>
                                    <VisualTransition From="Normal" GeneratedDuration="0" To="Checked"/>
                                    <VisualTransition From="None" GeneratedDuration="0" To="Checked"/>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0" To="Checked"/>
                                    <VisualTransition From="Pressed" GeneratedDuration="0" To="Checked"/>
                                    <VisualTransition From="Checked" To="Normal"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="None">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Active">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background6" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Highlighted"/>
                                <VisualState x:Name="Selected">

                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background4" d:IsOptimized="True"/>
                                    </Storyboard>

                                </VisualState>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                		<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background4" d:IsOptimized="True"/>
                                		<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InnerBorder4" d:IsOptimized="True"/>
                                	</Storyboard>
                                </VisualState>
                                <VisualState x:Name="DisabledChecked"/>
                                <VisualState x:Name="MouseOverChecked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00.115" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background5" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InnerBorder5" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background4" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InnerBorder4" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00.115" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background2" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InnerBorder2" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00.050" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background3" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InnerBorder3" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">

                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.97" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InnerBorderDisabled" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundDisabled" d:IsOptimized="True"/>
                                    </Storyboard>

                                </VisualState>
                                <VisualState x:Name="NoneVertical"/>
                                <VisualState x:Name="NormalVertical"/>
                                <VisualState x:Name="MouseOverVertical">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00.115" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PressedVertical">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00.050" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DisabledVertical"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStatesGroup">
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.150">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.150" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.115" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background6" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CommonStatesWrapper" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>


                        <Border x:Name="Background" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}"/>
                        <Border x:Name="InnerBorder" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_InnerBorder_Normal}"  CornerRadius="{TemplateBinding CornerRadius}" Margin="1" Opacity="0"/>
                        <Border x:Name="Background2" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Background="{StaticResource TileButtonBackgroundBorderBrushMouseOver}" BorderBrush="{StaticResource TileButtonOuterBorderBrushMouseOver}" Opacity="0"/>
                        <Border x:Name="InnerBorder2" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_InnerBorder_MouseOver}"  CornerRadius="{TemplateBinding CornerRadius}" Margin="1" Opacity="0"/>
                        <Border x:Name="Background3" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource TileButtonOuterBorderBrushPressed}" CornerRadius="{TemplateBinding CornerRadius}" Background="{StaticResource TileButtonBackgroundBorderBrushPressed}" Opacity="0"/>
                        <Border x:Name="InnerBorder3" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_InnerBorder_Pressed}"  CornerRadius="{TemplateBinding CornerRadius}" Margin="1" Opacity="0"/>
                        <Border x:Name="Background4" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" BorderBrush="{StaticResource TileButtonOuterBorderBrushChecked}" Background="{StaticResource TileButtonBackgroundBorderBrushChecked}" Opacity="0"/>
                        <Border x:Name="InnerBorder4" BorderBrush="#FF292929"  CornerRadius="{TemplateBinding CornerRadius}" Margin="1" BorderThickness="2,0" Opacity="0"/>
                        <Border x:Name="Background5" Background="{StaticResource REMControl_Background_MouseOverChecked}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_OuterBorder_MouseOverChecked}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0"/>
                        <Border x:Name="InnerBorder5" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_InnerBorder_MouseOverChecked}"  CornerRadius="{TemplateBinding CornerRadius}" Margin="1" Opacity="0"/>
                        <Border x:Name="Background6" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0"/>
                        <Border x:Name="BackgroundDisabled" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Background="#FFB2B1B1" BorderBrush="#FFC8C8C8"  Opacity="0"/>
                        <Border x:Name="InnerBorderDisabled" BorderThickness="{TemplateBinding BorderThickness}"  CornerRadius="{TemplateBinding CornerRadius}" Margin="1" BorderBrush="#FFB2B2B2"  Opacity="0"/>

                        <Border x:Name="CommonStatesWrapper">
                            <Border x:Name="FocusVisual" Visibility="Collapsed" Opacity="0" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}"/>
                        </Border>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="RadRadioButtonRemStyle" TargetType="telerik:RadRadioButton">
        <Setter Property="Background" Value="{StaticResource BaseButtonBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource BaseButtonForeground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="MinWidth" Value="40"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadRadioButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BaseButtonForeground}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Content" To="0.9"
                							Duration="0" Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BaseButtonForeground}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BaseButtonForeground}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BaseButtonForeground}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BaseButtonForeground}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Active">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BaseButtonForeground}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Telerik_Windows_Controls_Chromes:ButtonChrome
                			Style="{StaticResource TileToggleButtonStyle}"
                			Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
                			BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                			BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}"
                			RenderEnabled="{TemplateBinding IsEnabled}"
                			RenderNormal="{TemplateBinding IsBackgroundVisible}"
                			RenderMouseOver="{TemplateBinding IsMouseOver}"
                			RenderPressed="{TemplateBinding IsPressed}"
                			RenderFocused="{TemplateBinding IsFocused}"
                			RenderChecked="{TemplateBinding IsChecked}"
                			CornerRadius="{TemplateBinding CornerRadius}" />
                        <ContentControl x:Name="Content"
                			Content="{TemplateBinding Content}"
                			ContentTemplate="{TemplateBinding ContentTemplate}"
                			VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                			HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                			Foreground="{Binding Foreground, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="3,0" FontSize="9.333"
								     />
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TileToggleButtonRemStyle" TargetType="telerik:RadRadioButton">
        <Setter Property="Background" Value="{StaticResource REMControl_Background_Normal}"/>
        <Setter Property="Foreground" Value="{StaticResource REMControl_Background_Normal}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="MinWidth" Value="40"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadRadioButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BaseButtonForeground}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Content" To="0.9"
                							Duration="0" Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BaseButtonForeground}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BaseButtonForeground}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BaseButtonForeground}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BaseButtonForeground}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Active">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BaseButtonForeground}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Telerik_Windows_Controls_Chromes:ButtonChrome
                			Style="{StaticResource TileToggleButtonStyle}"
                			Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
                			BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                			BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}"
                			RenderEnabled="{TemplateBinding IsEnabled}"
                			RenderNormal="{TemplateBinding IsBackgroundVisible}"
                			RenderMouseOver="{TemplateBinding IsMouseOver}"
                			RenderPressed="{TemplateBinding IsPressed}"
                			RenderFocused="{TemplateBinding IsFocused}"
                			RenderChecked="{TemplateBinding IsChecked}"
                			CornerRadius="{TemplateBinding CornerRadius}" />
                        <ContentControl x:Name="Content"
                			Content="{TemplateBinding Content}"
                			ContentTemplate="{TemplateBinding ContentTemplate}"
                			VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                			HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                			Foreground="{Binding Foreground, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="3,0" FontSize="9.333"
								     />
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GlobalNavigationButtonBase" TargetType="Button">
        <Setter Property="Background" Value="#FF1F3B53"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Width="80">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Normal" GeneratedDuration="0:0:0.2" To="MouseOver">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CircleEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.2" To="Normal">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CircleEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.6" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background_Copy" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background_Copy" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Grid.Column="0" BorderThickness="0"/>
                        <Border x:Name="Background_Copy" Background="#FF272727" CornerRadius="3" Margin="2" Opacity="0"/>
                        <Border x:Name="Background" CornerRadius="3" Margin="2" BorderThickness="1" Opacity="0">
                            <Border.Background>
                                <RadialGradientBrush Center="0.854,0.936" GradientOrigin="0.854,0.936" RadiusY="1.363" RadiusX="1.557">
                                    <GradientStop Color="#0CFFFFFF" Offset="0.464"/>
                                    <GradientStop Color="#7FFFFFFF" Offset="0.794"/>
                                </RadialGradientBrush>
                            </Border.Background>
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <LinearGradientBrush.RelativeTransform>
                                        <CompositeTransform CenterY="0.5" CenterX="0.5" Rotation="135"/>
                                    </LinearGradientBrush.RelativeTransform>
                                    <GradientStop Color="#19000000" Offset="0.5"/>
                                    <GradientStop Color="#BFFFFFFF" Offset="0.75"/>
                                    <GradientStop Color="#BFFFFFFF" Offset="0.25"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsEnabled" Value="True"/>
        <Setter Property="Margin" Value="4,0"/>
    </Style>

    <Style x:Key="QuickSearchToggleButton" TargetType="ToggleButton">
        <Setter Property="Background" Value="#FF1F3B53"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid MaxHeight="28" MaxWidth="30">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Normal" GeneratedDuration="0:0:0.2" To="MouseOver"/>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.2" To="Normal">
                                        <Storyboard/>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.6" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background_Copy" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background_Copy" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Grid.Column="0" BorderThickness="0" CornerRadius="3" Margin="0" Background="{StaticResource GlobalNavButtonBevelGradient}"/>
                        <Border x:Name="Background" Background="{StaticResource GlobalNavSearchButtonFill}" CornerRadius="3" Margin="1"/>
                        <Border x:Name="Background_Copy" Background="{StaticResource QuickSearchButtonMouseOverBackground}" Opacity="0" CornerRadius="0,3,3,0" Margin="1,0,1,1">
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="Black" Offset="0"/>
                                    <GradientStop Color="White" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <ContentPresenter.Effect>
                                <DropShadowEffect BlurRadius="0" ShadowDepth="1" Direction="300" Opacity="0" Color="White"/>
                            </ContentPresenter.Effect>
                        </ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GlobalNavigationToggleButtonBase" TargetType="ToggleButton">
        <Setter Property="Background" Value="#FF1F3B53"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Width="80">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Normal" GeneratedDuration="0:0:0.2" To="MouseOver">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CircleEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.2" To="Normal">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CircleEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.6" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background_Copy" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background_Copy" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background_Copy" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Grid.Column="0" BorderThickness="0"/>
                        <Border x:Name="Background_Copy" Background="#FF272727" CornerRadius="3" Margin="2" Opacity="0"/>
                        <Border x:Name="Background" CornerRadius="3" Margin="2" BorderThickness="1" Opacity="0">
                            <Border.Background>
                                <RadialGradientBrush Center="0.854,0.936" GradientOrigin="0.854,0.936" RadiusY="1.363" RadiusX="1.557">
                                    <GradientStop Color="#0CFFFFFF" Offset="0.464"/>
                                    <GradientStop Color="#7FFFFFFF" Offset="0.794"/>
                                </RadialGradientBrush>
                            </Border.Background>
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <LinearGradientBrush.RelativeTransform>
                                        <CompositeTransform CenterY="0.5" CenterX="0.5" Rotation="135"/>
                                    </LinearGradientBrush.RelativeTransform>
                                    <GradientStop Color="#19000000" Offset="0.5"/>
                                    <GradientStop Color="#BFFFFFFF" Offset="0.75"/>
                                    <GradientStop Color="#BFFFFFFF" Offset="0.25"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsEnabled" Value="True"/>
        <Setter Property="Margin" Value="4,0"/>
    </Style>


    <Style x:Key="QuickSearchButtonBase" TargetType="Button">
        <Setter Property="Background" Value="#FF1F3B53"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Padding" Value="3"/>

        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Normal" GeneratedDuration="0:0:0.2" To="MouseOver"/>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.2" To="Normal">
                                        <Storyboard/>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.6" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background_Copy" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Grid.Column="0" BorderThickness="0" CornerRadius="3" Background="{StaticResource GlobalNavButtonBevelGradient}" d:LayoutOverrides="HorizontalAlignment"/>
                        <Border x:Name="Background" Background="{StaticResource GlobalNavSearchButtonFill}" CornerRadius="2" Margin="1"/>
                        <Border x:Name="Background_Copy" Background="{StaticResource QuickSearchButtonMouseOverBackground}" CornerRadius="2" Opacity="0" Margin="1">
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="Black" Offset="0"/>
                                    <GradientStop Color="White" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <ContentPresenter.Effect>
                                <DropShadowEffect BlurRadius="0" ShadowDepth="1" Direction="300" Opacity="0" Color="White"/>
                            </ContentPresenter.Effect>
                        </ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="QuickSearchButton" BasedOn="{StaticResource QuickSearchButtonBase}" TargetType="telerik:RadButton">
        <Setter Property="Height" Value="28"/>
    </Style>


    <Style x:Key="RibbonGradientButtonStyle" BasedOn="{StaticResource RadButtonRemStyle}" TargetType="telerik:RadButton">
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="Foreground" Value="#FFCCCCCC"/>
    </Style>

    <Style x:Key="SmallEditButtonStyle" BasedOn="{StaticResource RadButtonRemStyle}" TargetType="telerik:RadButton">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="Bold"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="Padding" Value="5,0,5,0"/>
        <Setter Property="Margin" Value="5"/>
    </Style>


    <Style x:Key="RibbonExpandButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="#FF1F3B53"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Width="30" Height="30">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background" CornerRadius="0,3,0,0" BorderBrush="Black" BorderThickness="0,1,1,1">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF7C7C7C" Offset="0"/>
                                    <GradientStop Color="#FF1F1F1F" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Grid Margin="1">
                                <Border x:Name="BackgroundAnimation" Opacity="0"/>
                                <Rectangle x:Name="BackgroundGradient" StrokeThickness="0"/>
                                <Canvas Width="16" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center">
                                    <Path x:Name="path" Data="M1.6666666,3.3333333 L17.833,3.3333333 L9.833168,15.167 z" Fill="#FFF4F4F5" Height="10" Stretch="Fill" Canvas.Top="-3.556" UseLayoutRounding="False" Width="14" Canvas.Left="0.711" RenderTransformOrigin="0.5,0.5">
                                        <Path.Effect>
                                            <DropShadowEffect Color="#FF4D4D4D" Direction="100" BlurRadius="0" ShadowDepth="1"/>
                                        </Path.Effect>
                                        <Path.RenderTransform>
                                            <CompositeTransform/>
                                        </Path.RenderTransform>
                                    </Path>
                                </Canvas>
                            </Grid>
                        </Border>
                        <Rectangle x:Name="DisabledVisualElement" IsHitTestVisible="false" Opacity="0" RadiusY="3" RadiusX="3"/>
                        <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Margin="1" Opacity="0" RadiusY="2" RadiusX="2" StrokeThickness="1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End Button Styles -->

    <Style x:Key="QuickSearchTextBox" TargetType="TextBox">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid x:Name="RootElement" Margin="0">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="#FF6DBDD1" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="MouseOverBorder"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ReadOnlyVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" Background="{TemplateBinding Background}" CornerRadius="3,3,3,3" Opacity="1">
                            <Grid>
                                <Border x:Name="ReadOnlyVisualElement" Background="#5EC9C9C9" Opacity="0"/>
                                <Border x:Name="MouseOverBorder" BorderBrush="Transparent" BorderThickness="2" CornerRadius="2" Margin="-1">
                                    <ScrollViewer x:Name="ContentElement" BorderThickness="0" IsTabStop="False" Padding="{TemplateBinding Padding}" VerticalAlignment="Center"/>
                                </Border>
                            </Grid>
                        </Border>
                        <Border x:Name="DisabledVisualElement" BorderBrush="#A5F7F7F7" BorderThickness="{TemplateBinding BorderThickness}" Background="#A5F7F7F7" IsHitTestVisible="False" Opacity="0"/>
                        <Border x:Name="FocusVisualElement" BorderThickness="{TemplateBinding BorderThickness}" IsHitTestVisible="False" Margin="1" Opacity="0" CornerRadius="3,0,0,3"/>
                        <Border x:Name="ValidationErrorElement" BorderBrush="#FFDB000C" BorderThickness="1" CornerRadius="1" Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                                    <ToolTip.Triggers>
                                        <EventTrigger RoutedEvent="Canvas.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <System:Boolean>true</System:Boolean>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </ToolTip.Triggers>
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
                                <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="#FFDC000C" Margin="1,3,0,0"/>
                                <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="#ffffff" Margin="1,3,0,0"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--CollectionEditorItemContainerStyle-->
    <Style x:Key="CollectionEditorItemContainerStyle" TargetType="ListBoxItem">
        <Setter Property="Padding" Value="3"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="TabNavigation" Value="Local"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid Margin="0,2,0,0">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Normal" GeneratedDuration="0:0:0.5" To="MouseOver">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CircleEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.5" To="Normal">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CircleEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)" Storyboard.TargetName="CommonStates1">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>0.75</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CommonStates1" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BaseState" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Unselected" GeneratedDuration="0:0:0.5" To="Selected">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CircleEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                    <VisualTransition From="Selected" GeneratedDuration="0:0:0.5" To="Unselected">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CircleEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SelectionStates1" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)" Storyboard.TargetName="SelectionStates1">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>2</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)" Storyboard.TargetName="CommonStates1">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>2</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="LayoutStates">
                                <VisualState x:Name="AfterLoaded"/>
                                <VisualState x:Name="BeforeLoaded"/>
                                <VisualState x:Name="BeforeUnloaded"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="BaseState" BorderThickness="2" Margin="0" CornerRadius="7" Background="{StaticResource FormVisualStateBaseBackgroundLight}"/>
                        <Border x:Name="CommonStates1" BorderThickness="0.75" Margin="0" CornerRadius="7" Background="{StaticResource FormVisualStateBaseBackgroundDark}" Opacity="0" BorderBrush="{StaticResource FormVisualStateMouseOverBorderBrush}">
                            <Border.OpacityMask>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="Black" Offset="0"/>
                                    <GradientStop Color="White" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.OpacityMask>
                        </Border>
                        <Border x:Name="FocusStates1" BorderThickness="2" Margin="0" CornerRadius="7" Background="#FFE6E6E6" BorderBrush="#00EDE8B1" OpacityMask="Black" d:IsHidden="True" Opacity="0"/>
                        <Border x:Name="SelectionStates1" BorderThickness="2" Margin="0" CornerRadius="7" Background="{StaticResource WorkpadViewBackgroundStyle}" BorderBrush="{StaticResource FormVisualStateMouseOverBorderBrush}" OpacityMask="Black" Opacity="0"/>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FormAddDeleteButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="#FF1F3B53"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid VerticalAlignment="Top" Margin="6,4,2,12" HorizontalAlignment="Left">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" MinWidth="40"/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.2" To="Normal">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CircleEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                    <VisualTransition From="Normal" GeneratedDuration="0:0:0.2" To="MouseOver">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CircleEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverVisualElement" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)" Storyboard.TargetName="MouseOverVisualElement" d:IsOptimized="True"/>
                                        <PointAnimation Duration="0" To="0.497,1.505" Storyboard.TargetProperty="(Border.BorderBrush).(LinearGradientBrush.StartPoint)" Storyboard.TargetName="MouseOverVisualElement" d:IsOptimized="True"/>
                                        <PointAnimation Duration="0" To="0.497,-0.516" Storyboard.TargetProperty="(Border.BorderBrush).(LinearGradientBrush.EndPoint)" Storyboard.TargetName="MouseOverVisualElement" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.6" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background" CornerRadius="10" Grid.ColumnSpan="1" BorderThickness="1" Margin="0" Width="40" BorderBrush="{StaticResource FormVisualStateWinButtonBorderBrush}">
                            <Border.Background>


                                <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                    <GradientStop Color="#FFFFFFFF"/>
                                    <GradientStop Color="#F9FFFFFF" Offset="0.375"/>
                                    <GradientStop Color="#E5FFFFFF" Offset="0.625"/>
                                    <GradientStop Color="#C6FFFFFF" Offset="0.886"/>
                                    <GradientStop Color="White" Offset="1"/>
                                </LinearGradientBrush>

                            </Border.Background>
                        </Border>
                        <Border x:Name="MouseOverVisualElement" IsHitTestVisible="false" Grid.ColumnSpan="1" CornerRadius="10" BorderThickness="1.5" Opacity="0" Background="{StaticResource FromVisualStateWinButtonFill}" RenderTransformOrigin="0.5,0.5" Margin="0" Width="40">
                            <Border.BorderBrush>

                                <LinearGradientBrush EndPoint="0.985,0.979" StartPoint="0.009,0.01">
                                    <GradientStop Color="#FFE9E8D6" Offset="0.425"/>
                                    <GradientStop Color="#FFA19E61" Offset="0.672"/>
                                </LinearGradientBrush>

                            </Border.BorderBrush>
                            <Border.RenderTransform>
                                <CompositeTransform/>
                            </Border.RenderTransform>
                        </Border>
                        <Border x:Name="DisabledVisualElement"  IsHitTestVisible="false" Grid.ColumnSpan="1" Margin="0" CornerRadius="10" Background="White" Opacity="0" Width="40" Height="22"/>
                        <ContentPresenter x:Name="contentPresenter" OpacityMask="Black" VerticalAlignment="Center" Margin="0" HorizontalAlignment="Center">
                            <TextBlock TextWrapping="Wrap" Text="{TemplateBinding Content}" Foreground="#FF565643"/>
                        </ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--CollectionEditorStyle-->
    <Style x:Key="CollectionEditorStyle" TargetType="ListBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border CornerRadius="5">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="33"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <ScrollViewer HorizontalScrollBarVisibility="Auto" Grid.RowSpan="1" Grid.Row="1" BorderBrush="{x:Null}" ScrollViewer.VerticalScrollBarVisibility="Auto">
                                <StackPanel
										VerticalAlignment="Center"
										HorizontalAlignment="Center">
                                    <ItemsPresenter/>
                                </StackPanel>
                            </ScrollViewer>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Border BorderThickness="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="0,0,0,0" Canvas.ZIndex="8" BorderBrush="{StaticResource FormHeaderedContentTextBrush}" Opacity="0.2"/>
                                <TextBlock Grid.Column="0" Margin="10,0,10,0" VerticalAlignment="Center" HorizontalAlignment="Left"
									Text="{Binding (behavior:CollectionEditorAttachedProperties.ListHeader), RelativeSource={RelativeSource TemplatedParent}}" Foreground="{StaticResource FormHeaderedContentTextBrush}"
										/>
                                <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,10,0">
                                    <Button Margin="0,0,4,0" d:LayoutOverrides="Height" VerticalAlignment="Center"
										Command="{Binding (behavior:CollectionEditorAttachedProperties.DeleteCommand), RelativeSource={RelativeSource TemplatedParent}}" ToolTipService.ToolTip="Delete Selected Record" Cursor="Hand">
                                        <Grid Width="10" Height="10">
                                            <Canvas Width="10" Height="10">
                                                <Path Data="M16.734198,6.6633925 L16.734198,10.150841 L-1.8850801,10.150841 L-1.8850801,6.6633925 z" Fill="{StaticResource FormHeaderedContentTextBrush}" Height="2" Stretch="Fill" UseLayoutRounding="False" Width="10" StrokeThickness="0.25" Canvas.Top="4.073" Canvas.Left="0.029"/>
                                            </Canvas>
                                        </Grid>
                                    </Button>

                                    <Button Margin="0,0,4,0" d:LayoutOverrides="Height, Width" VerticalAlignment="Center"
										Command="{Binding (behavior:CollectionEditorAttachedProperties.AddCommand), RelativeSource={RelativeSource TemplatedParent}}" ToolTipService.ToolTip="Add New Record" Cursor="Hand">
                                        <Grid Width="10" Height="10">
                                            <Canvas Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                <Path Data="M3.9999986,0 L5.9999986,0 L5.9999986,3.9999995 L10,3.9999995 L10,5.999999 L5.9999986,5.999999 L5.9999986,10 L3.9999986,10 L3.9999986,5.999999 L0,5.999999 L0,3.9999995 L3.9999986,3.9999995 z" Fill="{StaticResource FormHeaderedContentTextBrush}" Height="10" Canvas.Left="-4.96" Stretch="Fill" StrokeThickness="0.25" Canvas.Top="-5.366" UseLayoutRounding="False" Width="10"/>
                                            </Canvas>
                                        </Grid>
                                    </Button>

                                </StackPanel>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle" Value="{StaticResource CollectionEditorItemContainerStyle}"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF0E7FD4" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- BEGIN 'WorkPad' Styles -->

    <!--FormDatePickerContentControlStyle-->




    <!-- FormNumericUpDownStyle-->

    <!-- ItemsPresenterStyle1 -->
    <Style x:Key="ItemsPresenterStyle1" TargetType="CheckBox"/>

    <!-- HeaderContentControlStyle1 -->
    <Style x:Key="HeaderedContentControlStyle1" TargetType="toolkit:HeaderedContentControl">
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="toolkit:HeaderedContentControl">
                    <Border BorderThickness="1" Margin="0" Background="{StaticResource WorkPadFormSectionBrush}">
                        <StackPanel Height="28" Margin="0,0,-2,0" VerticalAlignment="Top">
                            <ContentPresenter Cursor="{TemplateBinding Cursor}" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" OpacityMask="Black"/>
                            <ContentPresenter Cursor="{TemplateBinding Cursor}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" OpacityMask="{StaticResource FormHeaderedContentTextBrush}"/>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SelectionDisplayFormTextBox" TargetType="TextBox">
        <Setter Property="HorizontalAlignment" Value ="Stretch"/>
        <Setter Property ="TextWrapping" Value ="Wrap"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid x:Name="RootElement" Margin="2,4,6,12">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" MinWidth="113"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="#FF99C1E2" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="MouseOverBorder"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ReadOnlyVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="6" Opacity="1" Background="#FFEDEDED" Margin="0" d:LayoutOverrides="GridBox" VerticalAlignment="Center" Padding="8,0">
                            <Grid>
                                <Border x:Name="ReadOnlyVisualElement" Background="#5EC9C9C9" Opacity="0"/>
                                <Border x:Name="MouseOverBorder" BorderBrush="Transparent" BorderThickness="1">
                                    <ScrollViewer x:Name="ContentElement" BorderThickness="0" IsTabStop="False" Padding="{TemplateBinding Padding}"/>
                                </Border>
                            </Grid>
                        </Border>
                        <Border x:Name="DisabledVisualElement" BorderBrush="#A5F7F7F7" BorderThickness="{TemplateBinding BorderThickness}" Background="#A5F7F7F7" IsHitTestVisible="False" Opacity="0"/>
                        <Border x:Name="FocusVisualElement" BorderBrush="#FF6DBDD1" BorderThickness="{TemplateBinding BorderThickness}" IsHitTestVisible="False" Margin="1" Opacity="0"/>
                        <Border x:Name="ValidationErrorElement" BorderBrush="#FFDB000C" BorderThickness="1" CornerRadius="1" Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                                    <ToolTip.Triggers>
                                        <EventTrigger RoutedEvent="Canvas.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <System:Boolean>true</System:Boolean>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </ToolTip.Triggers>
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
                                <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="#FFDC000C" Margin="1,3,0,0"/>
                                <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="#ffffff" Margin="1,3,0,0"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CommentTextBox" TargetType="TextBox">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="AcceptsReturn" Value="True"/>
        <Setter Property="Height" Value="100"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid x:Name="RootElement" HorizontalAlignment="Left" Margin="6,0,0,12" MinWidth="200">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="#FF99C1E2" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="MouseOverBorder"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ReadOnlyVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" Opacity="1" Background="{StaticResource WorkPadFormSectionBrush}">
                            <Grid>
                                <Border x:Name="ReadOnlyVisualElement" Background="#5EC9C9C9" Opacity="0"/>
                                <Border x:Name="MouseOverBorder" BorderBrush="Transparent" BorderThickness="1">
                                    <ScrollViewer x:Name="ContentElement" BorderThickness="0" IsTabStop="False" Padding="{TemplateBinding Padding}" Width="255" MaxHeight="100" VerticalScrollBarVisibility="Visible"/>
                                </Border>
                            </Grid>
                        </Border>
                        <Border x:Name="DisabledVisualElement" BorderBrush="#A5F7F7F7" BorderThickness="{TemplateBinding BorderThickness}" Background="#A5F7F7F7" IsHitTestVisible="False" Opacity="0"/>
                        <Border x:Name="FocusVisualElement" BorderBrush="#FF6DBDD1" BorderThickness="{TemplateBinding BorderThickness}" IsHitTestVisible="False" Margin="1" Opacity="0"/>
                        <Border x:Name="ValidationErrorElement" BorderBrush="#FFDB000C" BorderThickness="1" CornerRadius="1" Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                                    <ToolTip.Triggers>
                                        <EventTrigger RoutedEvent="Canvas.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <System:Boolean>true</System:Boolean>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </ToolTip.Triggers>
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
                                <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="#FFDC000C" Margin="1,3,0,0"/>
                                <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="#ffffff" Margin="1,3,0,0"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="EditableWatermarkTextBoxStyle" TargetType="telerik:RadWatermarkTextBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadWatermarkTextBox">
                    <Grid x:Name="RootElement" Cursor="IBeam">

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MouseOverVisual" Storyboard.TargetProperty="Opacity">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.150" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.150">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MouseOverVisual" Storyboard.TargetProperty="Opacity">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.115" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.6" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement" />
                                        <DoubleAnimation Duration="0" To="0.6" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="WatermarkVisualElement" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement"  Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ReadOnlyElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation To="1" Duration="0" Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="WatermarkStates">
                                <VisualState x:Name="WatermarkHidden" />
                                <VisualState x:Name="WatermarkVisible">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="WatermarkVisualElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationTooltip" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationTooltip" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationTooltip" Storyboard.TargetProperty="IsOpen">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>


                        <Border x:Name="Border"
								BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="2"
                                Opacity="1" />
                        <Border x:Name="MouseOverVisual" Grid.RowSpan="2" Grid.ColumnSpan="2" CornerRadius="{StaticResource SplitButton_SpanCornerRadius}"
								BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource ControlOuterBorder_MouseOver}"
								IsHitTestVisible="False" Opacity="0" Visibility="Collapsed" />
                        <Border x:Name="DisabledVisualElement"
                                BorderBrush="{StaticResource ControlOuterBorder_Disabled}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{StaticResource ControlBackground_Disabled}"
                                CornerRadius="2"
                                IsHitTestVisible="False" Opacity="0" />


                        <ScrollViewer x:Name="ContentElement" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" BorderThickness="0" IsTabStop="False" Padding="{TemplateBinding Padding}" telerik:StyleManager.Theme="{StaticResource Theme}" />
                        <TextBlock x:Name="ReadOnlyElement" Text="{TemplateBinding Text}" Style="{StaticResource EditFormDataElementTextBlockStyle}" Visibility="Collapsed"/>


                        <Border x:Name="FocusVisual" Opacity="0" IsHitTestVisible="False" Grid.RowSpan="2" Grid.ColumnSpan="2" BorderBrush="{StaticResource ControlOuterBorder_Focused}" CornerRadius="{StaticResource SplitButton_SpanCornerRadius}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Border BorderBrush="{StaticResource ControlInnerBorder_Focused}" CornerRadius="{StaticResource SplitButton_SpanInnerCornerRadius}" BorderThickness="{TemplateBinding BorderThickness}" />
                        </Border>

                        <ContentPresenter x:Name="WatermarkVisualElement"
								Visibility="Collapsed"
                                Content="{TemplateBinding WatermarkContent}"
                                ContentTemplate="{TemplateBinding WatermarkTemplate}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                IsHitTestVisible="False"
                                Margin="{TemplateBinding Padding}"/>


                        <Telerik_Windows_Controls_Chromes:ValidationTooltip x:Name="ValidationTooltip" 
								Grid.ColumnSpan="2" Visibility="Collapsed"
								telerik:StyleManager.Theme="{StaticResource Theme}"
								TooltipPlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" TooltipContent="{Binding Path=(Validation.Errors), RelativeSource={RelativeSource TemplatedParent}}">
                        </Telerik_Windows_Controls_Chromes:ValidationTooltip>


                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ScreenerCommentTextBoxStyle" TargetType="telerik:RadWatermarkTextBox">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="AcceptsReturn" Value="True"/>
        <Setter Property="MaxHeight" Value="100"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid x:Name="RootElement" MinWidth="200">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="#FF99C1E2" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="MouseOverBorder"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ReadOnlyVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" Opacity="1" Background="White" BorderBrush="#FF8B8B8B">
                            <Grid>
                                <Border x:Name="ReadOnlyVisualElement" Background="#5EC9C9C9" Opacity="0"/>
                                <Border x:Name="MouseOverBorder" BorderBrush="Transparent" BorderThickness="1">
                                    <ScrollViewer x:Name="ContentElement" BorderThickness="0" IsTabStop="False" Padding="{TemplateBinding Padding}" MaxHeight="100" VerticalScrollBarVisibility="Visible"/>
                                </Border>
                            </Grid>
                        </Border>
                        <Border x:Name="DisabledVisualElement" BorderBrush="#A5F7F7F7" BorderThickness="{TemplateBinding BorderThickness}" IsHitTestVisible="False" Opacity="0"/>
                        <Border x:Name="FocusVisualElement" BorderBrush="#FF6DBDD1" BorderThickness="{TemplateBinding BorderThickness}" IsHitTestVisible="False" Opacity="0"/>
                        <Border x:Name="ValidationErrorElement" BorderBrush="#FFDB000C" BorderThickness="1" CornerRadius="1" Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                                    <ToolTip.Triggers>
                                        <EventTrigger RoutedEvent="Canvas.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <System:Boolean>true</System:Boolean>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </ToolTip.Triggers>
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
                                <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="#FFDC000C" Margin="1,3,0,0"/>
                                <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="#ffffff" Margin="1,3,0,0"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FormDatePickerContentControlStyle" TargetType="ContentControl">
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <TextBlock TextWrapping="Wrap" Text="{TemplateBinding Content}" VerticalAlignment="Center" TextAlignment="Right"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--<Style x:Key="FormNumericUpDownStyle" TargetType="toolkitInput:NumericUpDown">
        <Setter Property="Margin" Value="6,0,0,12"/>
    </Style>-->

    <!-- FormRichTextBox -->
    <Style x:Key="FormRichTextBoxStyle" TargetType="RichTextBox">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RichTextBox">
                    <Grid x:Name="RootElement" Margin="0,0,0,16">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="#FF99C1E2" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="MouseOverBorder"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ReadOnlyVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="1" Opacity="1">
                            <Grid>
                                <Border x:Name="ReadOnlyVisualElement" Background="#72F7F7F7" Opacity="0"/>
                                <Border x:Name="MouseOverBorder" BorderBrush="Transparent" BorderThickness="1">
                                    <ScrollViewer x:Name="ContentElement" BorderThickness="0" IsTabStop="False" Padding="{TemplateBinding Padding}"/>
                                </Border>
                            </Grid>
                        </Border>
                        <Border x:Name="DisabledVisualElement" BorderBrush="#A5F7F7F7" BorderThickness="{TemplateBinding BorderThickness}" Background="#A5F7F7F7" IsHitTestVisible="False" Opacity="0"/>
                        <Border x:Name="FocusVisualElement" BorderBrush="#FF6DBDD1" BorderThickness="{TemplateBinding BorderThickness}" IsHitTestVisible="False" Margin="1" Opacity="0"/>
                        <Border x:Name="ValidationErrorElement" BorderBrush="#FFDB000C" BorderThickness="1" CornerRadius="1" Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                                    <ToolTip.Triggers>
                                        <EventTrigger RoutedEvent="Canvas.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <System:Boolean>true</System:Boolean>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </ToolTip.Triggers>
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
                                <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="#FFDC000C" Margin="1,3,0,0"/>
                                <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="#ffffff" Margin="1,3,0,0"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- FormComboBoxStyle -->
    <Style x:Key="FormComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Padding" Value="6,2,25,2"/>
        <Setter Property="Background" Value="#FF1F3B53"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="TabNavigation" Value="Once"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid HorizontalAlignment="Left" Margin="6,0,0,12" MinHeight="23" MinWidth="200">
                        <Grid.Resources>
                            <Style x:Name="1comboToggleStyle" TargetType="ToggleButton">
                                <Setter Property="Foreground" Value="#FF333333"/>
                                <Setter Property="Background" Value="#FF1F3B53"/>
                                <Setter Property="BorderBrush">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFA3AEB9" Offset="0"/>
                                            <GradientStop Color="#FF8399A9" Offset="0.375"/>
                                            <GradientStop Color="#FF718597" Offset="0.375"/>
                                            <GradientStop Color="#FF617584" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="Padding" Value="3"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Grid>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal"/>
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundOverlay"/>
                                                                <ColorAnimation Duration="0" To="#7FFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                                                <ColorAnimation Duration="0" To="#CCFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                                                <ColorAnimation Duration="0" To="#F2FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Pressed">
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundOverlay2"/>
                                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Highlight"/>
                                                                <ColorAnimation Duration="0" To="#E5FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                                                <ColorAnimation Duration="0" To="#BCFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                                                <ColorAnimation Duration="0" To="#6BFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                                                <ColorAnimation Duration="0" To="#F2FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Disabled"/>
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="CheckStates">
                                                        <VisualState x:Name="Checked">
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundOverlay3"/>
                                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Highlight"/>
                                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundGradient2"/>
                                                                <ColorAnimation Duration="0" To="#E5FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient2"/>
                                                                <ColorAnimation Duration="0" To="#BCFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient2"/>
                                                                <ColorAnimation Duration="0" To="#6BFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient2"/>
                                                                <ColorAnimation Duration="0" To="#F2FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient2"/>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Unchecked"/>
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="FocusStates">
                                                        <VisualState x:Name="Focused">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisualElement">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Unfocused"/>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Rectangle x:Name="Background" Fill="{TemplateBinding Background}" RadiusY="3" RadiusX="3" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                                                <Rectangle x:Name="BackgroundOverlay" Fill="#FF448DCA" Opacity="0" RadiusY="3" RadiusX="3" Stroke="#00000000" StrokeThickness="{TemplateBinding BorderThickness}"/>
                                                <Rectangle x:Name="BackgroundOverlay2" Fill="#FF448DCA" Opacity="0" RadiusY="3" RadiusX="3" Stroke="#00000000" StrokeThickness="{TemplateBinding BorderThickness}"/>
                                                <Rectangle x:Name="BackgroundGradient" Margin="{TemplateBinding BorderThickness}" RadiusY="2" RadiusX="2" Stroke="#FFFFFFFF" StrokeThickness="1">
                                                    <Rectangle.Fill>
                                                        <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                                            <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                                            <GradientStop Color="#F9FFFFFF" Offset="0.375"/>
                                                            <GradientStop Color="#E5FFFFFF" Offset="0.625"/>
                                                            <GradientStop Color="#C6FFFFFF" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </Rectangle.Fill>
                                                </Rectangle>
                                                <Rectangle x:Name="BackgroundOverlay3" Fill="#FF448DCA" Opacity="0" RadiusY="3" RadiusX="3" Stroke="#00000000" StrokeThickness="{TemplateBinding BorderThickness}"/>
                                                <Rectangle x:Name="BackgroundGradient2" Margin="{TemplateBinding BorderThickness}" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FFFFFFFF" StrokeThickness="1">
                                                    <Rectangle.Fill>
                                                        <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                                            <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                                            <GradientStop Color="#F9FFFFFF" Offset="0.375"/>
                                                            <GradientStop Color="#E5FFFFFF" Offset="0.625"/>
                                                            <GradientStop Color="#C6FFFFFF" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </Rectangle.Fill>
                                                </Rectangle>
                                                <Rectangle x:Name="Highlight" IsHitTestVisible="false" Margin="{TemplateBinding BorderThickness}" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1"/>
                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Margin="1" RadiusY="3.5" RadiusX="3.5" Stroke="#FF6DBDD1" StrokeThickness="1" Visibility="Collapsed"/>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="00:00:00" To=".55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="00:00:00" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="FocusedDropDown">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PopupBorder">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="ContentPresenterBorder">
                            <Grid>
                                <ToggleButton x:Name="DropDownToggle" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" Margin="0" VerticalAlignment="Stretch">
                                    <Path x:Name="BtnArrow" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z " HorizontalAlignment="Right" Height="4" Margin="0,0,6,0" Stretch="Uniform" Width="8">
                                        <Path.Fill>
                                            <SolidColorBrush x:Name="BtnArrowColor" Color="#FF333333"/>
                                        </Path.Fill>
                                    </Path>
                                </ToggleButton>
                                <ContentPresenter x:Name="ContentPresenter"  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}">
                                    <TextBlock Text=" "/>
                                </ContentPresenter>
                            </Grid>
                        </Border>
                        <Rectangle x:Name="DisabledVisualElement" Fill="White" IsHitTestVisible="false" Opacity="0" RadiusY="3" RadiusX="3"/>
                        <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Margin="1,0" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1"/>
                        <Border x:Name="ValidationErrorElement" BorderBrush="#FFDB000C" BorderThickness="1" CornerRadius="1" Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                                    <ToolTip.Triggers>
                                        <EventTrigger RoutedEvent="Canvas.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <System:Boolean>true</System:Boolean>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </ToolTip.Triggers>
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
                                <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="#FFDC000C" Margin="1,3,0,0"/>
                                <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="#ffffff" Margin="1,3,0,0"/>
                            </Grid>
                        </Border>
                        <Popup x:Name="Popup">
                            <Border x:Name="PopupBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" HorizontalAlignment="Stretch" Height="Auto">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                        <GradientStop Color="#FFFEFEFE" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <ScrollViewer x:Name="ScrollViewer" BorderThickness="0" Padding="1">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Height" Value="Auto"/>
    </Style>
	<Style x:Key="FormComboBoxRemStyle" TargetType="telerikInput:RadComboBox" >
        <Setter Property="Background" Value="{StaticResource FormButtonBackgroundBrushNormal}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="TabNavigation" Value="Once"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="BorderBrush" Value="{StaticResource FormButtonOuterBorderBrushNormal}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikInput:RadComboBox">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="00:00:00" To=".55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="00:00:00" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="FocusedDropDown">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PopupBorder">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="ContentPresenterBorder">
                            <Grid>
                                <telerik:RadToggleButton x:Name="DropDownToggle" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" Margin="0" VerticalAlignment="Stretch" Style="{StaticResource FormToggleButtonRemStyle}">
                                    <Path x:Name="BtnArrow" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z " HorizontalAlignment="Right" Height="4" Margin="0,0,6,0" Stretch="Uniform" Width="8">
                                        <Path.Fill>
                                            <SolidColorBrush x:Name="BtnArrowColor" Color="#FF333333"/>
                                        </Path.Fill>
                                    </Path>
                                </telerik:RadToggleButton>
                                <ContentPresenter x:Name="ContentPresenter"  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}">
                                    <TextBlock Text=" "/>
                                </ContentPresenter>
                            </Grid>
                        </Border>
                        <Rectangle x:Name="DisabledVisualElement" Fill="White" IsHitTestVisible="false" Opacity="0" RadiusY="3" RadiusX="3"/>
                        <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Margin="1,0" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1"/>
                        <Border x:Name="ValidationErrorElement" BorderBrush="#FFDB000C" BorderThickness="1" CornerRadius="1" Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                                    <ToolTip.Triggers>
                                        <EventTrigger RoutedEvent="Canvas.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <System:Boolean>true</System:Boolean>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </ToolTip.Triggers>
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
                                <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="#FFDC000C" Margin="1,3,0,0"/>
                                <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="#ffffff" Margin="1,3,0,0"/>
                            </Grid>
                        </Border>
                        <Popup x:Name="Popup">
                            <Border x:Name="PopupBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" HorizontalAlignment="Stretch" Height="Auto">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                        <GradientStop Color="#FFFEFEFE" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <ScrollViewer x:Name="ScrollViewer" BorderThickness="0" Padding="1">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Foreground" Value="{StaticResource FormButtonForegroundBrushNormal}"/>
    </Style>

    <!-- Comment Text Box -->

    <!-- FormTextBox -->
    <Style x:Key="FormTextBox" TargetType="TextBox">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid x:Name="RootElement" HorizontalAlignment="Left" Margin="6,0,0,12" MinWidth="200">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="#FF99C1E2" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="MouseOverBorder"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ReadOnlyVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="1" Opacity="1">
                            <Grid>
                                <Border x:Name="ReadOnlyVisualElement" Background="#5EC9C9C9" Opacity="0"/>
                                <Border x:Name="MouseOverBorder" BorderBrush="Transparent" BorderThickness="1">
                                    <ScrollViewer x:Name="ContentElement" BorderThickness="0" IsTabStop="False" Padding="{TemplateBinding Padding}"/>
                                </Border>
                            </Grid>
                        </Border>
                        <Border x:Name="DisabledVisualElement" BorderBrush="#A5F7F7F7" BorderThickness="{TemplateBinding BorderThickness}" Background="#A5F7F7F7" IsHitTestVisible="False" Opacity="0"/>
                        <Border x:Name="FocusVisualElement" BorderBrush="#FF6DBDD1" BorderThickness="{TemplateBinding BorderThickness}" IsHitTestVisible="False" Margin="1" Opacity="0"/>
                        <Border x:Name="ValidationErrorElement" BorderBrush="#FFDB000C" BorderThickness="1" CornerRadius="1" Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                                    <ToolTip.Triggers>
                                        <EventTrigger RoutedEvent="Canvas.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <System:Boolean>true</System:Boolean>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </ToolTip.Triggers>
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
                                <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="#FFDC000C" Margin="1,3,0,0"/>
                                <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="#ffffff" Margin="1,3,0,0"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- FormLable -->
    <Style x:Key="FormLabel" TargetType="dataInput:Label">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dataInput:Label">
                    <Grid Margin="6,0,0,0">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="Invalid">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0:0:1.5" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentControl">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush Color="Red"/>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="RequiredStates">
                                <VisualState x:Name="NotRequired"/>
                                <VisualState x:Name="Required">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="FontWeight" Storyboard.TargetName="ContentControl">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="SemiBold"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2" Padding="{TemplateBinding Padding}" VerticalAlignment="Bottom">
                            <ContentControl x:Name="ContentControl" Cursor="{TemplateBinding Cursor}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsTabStop="False" VerticalAlignment="{TemplateBinding VerticalAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Style="{StaticResource FormDatePickerContentControlStyle}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- FormDatePickerStyle-->
    <Style x:Key="FormDatePickerStyle" TargetType="sdk1:DatePicker">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="SelectionBackground" Value="#FF444444"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint=".5,0" StartPoint=".5,1">
                    <GradientStop Color="#FF617584" Offset="0"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FFA3AEB9" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="sdk1:DatePicker">
                    <Grid x:Name="Root" Margin="6,4,2,12">
                        <Grid.Resources>
                            <SolidColorBrush x:Key="DisabledBrush" Color="#8CFFFFFF"/>
                            <ControlTemplate x:Key="DropDownButtonTemplate" TargetType="Button">
                                <Grid FlowDirection="LeftToRight">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualStateGroup.Transitions>
                                                <VisualTransition GeneratedDuration="0"/>
                                                <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver"/>
                                                <VisualTransition GeneratedDuration="0:0:0.1" To="Pressed"/>
                                            </VisualStateGroup.Transitions>
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <ColorAnimation Duration="0" To="#FF448DCA" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background"/>
                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                        <SplineColorKeyFrame KeyTime="0" Value="#7FFFFFFF"/>
                                                    </ColorAnimationUsingKeyFrames>
                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                        <SplineColorKeyFrame KeyTime="0" Value="#CCFFFFFF"/>
                                                    </ColorAnimationUsingKeyFrames>
                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                        <SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF"/>
                                                    </ColorAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background">
                                                        <SplineColorKeyFrame KeyTime="0" Value="#FF448DCA"/>
                                                    </ColorAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Highlight">
                                                        <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                        <SplineColorKeyFrame KeyTime="0" Value="#EAFFFFFF"/>
                                                    </ColorAnimationUsingKeyFrames>
                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                        <SplineColorKeyFrame KeyTime="0" Value="#C6FFFFFF"/>
                                                    </ColorAnimationUsingKeyFrames>
                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                        <SplineColorKeyFrame KeyTime="0" Value="#6BFFFFFF"/>
                                                    </ColorAnimationUsingKeyFrames>
                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                        <SplineColorKeyFrame KeyTime="0" Value="#F4FFFFFF"/>
                                                    </ColorAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisual">
                                                        <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Grid Background="#11FFFFFF" HorizontalAlignment="Center" Height="18" Margin="0" VerticalAlignment="Center" Width="19">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="20*"/>
                                            <ColumnDefinition Width="20*"/>
                                            <ColumnDefinition Width="20*"/>
                                            <ColumnDefinition Width="20*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="23*"/>
                                            <RowDefinition Height="19*"/>
                                            <RowDefinition Height="19*"/>
                                            <RowDefinition Height="19*"/>
                                        </Grid.RowDefinitions>
                                        <Border x:Name="Highlight" BorderBrush="#FF6DBDD1" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius="0,0,1,1" Margin="-1" Opacity="0" Grid.Row="0" Grid.RowSpan="4"/>
                                        <Border x:Name="Background" BorderBrush="#FFFFFFFF" BorderThickness="1" Background="#FF1F3B53" Grid.ColumnSpan="4" CornerRadius=".5" Margin="0,-1,0,0" Opacity="1" Grid.Row="1" Grid.RowSpan="3"/>
                                        <Border x:Name="BackgroundGradient" BorderBrush="#BF000000" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius=".5" Margin="0,-1,0,0" Opacity="1" Grid.Row="1" Grid.RowSpan="3">
                                            <Border.Background>
                                                <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                                    <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                                    <GradientStop Color="#F9FFFFFF" Offset="0.375"/>
                                                    <GradientStop Color="#E5FFFFFF" Offset="0.625"/>
                                                    <GradientStop Color="#C6FFFFFF" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Border.Background>
                                        </Border>
                                        <Rectangle Grid.ColumnSpan="4" Grid.RowSpan="1" StrokeThickness="1">
                                            <Rectangle.Fill>
                                                <LinearGradientBrush EndPoint="0.3,-1.1" StartPoint="0.46,1.6">
                                                    <GradientStop Color="#FF4084BD"/>
                                                    <GradientStop Color="#FFAFCFEA" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                            <Rectangle.Stroke>
                                                <LinearGradientBrush EndPoint="0.48,-1" StartPoint="0.48,1.25">
                                                    <GradientStop Color="#FF494949"/>
                                                    <GradientStop Color="#FF9F9F9F" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Rectangle.Stroke>
                                        </Rectangle>
                                        <Path Grid.ColumnSpan="4" Grid.Column="0" Data="M11.426758,8.4305077 L11.749023,8.4305077 L11.749023,16.331387 L10.674805,16.331387 L10.674805,10.299648 L9.0742188,11.298672 L9.0742188,10.294277 C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 C10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077 z M14.65086,8.4305077 L18.566387,8.4305077 L18.566387,9.3435936 L15.671368,9.3435936 L15.671368,11.255703 C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 C17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 C18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 C18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 C15.560365,16.438808 14.951641,16.234707 14.468243,15.826504 L14.881817,14.929531 C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 C17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 C17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 C15.83071,11.873379 15.399232,12.079271 15.016094,12.491055 L14.65086,12.238613 z" Fill="#FF2F2F2F" HorizontalAlignment="Center" Margin="4,3,4,3" Grid.Row="1" Grid.RowSpan="3" RenderTransformOrigin="0.5,0.5" Stretch="Fill" VerticalAlignment="Center"/>
                                        <Ellipse Grid.ColumnSpan="4" Fill="#FFFFFFFF" HorizontalAlignment="Center" Height="3" StrokeThickness="0" VerticalAlignment="Center" Width="3"/>
                                        <Border x:Name="DisabledVisual" BorderBrush="#B2FFFFFF" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius="0,0,.5,.5" Opacity="0" Grid.Row="0" Grid.RowSpan="4"/>
                                    </Grid>
                                </Grid>
                            </ControlTemplate>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisual"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <primitives:DatePickerTextBox x:Name="TextBox" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" Padding="{TemplateBinding Padding}" SelectionBackground="{TemplateBinding SelectionBackground}"/>
                        <Border x:Name="ValidationErrorElement" BorderBrush="#FFDB000C" BorderThickness="1" Grid.Column="0" CornerRadius="1" Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding ElementName=TextBox}" Template="{StaticResource ValidationToolTipTemplate}">
                                    <ToolTip.Triggers>
                                        <EventTrigger RoutedEvent="Canvas.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <System:Boolean>true</System:Boolean>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </ToolTip.Triggers>
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
                                <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="#FFDC000C" Margin="1,3,0,0"/>
                                <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="#FFFFFF" Margin="1,3,0,0"/>
                            </Grid>
                        </Border>
                        <Button x:Name="Button" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="1" Foreground="{TemplateBinding Foreground}" Margin="2,0,2,0" Template="{StaticResource DropDownButtonTemplate}" Width="20"/>
                        <Grid x:Name="DisabledVisual" Grid.ColumnSpan="2" IsHitTestVisible="False" Opacity="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle Fill="#8CFFFFFF" RadiusY="1" RadiusX="1"/>
                            <Rectangle Grid.Column="1" Fill="#8CFFFFFF" Height="18" Margin="2,0,2,0" RadiusY="1" RadiusX="1" Width="19"/>
                        </Grid>
                        <Popup x:Name="Popup"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- FormCheckBoxStyle -->
    <Style x:Key="FormCheckBoxStyle" TargetType="CheckBox">
        <Setter Property="Background" Value="#FF448DCA"/>
        <Setter Property="Margin" Value="6,0,0,12"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Padding" Value="4,1,0,0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid Margin="4,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="16"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundOverlay"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BoxMiddleBackground"/>
                                        <ColorAnimation Duration="0" To="#7FFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
                                        <ColorAnimation Duration="0" To="#CCFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
                                        <ColorAnimation Duration="0" To="#F2FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundOverlay"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BoxMiddleBackground"/>
                                        <ColorAnimation Duration="0" To="#6BFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
                                        <ColorAnimation Duration="0" To="#C6FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
                                        <ColorAnimation Duration="0" To="#EAFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
                                        <ColorAnimation Duration="0" To="#F4FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
                                        <ColorAnimation Duration="0" To="#FF6DBDD1" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
                                        <ColorAnimation Duration="0" To="#FF6DBDD1" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
                                        <ColorAnimation Duration="0" To="#FF6DBDD1" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
                                        <ColorAnimation Duration="0" To="#FF6DBDD1" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                        <DoubleAnimation Duration="0" To="0.55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckIcon"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IndeterminateIcon"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentFocusVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid HorizontalAlignment="Left" VerticalAlignment="Top">
                            <Rectangle x:Name="Background" Fill="#FFFFFFFF" Height="14" Margin="1" RadiusY="1" RadiusX="1" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" Width="14"/>
                            <Rectangle x:Name="BackgroundOverlay" Fill="#FFC4DBEE" Height="14" Margin="1" Opacity="0" RadiusY="1" RadiusX="1" Stroke="#00000000" StrokeThickness="1" Width="14"/>
                            <Rectangle x:Name="BoxMiddleBackground" Fill="{TemplateBinding Background}" Height="10" RadiusY="1" RadiusX="1" Stroke="#00000000" StrokeThickness="1" Width="10"/>
                            <Rectangle x:Name="BoxMiddle" Height="10" RadiusY="1" RadiusX="1" StrokeThickness="1" Width="10">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.64,0.88" StartPoint="0.62,0.15">
                                        <GradientStop Color="#FFFFFFFF" Offset="0.013"/>
                                        <GradientStop Color="#F9FFFFFF" Offset="0.375"/>
                                        <GradientStop Color="#EAFFFFFF" Offset="0.603"/>
                                        <GradientStop Color="#D8FFFFFF" Offset="1"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                                <Rectangle.Stroke>
                                    <LinearGradientBrush EndPoint=".5,1" StartPoint=".5,0">
                                        <GradientStop Color="#FFFFFFFF" Offset="1"/>
                                        <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                        <GradientStop Color="#FFFFFFFF" Offset="0.375"/>
                                        <GradientStop Color="#FFFFFFFF" Offset="0.375"/>
                                    </LinearGradientBrush>
                                </Rectangle.Stroke>
                            </Rectangle>
                            <Rectangle x:Name="BoxMiddleLine" Height="10" Opacity=".2" RadiusY="1" RadiusX="1" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" Width="10"/>
                            <Path x:Name="CheckIcon" Data="M102.03442,598.79645 L105.22962,597.78918 L106.78825,600.42358 C106.78825,600.42358 108.51028,595.74304 110.21724,593.60419 C112.00967,591.35822 114.89314,591.42316 114.89314,591.42316 C114.89314,591.42316 112.67844,593.42645 111.93174,594.44464 C110.7449,596.06293 107.15683,604.13837 107.15683,604.13837 z" Fill="#FF333333" FlowDirection="LeftToRight" Height="10" Margin="1,1,0,1.5" Opacity="0" Stretch="Fill" Width="10.5"/>
                            <Rectangle x:Name="IndeterminateIcon" Fill="#FF333333" Height="2" Opacity="0" Width="6"/>
                            <Rectangle x:Name="DisabledVisualElement" Fill="#FFFFFFFF" Height="14" Opacity="0" RadiusY="1" RadiusX="1" Width="14"/>
                            <Rectangle x:Name="ContentFocusVisualElement" Height="16" IsHitTestVisible="false" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1" Width="16"/>
                            <Border x:Name="ValidationErrorElement" BorderBrush="#FFDB000C" BorderThickness="1" CornerRadius="1" Margin="1" ToolTipService.PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
                                <ToolTipService.ToolTip>
                                    <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                                        <ToolTip.Triggers>
                                            <EventTrigger RoutedEvent="Canvas.Loaded">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <System:Boolean>true</System:Boolean>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </ToolTip.Triggers>
                                    </ToolTip>
                                </ToolTipService.ToolTip>
                                <Grid Background="Transparent" HorizontalAlignment="Right" Height="10" Margin="0,-4,-4,0" VerticalAlignment="Top" Width="10">
                                    <Path Data="M 1,0 L5,0 A 2,2 90 0 1 7,2 L7,6 z" Fill="#FFDC000C" Margin="0,3,0,0"/>
                                    <Path Data="M 0,0 L2,0 L 7,5 L7,7" Fill="#ffffff" Margin="0,3,0,0"/>
                                </Grid>
                            </Border>
                        </Grid>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FormSectionListBoxStyle" TargetType="ListBox">
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="TabNavigation" Value="Once"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused"/>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)" Storyboard.TargetName="FocusElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>2</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusElement" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="#00E0D563" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="FocusElement" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
                            <ScrollViewer x:Name="ScrollViewer" BorderBrush="Transparent" BorderThickness="0" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" TabNavigation="{TemplateBinding TabNavigation}" VerticalScrollBarVisibility="Disabled">
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </Border>
                        <Border x:Name="ValidationErrorElement" BorderBrush="#FFDB000C" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                                    <ToolTip.Triggers>
                                        <EventTrigger RoutedEvent="Canvas.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <System:Boolean>true</System:Boolean>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </ToolTip.Triggers>
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <Grid Background="Transparent" HorizontalAlignment="Right" Height="10" Margin="0,-4,-4,0" VerticalAlignment="Top" Width="10">
                                <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="#FFDC000C" Margin="-1,3,0,0"/>
                                <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="#ffffff" Margin="-1,3,0,0"/>
                            </Grid>
                        </Border>
                        <Border x:Name="FocusElement" BorderBrush="#FFE0D563" BorderThickness="1" HorizontalAlignment="Left" Height="100" VerticalAlignment="Top" Width="100" Background="{StaticResource FormVisualStateBaseBackgroundDark}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Left Scroll Button:-->
    <Style x:Key="WorkspaceLeftScrollButtonStyle" TargetType="RepeatButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
												Storyboard.TargetName="ButtonBorder"
												Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="ButtonBorder">

                            <Grid>
                                <Telerik_Windows_Controls_Chromes:ButtonChrome x:Name="ButtonVisual"
										telerik:StyleManager.Theme="{StaticResource Theme}"
										Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
										BorderThickness="1"
										BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
										CornerRadius="0"
										RenderEnabled="{TemplateBinding IsEnabled}"
										RenderMouseOver="{TemplateBinding IsMouseOver}"
										RenderPressed="{TemplateBinding IsPressed}" />

                                <Path x:Name="Path" Stretch="Uniform" Height="7" Width="5"
										Margin="{TemplateBinding Padding}"
									  
									Data="F1 M 110.692,342.252L 110.692,352.682L 104.594,347.467L 110.692,342.252 Z"
									  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
									  Fill="#FF000000" >
                                </Path>
                            </Grid>
                        </Border>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="17" />
        <Setter Property="Content" Value="" />
        <Setter Property="Padding" Value="5 1" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="telerik:RadDockPanel.Dock" Value="Left" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="White" />
                    <GradientStop Color="#FFE3E8EB" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="#FFB2B2B2" />
        <Setter Property="IsTabStop" Value="False" />
    </Style>

    <!--Right Scroll Button:-->
    <Style x:Key="WorkspaceRightScrollButtonStyle" TargetType="RepeatButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
												Storyboard.TargetName="ButtonBorder"
												Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="ButtonBorder">
                            <Grid>
                                <Telerik_Windows_Controls_Chromes:ButtonChrome x:Name="ButtonVisual"
										telerik:StyleManager.Theme="{StaticResource Theme}"
										Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
										BorderThickness="1"
										BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
										CornerRadius="0"
										RenderEnabled="{TemplateBinding IsEnabled}"
										RenderMouseOver="{TemplateBinding IsMouseOver}"
										RenderPressed="{TemplateBinding IsPressed}" />

                                <Path x:Name="Path" Stretch="Uniform" Height="7" Width="5"
										Margin="{TemplateBinding Padding}"
									  
									Data="M0.5,0.5 L5.2,5.4 L5.2,5.4 L0.5,10.5 z"
									  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
									  Fill="#FF000000" />
                            </Grid>
                        </Border>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="17" />
        <Setter Property="Content" Value="" />
        <Setter Property="Padding" Value="5 1" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="telerik:RadDockPanel.Dock" Value="Left" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="White" />
                    <GradientStop Color="#FFE3E8EB" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="#FFB2B2B2" />
        <Setter Property="IsTabStop" Value="False" />
    </Style>

    <Style x:Key="CloseButtonStyle" BasedOn="{StaticResource BorderlessCloseButtonRemStyle}" TargetType="telerik:RadButton">
        <Setter Property="Height" Value="14"/>
        <Setter Property="Width" Value="14"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CloseRadButtonStyle" BasedOn="{StaticResource BorderlessCloseButtonRemStyle}" TargetType="telerik:RadButton">
        <Setter Property="Height" Value="14"/>
        <Setter Property="Width" Value="14"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="Padding" Value="0"/>

    </Style>


    <!-- Workspace Tab Styles Starts -->

    <DataTemplate x:Key="WorkspaceDefaultTemplate">
        <Grid Grid.ColumnSpan="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Border Grid.Column="0" Margin="0,0,4,0">
                <Grid>
                    <Canvas Width="34" Height="39" >
                        <Path Width="34" Height="39" Stretch="Fill" Fill="#FF0C4066" VerticalAlignment="Bottom" Data="F1 M 148.026,246.539L 148.026,285.319L 153.499,290.783L 153.499,285.319L 186.806,285.319L 186.806,246.539L 148.026,246.539 Z" UseLayoutRounding="False"/>
                        <Rectangle Stretch="Fill" HorizontalAlignment="Right" Height="32" VerticalAlignment="Bottom" Width="32" Canvas.Left="1" Canvas.Top="1">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0.5,1" EndPoint="0.5,-2.31194e-005">
                                    <GradientStop Color="#FF1375BB" Offset="0.659"/>
                                    <GradientStop Color="#FF25A9E1" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Canvas Width="20" Height="21" Canvas.Left="7" Canvas.Top="8">
                            <Path Stretch="Fill" Fill="#FF0C4066" Data="F1 M 280.981,261.975L 280.981,256.035L 277.588,256.035L 277.588,258.581L 274.193,255.187L 264.86,264.52L 266.557,264.52L 266.557,273.853L 271.648,273.853L 271.648,266.217L 276.738,266.217L 276.738,273.853L 281.829,273.853L 281.829,264.52L 283.528,264.52L 280.981,261.975 Z " Height="18.667" UseLayoutRounding="False" Width="18.668" Canvas.Top="-2"/>
                            <Path Stretch="Fill" Fill="#FFFFFFFF" Data="F1 M 281.648,263.307L 281.648,257.367L 278.255,257.367L 278.255,259.914L 274.86,256.519L 265.527,265.853L 267.224,265.853L 267.224,275.186L 272.315,275.186L 272.315,267.55L 277.406,267.55L 277.406,275.186L 282.496,275.186L 282.496,265.853L 284.195,265.853L 281.648,263.307 Z " Height="18.667" UseLayoutRounding="False" Width="18.668"/>
                        </Canvas>
                    </Canvas>
                </Grid>
            </Border>
            <TextBlock Text="{Binding HeaderContext}" Grid.Column="1" Margin="5,5,5,5" TextAlignment="Center" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left"/>
            <telerik:RadButton Visibility="{Binding IsActive, Converter={StaticResource BooleanToVisibilityConverterInstance}}"
        		Style="{StaticResource CloseRadButtonStyle}" Command="{Binding CloseViewCommand}" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0" Grid.Column="2">
                <telerik:RadButton.CommandParameter>
                    <System:Boolean>True</System:Boolean>
                </telerik:RadButton.CommandParameter>
            </telerik:RadButton>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="WorkspaceAdministrativeTemplate">
        <Grid Grid.ColumnSpan="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Border Grid.Column="0" Margin="0,0,4,0">
                <Grid>
                    <Canvas Width="34" Height="39" >
                        <Path Width="34" Height="39" Stretch="Fill" Fill="#FFAD9631" VerticalAlignment="Bottom" Data="F1 M 148.026,246.539L 148.026,285.319L 153.499,290.783L 153.499,285.319L 186.806,285.319L 186.806,246.539L 148.026,246.539 Z" UseLayoutRounding="False"/>
                        <Rectangle Stretch="Fill" HorizontalAlignment="Right" Height="32" VerticalAlignment="Bottom" Width="32" Canvas.Left="1" Canvas.Top="1">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0.5,1" EndPoint="0.5,-2.31194e-005">
                                    <GradientStop Color="#FFF7F6BC" Offset="1"/>
                                    <GradientStop Color="#FFECCB19"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Canvas Width="17" Height="21" Canvas.Left="9" Canvas.Top="6">
                            <Path Stretch="Fill" Fill="#FFAD9631" Data="F1 M 378.984,266.878C 380.79,266.878 382.255,265.414 382.255,263.608C 382.255,261.803 380.79,260.339 378.984,260.339C 377.179,260.339 375.715,261.803 375.715,263.608C 375.715,265.414 377.179,266.878 378.984,266.878 Z M 385.514,264.867C 384.955,264.867 384.224,265.748 384.063,266.056C 383.902,266.366 384.095,266.94 384.49,267.335C 384.884,267.731 384.808,268.454 384.319,268.942C 383.83,269.431 383.107,269.508 382.712,269.112C 382.318,268.718 381.187,268.818 380.852,268.926C 380.516,269.034 380.242,269.578 380.242,270.136C 380.242,270.695 379.676,271.151 378.984,271.151C 378.292,271.151 377.727,270.695 377.727,270.136C 377.727,269.578 376.846,268.847 376.536,268.686C 376.228,268.526 375.652,268.718 375.259,269.112C 374.863,269.507 374.14,269.431 373.651,268.942C 373.162,268.452 373.086,267.73 373.48,267.335C 373.875,266.939 373.776,265.811 373.668,265.475C 373.56,265.139 373.015,264.864 372.456,264.864C 371.899,264.864 371.442,264.299 371.442,263.607C 371.442,262.916 371.899,262.35 372.456,262.351C 373.015,262.351 373.747,261.468 373.908,261.159C 374.068,260.851 373.876,260.276 373.482,259.882C 373.087,259.487 373.163,258.764 373.652,258.274C 374.142,257.786 374.864,257.71 375.26,258.103C 375.655,258.499 376.783,258.4 377.119,258.292C 377.455,258.184 377.728,257.639 377.728,257.08C 377.728,256.522 378.294,256.066 378.986,256.066C 379.679,256.066 380.244,256.522 380.244,257.08C 380.244,257.639 381.126,258.371 381.434,258.531C 381.742,258.691 382.318,258.499 382.712,258.104C 383.108,257.71 383.831,257.787 384.319,258.275C 384.808,258.764 384.884,259.488 384.49,259.882C 384.095,260.276 384.195,261.406 384.303,261.742C 384.411,262.076 384.955,262.351 385.514,262.352C 386.071,262.352 386.528,262.918 386.528,263.61C 386.528,264.302 386.071,264.867 385.514,264.867 Z M 388.541,273.414C 388.541,272.719 387.98,272.157 387.285,272.157C 386.589,272.157 386.026,272.719 386.026,273.414C 386.026,274.107 386.589,274.671 387.285,274.671C 387.98,274.671 388.541,274.107 388.541,273.414 Z M 390.546,274.042C 390.268,274.042 389.904,274.483 389.822,274.638C 389.742,274.793 389.838,275.081 390.036,275.278C 390.233,275.475 390.194,275.837 389.95,276.081C 389.706,276.326 389.345,276.365 389.146,276.166C 388.949,275.969 388.385,276.019 388.217,276.073C 388.049,276.126 387.912,276.399 387.912,276.678C 387.912,276.957 387.629,277.186 387.282,277.186C 386.936,277.186 386.653,276.957 386.653,276.678C 386.653,276.399 386.213,276.034 386.058,275.954C 385.904,275.873 385.617,275.969 385.42,276.166C 385.224,276.365 384.861,276.326 384.617,276.081C 384.372,275.837 384.333,275.474 384.53,275.277C 384.728,275.079 384.678,274.515 384.624,274.347C 384.569,274.179 384.297,274.042 384.018,274.042C 383.74,274.042 383.512,273.759 383.512,273.414C 383.512,273.067 383.74,272.785 384.018,272.785C 384.297,272.785 384.664,272.343 384.744,272.19C 384.824,272.035 384.729,271.747 384.532,271.55C 384.334,271.353 384.373,270.991 384.617,270.746C 384.862,270.501 385.224,270.463 385.421,270.661C 385.618,270.858 386.182,270.809 386.35,270.755C 386.517,270.701 386.654,270.429 386.654,270.15C 386.654,269.87 386.938,269.642 387.284,269.642C 387.629,269.642 387.912,269.87 387.912,270.15C 387.912,270.429 388.353,270.794 388.508,270.874C 388.662,270.955 388.95,270.859 389.148,270.662C 389.345,270.463 389.706,270.502 389.95,270.747C 390.194,270.991 390.233,271.353 390.036,271.55C 389.838,271.747 389.888,272.313 389.942,272.479C 389.997,272.647 390.269,272.785 390.548,272.785C 390.826,272.785 391.054,273.069 391.054,273.414C 391.054,273.759 390.825,274.043 390.546,274.042 Z " Height="21.12" UseLayoutRounding="False" Width="19.613" Canvas.Left="-2"/>
                            <Path Stretch="Fill" Fill="#FFFFFFFF" Data="F1 M 378.984,266.878C 380.79,266.878 382.255,265.414 382.255,263.608C 382.255,261.803 380.79,260.339 378.984,260.339C 377.179,260.339 375.715,261.803 375.715,263.608C 375.715,265.414 377.179,266.878 378.984,266.878 Z M 385.514,264.867C 384.955,264.867 384.224,265.748 384.063,266.056C 383.902,266.366 384.095,266.94 384.49,267.335C 384.884,267.731 384.808,268.454 384.319,268.942C 383.83,269.431 383.107,269.508 382.712,269.112C 382.318,268.718 381.187,268.818 380.852,268.926C 380.516,269.034 380.242,269.578 380.242,270.136C 380.242,270.695 379.676,271.151 378.984,271.151C 378.292,271.151 377.727,270.695 377.727,270.136C 377.727,269.578 376.846,268.847 376.536,268.686C 376.228,268.526 375.652,268.718 375.259,269.112C 374.863,269.507 374.14,269.431 373.651,268.942C 373.162,268.452 373.086,267.73 373.48,267.335C 373.875,266.939 373.776,265.811 373.668,265.475C 373.56,265.139 373.015,264.864 372.456,264.864C 371.899,264.864 371.442,264.299 371.442,263.607C 371.442,262.916 371.899,262.35 372.456,262.351C 373.015,262.351 373.747,261.468 373.908,261.159C 374.068,260.851 373.876,260.276 373.482,259.882C 373.087,259.487 373.163,258.764 373.652,258.274C 374.142,257.786 374.864,257.71 375.26,258.103C 375.655,258.499 376.783,258.4 377.119,258.292C 377.455,258.184 377.728,257.639 377.728,257.08C 377.728,256.522 378.294,256.066 378.986,256.066C 379.679,256.066 380.244,256.522 380.244,257.08C 380.244,257.639 381.126,258.371 381.434,258.531C 381.742,258.691 382.318,258.499 382.712,258.104C 383.108,257.71 383.831,257.787 384.319,258.275C 384.808,258.764 384.884,259.488 384.49,259.882C 384.095,260.276 384.195,261.406 384.303,261.742C 384.411,262.076 384.955,262.351 385.514,262.352C 386.071,262.352 386.528,262.918 386.528,263.61C 386.528,264.302 386.071,264.867 385.514,264.867 Z M 388.541,273.414C 388.541,272.719 387.98,272.157 387.285,272.157C 386.589,272.157 386.026,272.719 386.026,273.414C 386.026,274.107 386.589,274.671 387.285,274.671C 387.98,274.671 388.541,274.107 388.541,273.414 Z M 390.546,274.042C 390.268,274.042 389.904,274.483 389.822,274.638C 389.742,274.793 389.838,275.081 390.036,275.278C 390.233,275.475 390.194,275.837 389.95,276.081C 389.706,276.326 389.345,276.365 389.146,276.166C 388.949,275.969 388.385,276.019 388.217,276.073C 388.049,276.126 387.912,276.399 387.912,276.678C 387.912,276.957 387.629,277.186 387.282,277.186C 386.936,277.186 386.653,276.957 386.653,276.678C 386.653,276.399 386.213,276.034 386.058,275.954C 385.904,275.873 385.617,275.969 385.42,276.166C 385.224,276.365 384.861,276.326 384.617,276.081C 384.372,275.837 384.333,275.474 384.53,275.277C 384.728,275.079 384.678,274.515 384.624,274.347C 384.569,274.179 384.297,274.042 384.018,274.042C 383.74,274.042 383.512,273.759 383.512,273.414C 383.512,273.067 383.74,272.785 384.018,272.785C 384.297,272.785 384.664,272.343 384.744,272.19C 384.824,272.035 384.729,271.747 384.532,271.55C 384.334,271.353 384.373,270.991 384.617,270.746C 384.862,270.501 385.224,270.463 385.421,270.661C 385.618,270.858 386.182,270.809 386.35,270.755C 386.517,270.701 386.654,270.429 386.654,270.15C 386.654,269.87 386.938,269.642 387.284,269.642C 387.629,269.642 387.912,269.87 387.912,270.15C 387.912,270.429 388.353,270.794 388.508,270.874C 388.662,270.955 388.95,270.859 389.148,270.662C 389.345,270.463 389.706,270.502 389.95,270.747C 390.194,270.991 390.233,271.353 390.036,271.55C 389.838,271.747 389.888,272.313 389.942,272.479C 389.997,272.647 390.269,272.785 390.548,272.785C 390.826,272.785 391.054,273.069 391.054,273.414C 391.054,273.759 390.825,274.043 390.546,274.042 Z " Height="21.12" UseLayoutRounding="False" Width="19.613" Canvas.Top="1" Canvas.Left="-2"/>
                        </Canvas>
                    </Canvas>
                </Grid>
            </Border>
            <TextBlock Text="{Binding HeaderContext}" Grid.Column="1" Margin="5,5,5,5" TextAlignment="Center" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left"/>
            <telerik:RadButton Visibility="{Binding IsActive, Converter={StaticResource BooleanToVisibilityConverterInstance}}"
        		Style="{StaticResource CloseRadButtonStyle}" Command="{Binding CloseViewCommand}" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0" Grid.Column="2">
                <telerik:RadButton.CommandParameter>
                    <System:Boolean>True</System:Boolean>
                </telerik:RadButton.CommandParameter>
            </telerik:RadButton>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="WorkspaceLocationsTemplate">
        <Grid Grid.ColumnSpan="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Border Grid.Column="0" Margin="0,0,4,0">
                <Grid>
                    <Canvas Width="34" Height="39" >
                        <Path Width="34" Height="39" Stretch="Fill" Fill="#FF262261" VerticalAlignment="Bottom" Data="F1 M 148.026,246.539L 148.026,285.319L 153.499,290.783L 153.499,285.319L 186.806,285.319L 186.806,246.539L 148.026,246.539 Z" UseLayoutRounding="False"/>
                        <Rectangle Stretch="Fill" HorizontalAlignment="Right" Height="32" VerticalAlignment="Bottom" Width="32" Canvas.Left="1" Canvas.Top="1">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0.5,1" EndPoint="0.5,-2.31194e-005">
                                    <GradientStop Color="#FFA37CB7" Offset="1"/>
                                    <GradientStop Color="#FF652C90"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Canvas Width="17" Height="21" Canvas.Left="9" Canvas.Top="6">
                            <Path Stretch="Fill" Fill="#FF262261" Data="F1 M 337.387,261.396C 337.387,261.396 332.643,260.605 329.475,260.605C 326.311,260.605 324.728,259.023 324.728,259.023L 324.728,258.94C 325.424,258.685 325.92,258.024 325.92,257.24C 325.92,256.236 325.108,255.424 324.104,255.424C 323.1,255.424 322.288,256.236 322.288,257.24C 322.288,257.891 322.632,258.457 323.145,258.779L 323.145,278.864L 323.145,278.865C 323.155,279.294 323.503,279.641 323.935,279.641C 324.367,279.641 324.715,279.294 324.724,278.865L 324.728,278.865L 324.728,266.933C 324.728,266.933 326.311,268.516 329.475,268.516C 332.639,268.516 337.387,269.308 337.387,269.308L 335.013,265.352L 337.387,261.396 Z " Height="24.217" UseLayoutRounding="False" Width="15.099" Canvas.Top="-1" Canvas.Left="2"/>
                            <Path Stretch="Fill" Fill="#FFFFFFFF" Data="F1 M 337.387,261.396C 337.387,261.396 332.643,260.605 329.475,260.605C 326.311,260.605 324.728,259.023 324.728,259.023L 324.728,258.94C 325.424,258.685 325.92,258.024 325.92,257.24C 325.92,256.236 325.108,255.424 324.104,255.424C 323.1,255.424 322.288,256.236 322.288,257.24C 322.288,257.891 322.632,258.457 323.145,258.779L 323.145,278.864L 323.145,278.865C 323.155,279.294 323.503,279.641 323.935,279.641C 324.367,279.641 324.715,279.294 324.724,278.865L 324.728,278.865L 324.728,266.933C 324.728,266.933 326.311,268.516 329.475,268.516C 332.639,268.516 337.387,269.308 337.387,269.308L 335.013,265.352L 337.387,261.396 Z " Height="24.217" UseLayoutRounding="False" Width="15.099" Canvas.Left="2"/>
                        </Canvas>
                    </Canvas>
                </Grid>
            </Border>
            <TextBlock Text="{Binding HeaderContext}" Grid.Column="1" Margin="5,5,5,5" TextAlignment="Center" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left"/>
            <telerik:RadButton Visibility="{Binding IsActive, Converter={StaticResource BooleanToVisibilityConverterInstance}}"
        		Style="{StaticResource CloseRadButtonStyle}" Command="{Binding CloseViewCommand}" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0" Grid.Column="2">
                <telerik:RadButton.CommandParameter>
                    <System:Boolean>True</System:Boolean>
                </telerik:RadButton.CommandParameter>
            </telerik:RadButton>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="WorkspaceStaffTemplate">
        <Grid Grid.ColumnSpan="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Border Grid.Column="0" Margin="0,0,4,0">
                <Grid>
                    <Canvas Width="34" Height="39" >
                        <Path Width="34" Height="39" Stretch="Fill" Fill="#FF3B2314" VerticalAlignment="Bottom" Data="F1 M 148.026,246.539L 148.026,285.319L 153.499,290.783L 153.499,285.319L 186.806,285.319L 186.806,246.539L 148.026,246.539 Z" UseLayoutRounding="False"/>
                        <Rectangle Stretch="Fill" HorizontalAlignment="Right" Height="32" VerticalAlignment="Bottom" Width="32" Canvas.Left="1" Canvas.Top="1">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0.5,1" EndPoint="0.5,-2.31194e-005">
                                    <GradientStop Color="#FF603812" Offset="0.659"/>
                                    <GradientStop Color="#FFC39A6B" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Canvas Width="17" Height="21" Canvas.Left="9" Canvas.Top="6">
                            <Path Stretch="Fill" Fill="#FF3B2314" Data="F1 M 607.407,244.769L 607.407,243.389L 597.533,243.389L 597.533,244.769L 607.407,244.769 Z M 607.407,247.333L 607.407,245.953L 597.533,245.953L 597.533,247.333L 607.407,247.333 Z M 607.407,249.897L 607.407,248.517L 597.533,248.517L 597.533,249.897L 607.407,249.897 Z M 595.683,251.08L 595.683,247.689C 595.683,246.809 594.969,246.095 594.087,246.095L 588.703,246.095C 587.821,246.095 587.107,246.809 587.107,247.689L 587.107,251.08L 595.683,251.08 Z M 591.495,240.311C 590.063,240.311 588.901,241.472 588.901,242.904C 588.901,244.336 590.063,245.496 591.495,245.496C 592.924,245.496 594.087,244.336 594.087,242.904C 594.087,241.472 592.924,240.311 591.495,240.311 Z M 608.203,235.62C 609.195,235.62 610,236.385 610,237.328L 610,251.145C 610,252.088 609.195,252.853 608.203,252.853L 586.18,252.853C 585.187,252.853 584.381,252.088 584.381,251.145L 584.381,237.328C 584.381,236.385 585.187,235.62 586.18,235.62L 593.753,235.62L 593.753,237.672C 593.753,238.409 594.352,239.007 595.088,239.007L 599.295,239.007C 600.029,239.007 600.628,238.409 600.628,237.672L 600.628,235.62L 608.203,235.62 Z M 595.646,238.068C 595.104,238.068 594.664,237.632 594.664,237.094L 594.664,232.316C 594.664,231.779 595.104,231.342 595.646,231.342L 598.737,231.342C 599.279,231.342 599.718,231.779 599.718,232.316L 599.718,237.094C 599.718,237.632 599.279,238.068 598.737,238.068L 595.646,238.068 Z " Height="21.511" UseLayoutRounding="False" Width="25.619" Canvas.Left="-5"/>
                            <Path Stretch="Fill" Fill="#FFFFFFFF" Data="F1 M 607.407,244.769L 607.407,243.389L 597.533,243.389L 597.533,244.769L 607.407,244.769 Z M 607.407,247.333L 607.407,245.953L 597.533,245.953L 597.533,247.333L 607.407,247.333 Z M 607.407,249.897L 607.407,248.517L 597.533,248.517L 597.533,249.897L 607.407,249.897 Z M 595.683,251.08L 595.683,247.689C 595.683,246.809 594.969,246.095 594.087,246.095L 588.703,246.095C 587.821,246.095 587.107,246.809 587.107,247.689L 587.107,251.08L 595.683,251.08 Z M 591.495,240.311C 590.063,240.311 588.901,241.472 588.901,242.904C 588.901,244.336 590.063,245.496 591.495,245.496C 592.924,245.496 594.087,244.336 594.087,242.904C 594.087,241.472 592.924,240.311 591.495,240.311 Z M 608.203,235.62C 609.195,235.62 610,236.385 610,237.328L 610,251.145C 610,252.088 609.195,252.853 608.203,252.853L 586.18,252.853C 585.187,252.853 584.381,252.088 584.381,251.145L 584.381,237.328C 584.381,236.385 585.187,235.62 586.18,235.62L 593.753,235.62L 593.753,237.672C 593.753,238.409 594.352,239.007 595.088,239.007L 599.295,239.007C 600.029,239.007 600.628,238.409 600.628,237.672L 600.628,235.62L 608.203,235.62 Z M 595.646,238.068C 595.104,238.068 594.664,237.632 594.664,237.094L 594.664,232.316C 594.664,231.779 595.104,231.342 595.646,231.342L 598.737,231.342C 599.279,231.342 599.718,231.779 599.718,232.316L 599.718,237.094C 599.718,237.632 599.279,238.068 598.737,238.068L 595.646,238.068 Z " Height="21.511" UseLayoutRounding="False" Width="25.619" Canvas.Left="-5" Canvas.Top="1"/>
                        </Canvas>
                    </Canvas>
                </Grid>
            </Border>
            <TextBlock Text="{Binding HeaderContext}" Grid.Column="1" Margin="5,5,5,5" TextAlignment="Center" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left"/>
            <telerik:RadButton Visibility="{Binding IsActive, Converter={StaticResource BooleanToVisibilityConverterInstance}}"
        		Style="{StaticResource CloseRadButtonStyle}" Command="{Binding CloseViewCommand}" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0" Grid.Column="2">
                <telerik:RadButton.CommandParameter>
                    <System:Boolean>True</System:Boolean>
                </telerik:RadButton.CommandParameter>
            </telerik:RadButton>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="WorkspaceReportsTemplate">
        <Grid Grid.ColumnSpan="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Border Grid.Column="0" Margin="0,0,4,0">
                <Grid>
                    <Canvas Width="34" Height="39" >
                        <Path Width="34" Height="39" Stretch="Fill" Fill="#FF753216" VerticalAlignment="Bottom" Data="F1 M 148.026,246.539L 148.026,285.319L 153.499,290.783L 153.499,285.319L 186.806,285.319L 186.806,246.539L 148.026,246.539 Z" UseLayoutRounding="False"/>
                        <Rectangle Stretch="Fill" HorizontalAlignment="Right" Height="32" VerticalAlignment="Bottom" Width="32" Canvas.Left="1" Canvas.Top="1">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0.5,1" EndPoint="0.5,-2.31194e-005">
                                    <GradientStop Color="#FFFBBF66" Offset="1"/>
                                    <GradientStop Color="#FFF16423"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Canvas Width="17" Height="21" Canvas.Left="9" Canvas.Top="6">
                            <Path Stretch="Fill" Fill="#FF753216" Data="F1 M 435.499,257.973C 436.795,257.973 437.845,258.993 437.845,260.254L 437.845,274.465C 437.845,275.725 436.795,276.746 435.499,276.746L 434.179,276.746C 432.879,276.746 431.829,275.725 431.829,274.465L 431.829,260.254C 431.829,258.993 432.879,257.973 434.179,257.973L 435.499,257.973 Z M 442.664,262.54C 443.964,262.54 445.011,263.563 445.011,264.824L 445.011,274.464C 445.011,275.725 443.964,276.745 442.664,276.745L 441.343,276.745C 440.045,276.745 438.996,275.725 438.996,274.464L 438.996,264.824C 438.996,263.563 440.045,262.54 441.343,262.54L 442.664,262.54 Z M 428.332,267.113C 429.628,267.113 430.679,268.135 430.679,269.394L 430.679,274.465C 430.679,275.725 429.628,276.746 428.332,276.746L 427.011,276.746C 425.713,276.746 424.664,275.725 424.664,274.465L 424.664,269.394C 424.664,268.135 425.713,267.113 427.011,267.113L 428.332,267.113 Z " Height="18.773" UseLayoutRounding="False" Width="20.347" Canvas.Left="-2" Canvas.Top="1"/>
                            <Path Stretch="Fill" Fill="#FFFFFFFF" Data="F1 M 435.499,257.973C 436.795,257.973 437.845,258.993 437.845,260.254L 437.845,274.465C 437.845,275.725 436.795,276.746 435.499,276.746L 434.179,276.746C 432.879,276.746 431.829,275.725 431.829,274.465L 431.829,260.254C 431.829,258.993 432.879,257.973 434.179,257.973L 435.499,257.973 Z M 442.664,262.54C 443.964,262.54 445.011,263.563 445.011,264.824L 445.011,274.464C 445.011,275.725 443.964,276.745 442.664,276.745L 441.343,276.745C 440.045,276.745 438.996,275.725 438.996,274.464L 438.996,264.824C 438.996,263.563 440.045,262.54 441.343,262.54L 442.664,262.54 Z M 428.332,267.113C 429.628,267.113 430.679,268.135 430.679,269.394L 430.679,274.465C 430.679,275.725 429.628,276.746 428.332,276.746L 427.011,276.746C 425.713,276.746 424.664,275.725 424.664,274.465L 424.664,269.394C 424.664,268.135 425.713,267.113 427.011,267.113L 428.332,267.113 Z " Height="18.773" UseLayoutRounding="False" Width="20.347" Canvas.Left="-2" Canvas.Top="2"/>
                        </Canvas>
                    </Canvas>
                </Grid>
            </Border>
            <TextBlock Text="{Binding HeaderContext}" Grid.Column="1" Margin="5,5,5,5" TextAlignment="Center" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left"/>
            <telerik:RadButton Visibility="{Binding IsActive, Converter={StaticResource BooleanToVisibilityConverterInstance}}"
        		Style="{StaticResource CloseRadButtonStyle}" Command="{Binding CloseViewCommand}" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0" Grid.Column="2">
                <telerik:RadButton.CommandParameter>
                    <System:Boolean>True</System:Boolean>
                </telerik:RadButton.CommandParameter>
            </telerik:RadButton>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="WorkspacePatientRecordTemplate">
        <Grid Grid.ColumnSpan="3">
            <i:Interaction.Behaviors>
                <behavior:FrameworkElementDropBehavior AllowDrop="True" DropQueryCommand="{Binding DropQueryCommand}"/>
            </i:Interaction.Behaviors>
            
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Border Grid.Column="0" Margin="0">
                <Grid>
                    <Canvas Width="34" Height="39" >
                        <Path Width="34" Height="39" Stretch="Fill" Fill="#FF8A1721" VerticalAlignment="Bottom" Data="F1 M 148.026,246.539L 148.026,285.319L 153.499,290.783L 153.499,285.319L 186.806,285.319L 186.806,246.539L 148.026,246.539 Z" UseLayoutRounding="False"/>
                        <Rectangle Stretch="Fill" HorizontalAlignment="Right" Height="32" VerticalAlignment="Bottom" Width="32" Canvas.Left="1" Canvas.Top="1">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0.5,1" EndPoint="0.5,-2.31194e-005">
                                    <GradientStop Color="#FFED1C24" Offset="0.659"/>
                                    <GradientStop Color="#FFF37D84" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Canvas Width="17" Height="21" Canvas.Left="9" Canvas.Top="6">
                            <Path Data="M3.0660098,11.110005 L13.408005,11.110005 C15.102005,11.110005 16.472,12.483858 16.472,14.173689 L16.472,20.687006 L13.783997,20.687006 L13.783997,17.312349 C13.783997,17.032377 13.557999,16.804405 13.276001,16.804405 C12.996002,16.804405 12.770004,17.032377 12.770004,17.312349 L12.770004,20.687006 L3.7579958,20.687006 L3.7579958,17.312349 C3.7579958,17.032377 3.5310061,16.804405 3.2500002,16.804405 C2.9700015,16.804405 2.7429965,17.032377 2.7429965,17.312349 L2.7429965,20.687006 L0,20.687006 L0,14.173689 C2.3841858E-07,12.483858 1.3720095,11.110005 3.0660098,11.110005 z M8.4269991,0 C11.178006,0 13.408003,2.230988 13.408003,4.9809885 C13.408003,7.7319965 11.178006,9.9610004 8.4269991,9.9610004 C5.6780052,9.9610004 3.4470019,7.7319965 3.4470017,4.9809885 C3.4470019,2.230988 5.6780052,0 8.4269991,0 z" Fill="#FF8A1721" Height="20.687" Stretch="Fill" UseLayoutRounding="False" Width="16.472" Canvas.Top="-1"/>
                            <Path Data="M3.0660098,11.110005 L13.408005,11.110005 C15.102005,11.110005 16.472,12.483858 16.472,14.173689 L16.472,20.687006 L13.783997,20.687006 L13.783997,17.312349 C13.783997,17.032377 13.557999,16.804405 13.276001,16.804405 C12.996002,16.804405 12.770004,17.032377 12.770004,17.312349 L12.770004,20.687006 L3.7579958,20.687006 L3.7579958,17.312349 C3.7579958,17.032377 3.5310061,16.804405 3.2500002,16.804405 C2.9700015,16.804405 2.7429965,17.032377 2.7429965,17.312349 L2.7429965,20.687006 L0,20.687006 L0,14.173689 C2.3841858E-07,12.483858 1.3720095,11.110005 3.0660098,11.110005 z M8.4269991,0 C11.178006,0 13.408003,2.230988 13.408003,4.9809885 C13.408003,7.7319965 11.178006,9.9610004 8.4269991,9.9610004 C5.6780052,9.9610004 3.4470019,7.7319965 3.4470017,4.9809885 C3.4470019,2.230988 5.6780052,0 8.4269991,0 z" Fill="#FFFFFFFF" Height="20.687" Stretch="Fill" UseLayoutRounding="False" Width="16.472"/>
                        </Canvas>
                    </Canvas>
                </Grid>
            </Border>
            <telerik:RadButton Visibility="{Binding IsActive, Converter={StaticResource BooleanToVisibilityConverterInstance}}"
        		Style="{StaticResource CloseRadButtonStyle}" Command="{Binding CloseViewCommand}" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0" Grid.Column="2">
                <telerik:RadButton.CommandParameter>
                    <System:Boolean>True</System:Boolean>
                </telerik:RadButton.CommandParameter>
            </telerik:RadButton>
            <Border Grid.Column="1" BorderThickness="1" BorderBrush="#FF8A1721" VerticalAlignment="Top" HorizontalAlignment="Left" Width="Auto" Height="34" >
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFE7E7E7" Offset="1"/>
                        <GradientStop Color="White" Offset="0.613"/>
                    </LinearGradientBrush>
                </Border.Background>
                <TextBlock Text="{Binding HeaderContext}" Margin="5" TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="Bold"/>
            </Border>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="WorkspacePatientListTemplate">
        <Grid Grid.ColumnSpan="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Border Grid.Column="0" Margin="0,0,4,0">
                <Grid>
                    <Canvas Width="34" Height="39" >
                        <Path Width="34" Height="39" Stretch="Fill" Fill="#FF8A1721" VerticalAlignment="Bottom" Data="F1 M 148.026,246.539L 148.026,285.319L 153.499,290.783L 153.499,285.319L 186.806,285.319L 186.806,246.539L 148.026,246.539 Z" UseLayoutRounding="False"/>
                        <Rectangle Stretch="Fill" HorizontalAlignment="Right" Height="32" VerticalAlignment="Bottom" Width="32" Canvas.Left="1" Canvas.Top="1">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0.5,1" EndPoint="0.5,-2.31194e-005">
                                    <GradientStop Color="#FFED1C24" Offset="0.659"/>
                                    <GradientStop Color="#FFF37D84" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Canvas Width="17" Height="21" Canvas.Left="9" Canvas.Top="6">
                            <Path Data="M3.0660098,11.110005 L13.408005,11.110005 C15.102005,11.110005 16.472,12.483858 16.472,14.173689 L16.472,20.687006 L13.783997,20.687006 L13.783997,17.312349 C13.783997,17.032377 13.557999,16.804405 13.276001,16.804405 C12.996002,16.804405 12.770004,17.032377 12.770004,17.312349 L12.770004,20.687006 L3.7579958,20.687006 L3.7579958,17.312349 C3.7579958,17.032377 3.5310061,16.804405 3.2500002,16.804405 C2.9700015,16.804405 2.7429965,17.032377 2.7429965,17.312349 L2.7429965,20.687006 L0,20.687006 L0,14.173689 C2.3841858E-07,12.483858 1.3720095,11.110005 3.0660098,11.110005 z M8.4269991,0 C11.178006,0 13.408003,2.230988 13.408003,4.9809885 C13.408003,7.7319965 11.178006,9.9610004 8.4269991,9.9610004 C5.6780052,9.9610004 3.4470019,7.7319965 3.4470017,4.9809885 C3.4470019,2.230988 5.6780052,0 8.4269991,0 z" Fill="#FF8A1721" Height="20.687" Stretch="Fill" UseLayoutRounding="False" Width="16.472" Canvas.Top="-1"/>
                            <Path Data="M3.0660098,11.110005 L13.408005,11.110005 C15.102005,11.110005 16.472,12.483858 16.472,14.173689 L16.472,20.687006 L13.783997,20.687006 L13.783997,17.312349 C13.783997,17.032377 13.557999,16.804405 13.276001,16.804405 C12.996002,16.804405 12.770004,17.032377 12.770004,17.312349 L12.770004,20.687006 L3.7579958,20.687006 L3.7579958,17.312349 C3.7579958,17.032377 3.5310061,16.804405 3.2500002,16.804405 C2.9700015,16.804405 2.7429965,17.032377 2.7429965,17.312349 L2.7429965,20.687006 L0,20.687006 L0,14.173689 C2.3841858E-07,12.483858 1.3720095,11.110005 3.0660098,11.110005 z M8.4269991,0 C11.178006,0 13.408003,2.230988 13.408003,4.9809885 C13.408003,7.7319965 11.178006,9.9610004 8.4269991,9.9610004 C5.6780052,9.9610004 3.4470019,7.7319965 3.4470017,4.9809885 C3.4470019,2.230988 5.6780052,0 8.4269991,0 z" Fill="#FFFFFFFF" Height="20.687" Stretch="Fill" UseLayoutRounding="False" Width="16.472"/>
                        </Canvas>
                    </Canvas>
                </Grid>
            </Border>
            <TextBlock Text="{Binding HeaderContext}" Grid.Column="1" Margin="5,5,5,5" TextAlignment="Center" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left"/>
            <telerik:RadButton Visibility="{Binding IsActive, Converter={StaticResource BooleanToVisibilityConverterInstance}}"
        		Style="{StaticResource CloseRadButtonStyle}" Command="{Binding CloseViewCommand}" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0" Grid.Column="2">
                <telerik:RadButton.CommandParameter>
                    <System:Boolean>True</System:Boolean>
                </telerik:RadButton.CommandParameter>
            </telerik:RadButton>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="WorkspaceFrontDeskTemplate">
        <Grid Grid.ColumnSpan="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Border Grid.Column="0" Margin="0,0,4,0">
                <Grid>
                    <Canvas Width="34" Height="39" >
                        <Path Width="34" Height="39" Stretch="Fill" Fill="#FF1D3743" VerticalAlignment="Bottom" Data="F1 M 148.026,246.539L 148.026,285.319L 153.499,290.783L 153.499,285.319L 186.806,285.319L 186.806,246.539L 148.026,246.539 Z" UseLayoutRounding="False" Canvas.Top="0.167"/>
                        <Rectangle HorizontalAlignment="Right" Height="32" VerticalAlignment="Bottom" Width="32" Canvas.Left="1" Canvas.Top="1">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0.5,1" EndPoint="0.5,-2.31194e-005">
                                    <GradientStop Color="#FF30676E"/>
                                    <GradientStop Color="#FFACD0DA" Offset="1"/>
                                    <GradientStop Color="#FE73B4CA" Offset="0.691"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Canvas Width="20" Height="21" Canvas.Left="7" Canvas.Top="8">
                            <Path Stretch="Fill" Fill="#FF1D3743" Data="F1 M 221.695,257.458C 226.931,257.458 231.177,261.703 231.177,266.939C 231.177,272.176 226.931,276.422 221.695,276.422C 216.458,276.422 212.214,272.176 212.214,266.939C 212.214,261.703 216.458,257.458 221.695,257.458 Z M 221.695,259.828C 217.775,259.828 214.585,263.019 214.585,266.939C 214.585,270.861 217.775,274.051 221.695,274.051C 225.617,274.051 228.806,270.861 228.806,266.939C 228.806,263.019 225.617,259.828 221.695,259.828 Z M 224.066,270.495C 223.762,270.495 223.459,270.38 223.228,270.148L 220.858,267.779C 220.644,267.565 220.511,267.27 220.51,266.943L 220.51,266.939L 220.51,262.199C 220.51,261.544 221.04,261.013 221.695,261.013C 222.35,261.013 222.88,261.544 222.88,262.199L 222.88,266.448L 224.903,268.472C 225.367,268.935 225.367,269.686 224.903,270.148C 224.672,270.38 224.37,270.495 224.066,270.495 Z " Height="18.964" UseLayoutRounding="False" Width="18.963" Canvas.Top="-1"/>
                            <Path Stretch="Fill" Fill="#FFFFFFFF" Data="F1 M 221.695,257.458C 226.931,257.458 231.177,261.703 231.177,266.939C 231.177,272.176 226.931,276.422 221.695,276.422C 216.458,276.422 212.214,272.176 212.214,266.939C 212.214,261.703 216.458,257.458 221.695,257.458 Z M 221.695,259.828C 217.775,259.828 214.585,263.019 214.585,266.939C 214.585,270.861 217.775,274.051 221.695,274.051C 225.617,274.051 228.806,270.861 228.806,266.939C 228.806,263.019 225.617,259.828 221.695,259.828 Z M 224.066,270.495C 223.762,270.495 223.459,270.38 223.228,270.148L 220.858,267.779C 220.644,267.565 220.511,267.27 220.51,266.943L 220.51,266.939L 220.51,262.199C 220.51,261.544 221.04,261.013 221.695,261.013C 222.35,261.013 222.88,261.544 222.88,262.199L 222.88,266.448L 224.903,268.472C 225.367,268.935 225.367,269.686 224.903,270.148C 224.672,270.38 224.37,270.495 224.066,270.495 Z " Height="18.964" UseLayoutRounding="False" Width="18.963"/>
                        </Canvas>
                    </Canvas>
                </Grid>
            </Border>
            <TextBlock Text="{Binding HeaderContext}" Grid.Column="1" Margin="5,5,5,5" TextAlignment="Center" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left"/>
            <telerik:RadButton Visibility="{Binding IsActive, Converter={StaticResource BooleanToVisibilityConverterInstance}}"
        		Style="{StaticResource CloseRadButtonStyle}" Command="{Binding CloseViewCommand}" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0" Grid.Column="2">
                <telerik:RadButton.CommandParameter>
                    <System:Boolean>True</System:Boolean>
                </telerik:RadButton.CommandParameter>
            </telerik:RadButton>
        </Grid>
    </DataTemplate>
	
	 <DataTemplate x:Key="WorkspaceBillingTemplate">
        <Grid Grid.ColumnSpan="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="auto" MinWidth="28"/>
                <ColumnDefinition Width="auto" MinWidth="45"/>
            </Grid.ColumnDefinitions>
            <Border Grid.Column="0" Margin="0,0,4,0">
                <Grid>
                    <Canvas Width="34" Height="39" >
                        <Path Width="34" Height="39" Stretch="Fill" Fill="#FF056838" VerticalAlignment="Bottom" Data="F1 M 148.026,246.539L 148.026,285.319L 153.499,290.783L 153.499,285.319L 186.806,285.319L 186.806,246.539L 148.026,246.539 Z" UseLayoutRounding="False" Canvas.Top="0.167"/>
                        <Rectangle HorizontalAlignment="Right" Height="32" VerticalAlignment="Bottom" Width="32" Canvas.Left="1" Canvas.Top="1">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0.5,1" EndPoint="0.5,-2.31194e-005">
                                    <GradientStop Color="#FF0B9444"/>
                                    <GradientStop Color="#FF8ACB99" Offset="1"/>
                                    <GradientStop Color="#FE0F9647" Offset="0.691"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Canvas Width="20" Height="21" Canvas.Left="7" Canvas.Top="7">
                        	<Path Stretch="Fill" Fill="#FF056838" Data="F1 M 495.886,261.517L 493.328,261.889C 493.456,261.464 493.52,261.109 493.52,260.823C 493.52,259.222 492.512,258.318 490.498,258.113L 490.498,262.413C 494.6,263.662 496.651,265.458 496.651,267.8C 496.651,269.241 496.017,270.396 494.749,271.268C 493.648,272.024 492.231,272.453 490.498,272.552L 490.498,274.922C 490.498,275.29 490.199,275.589 489.831,275.589L 489.164,275.589C 488.796,275.589 488.498,275.29 488.498,274.922L 488.498,272.54C 484.635,272.308 482.703,270.889 482.703,268.286L 482.699,267.421L 485.354,266.961L 485.265,268.633C 485.265,270.326 486.343,271.253 488.498,271.415L 488.498,266.733C 484.825,265.636 482.988,263.887 482.988,261.486C 482.988,260.121 483.605,259.021 484.838,258.186C 485.815,257.525 487.035,257.126 488.498,256.989L 488.498,254.589C 488.498,254.221 488.796,253.922 489.164,253.922L 489.831,253.922C 490.199,253.922 490.498,254.221 490.498,254.589L 490.498,256.955C 494.09,257.145 495.886,258.666 495.886,261.517 Z M 486.404,259.892C 486.404,260.597 487.102,261.225 488.498,261.776L 488.498,258.129C 487.102,258.311 486.404,258.899 486.404,259.892 Z M 492.381,269.405C 492.381,268.699 491.753,268.053 490.498,267.466L 490.498,271.335C 491.753,271.096 492.381,270.453 492.381,269.405 Z " Height="21" UseLayoutRounding="False" Width="13.522" Canvas.Left="2.93" Canvas.Top="-0.5"/>
                        	<Path Stretch="Fill" Fill="#FFFDFDFD" Data="F1 M 495.886,261.517L 493.328,261.889C 493.456,261.464 493.52,261.109 493.52,260.823C 493.52,259.222 492.512,258.318 490.498,258.113L 490.498,262.413C 494.6,263.662 496.651,265.458 496.651,267.8C 496.651,269.241 496.017,270.396 494.749,271.268C 493.648,272.024 492.231,272.453 490.498,272.552L 490.498,274.922C 490.498,275.29 490.199,275.589 489.831,275.589L 489.164,275.589C 488.796,275.589 488.498,275.29 488.498,274.922L 488.498,272.54C 484.635,272.308 482.703,270.889 482.703,268.286L 482.699,267.421L 485.354,266.961L 485.265,268.633C 485.265,270.326 486.343,271.253 488.498,271.415L 488.498,266.733C 484.825,265.636 482.988,263.887 482.988,261.486C 482.988,260.121 483.605,259.021 484.838,258.186C 485.815,257.525 487.035,257.126 488.498,256.989L 488.498,254.589C 488.498,254.221 488.796,253.922 489.164,253.922L 489.831,253.922C 490.199,253.922 490.498,254.221 490.498,254.589L 490.498,256.955C 494.09,257.145 495.886,258.666 495.886,261.517 Z M 486.404,259.892C 486.404,260.597 487.102,261.225 488.498,261.776L 488.498,258.129C 487.102,258.311 486.404,258.899 486.404,259.892 Z M 492.381,269.405C 492.381,268.699 491.753,268.053 490.498,267.466L 490.498,271.335C 491.753,271.096 492.381,270.453 492.381,269.405 Z " Height="21" UseLayoutRounding="False" Width="13.522" Canvas.Left="3.305"/>
                        </Canvas>
                    </Canvas>
                </Grid>
            </Border>
            <TextBlock Text="{Binding HeaderContext}" Grid.Column="1" Margin="5,5,5,5" TextAlignment="Center" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left"/>
            <telerik:RadButton Visibility="{Binding IsActive, Converter={StaticResource BooleanToVisibilityConverterInstance}}"
        		Style="{StaticResource CloseRadButtonStyle}" Command="{Binding CloseViewCommand}" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0" Grid.Column="2">
                <telerik:RadButton.CommandParameter>
                    <System:Boolean>True</System:Boolean>
                </telerik:RadButton.CommandParameter>
            </telerik:RadButton>
        </Grid>
    </DataTemplate>
	

    <!-- WorkSpaceTabItemStyle -->
    <Style x:Key="WorkspaceTabItemStyle" TargetType="Controls:RadTabItem" >
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Background" Value="#FF1F3B53"/>
        <Setter Property="BorderBrush" Value="#FFA3AEB9"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="6,2,6,2"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="MinWidth" Value="5"/>
        <Setter Property="MinHeight" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Controls:RadTabItem">
                    <Grid x:Name="wrapper" Margin="2,0">

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStateGroup">
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="MouseOverVisual"
                                			Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="HeaderElement"
                                			Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="canvas" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal" >
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="canvas" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="SelectionVisual"
                                			Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="MouseOverVisual"
                                			Storyboard.TargetProperty="(UIElement.Opacity)" To="0" />
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="HeaderElement"
                                			Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedMouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="MouseOverVisual"
									Storyboard.TargetProperty="(UIElement.Opacity)" To="0" />
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="SelectionVisual"
									Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="HeaderElement"
									Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
									Storyboard.TargetName="HeaderElement" To="0.3"
									Duration="0:0:0.1" />
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
									Storyboard.TargetName="NormalVisual" To="0" Duration="0:0:0.1" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="PlacementStates">
                                <VisualState x:Name="HorizontalTop" />
                                <VisualState x:Name="HorizontalLeft">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
									Storyboard.TargetName="OrientationTransform"
									Storyboard.TargetProperty="LayoutTransform" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <RotateTransform Angle="180" />
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="HorizontalRight" />
                                <VisualState x:Name="HorizontalBottom">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
									Storyboard.TargetName="OrientationTransform"
									Storyboard.TargetProperty="LayoutTransform" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <RotateTransform Angle="180" />
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="VerticalTop">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
									Storyboard.TargetName="OrientationTransform"
									Storyboard.TargetProperty="LayoutTransform" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <RotateTransform Angle="-90" />
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="VerticalLeft">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
									Storyboard.TargetName="OrientationTransform"
									Storyboard.TargetProperty="LayoutTransform" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <RotateTransform Angle="90" />
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="VerticalRight">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
									Storyboard.TargetName="OrientationTransform"
									Storyboard.TargetProperty="LayoutTransform" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <RotateTransform Angle="-90" />
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="VerticalBottom">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
									Storyboard.TargetName="OrientationTransform"
									Storyboard.TargetProperty="LayoutTransform" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <RotateTransform Angle="-90" />
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Margin="0" Padding="3,0">
                            <Grid>
                                <!-- normal -->
                                <Border x:Name="NormalVisual" 
                    				BorderBrush="#FFA3AEB9"
                    				BorderThickness="1,1,1,0"
                    				CornerRadius="4,4,0,0" Margin="2,2,-2,-2">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                            <GradientStop Color="#FF9F9F9F" Offset="0"/>
                                            <GradientStop Color="#FF747474" Offset="1"/>
                                            <GradientStop Color="#FF9C9C9C" Offset="0.216"/>
                                            <GradientStop Color="#FF999999" Offset="0.737"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Border x:Name="GradientTop" BorderThickness="1" CornerRadius="1,1,0,0"/>
                                </Border>

                                <!-- mouseover-->
                                <Border x:Name="MouseOverVisual" Opacity="0" 
                    				BorderBrush="White"
                    				BorderThickness="1,1,1,0"
                    				CornerRadius="4,4,0,0" Margin="2,2,-2,-2">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                            <GradientStop Color="#FFD6D6D6" Offset="0"/>
                                            <GradientStop Color="#FF7A7A7A" Offset="1"/>
                                            <GradientStop Color="#FFBABABA" Offset="0.216"/>
                                            <GradientStop Color="#FFABA9A9" Offset="0.737"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Border BorderThickness="1" CornerRadius="1,1,0,0"/>
                                </Border>

                                <!-- select-->
                                <Border x:Name="SelectionVisual" Opacity="0"
                    				BorderBrush="White"					
                    				BorderThickness="1,1,1,0"
                    				CornerRadius="4,4,0,0" Margin="2,2,-2,-2">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFE4E4E4"/>
                                            <GradientStop Color="White" Offset="0.827"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Border BorderThickness="1" CornerRadius="1,1,0,0"/>
                                </Border>
                                <Canvas x:Name="canvas" Width="34" Height="39" Margin="-4,2,0,-2" HorizontalAlignment="Left" d:LayoutOverrides="Width" Opacity="0" >
                                    <Path Width="34" Height="39" Stretch="Fill" Fill="#FF494949" VerticalAlignment="Bottom" Data="F1 M 148.026,246.539L 148.026,285.319L 153.499,290.783L 153.499,285.319L 186.806,285.319L 186.806,246.539L 148.026,246.539 Z" UseLayoutRounding="False" Stroke="#FF494949"/>
                                </Canvas>

                                <!--Content-->
                                <Primitives:LayoutTransformControl x:Name="OrientationTransform" Margin="-4,2,5,-2" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Left">
                                    <Primitives:LayoutTransformControl.RenderTransform>
                                        <CompositeTransform/>
                                    </Primitives:LayoutTransformControl.RenderTransform>
                                    <ContentControl Padding="0" Margin="0,2,0,2" x:Name="ContentHeaderElement" HorizontalAlignment="Center">
                                        <ContentPresenter x:Name="HeaderElement"
                    						ContentTemplate="{TemplateBinding HeaderTemplate}"
                    						HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"						
                    						VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Opacity=".3" />
                                    </ContentControl>
                                </Primitives:LayoutTransformControl>
                            </Grid>


                        </Border>


                        <!-- normal -->

                        <!-- mouseover-->

                        <!-- select-->

                        <!--Content-->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- WorkSpaceTabControlStyle-->
    <Style x:Key="WorkspaceTabControlStyle" TargetType="Controls:RadTabControl">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource WorkspaceTabItemStyle}"/>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFFFFFFF" Offset="0"/>
                    <GradientStop Color="#FFFEFEFE" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFEEEEEE" />
                    <GradientStop Color="#FFCCCCCC" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="TopTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="Controls:RadTabControl">
                    <Grid>
                        <Grid.Resources>
                            <Style x:Key="EmptyScrollViewerStyle" TargetType="ScrollViewer">
                                <Setter Property="HorizontalContentAlignment" Value="Left" />
                                <Setter Property="VerticalContentAlignment" Value="Top" />
                                <Setter Property="Padding" Value="0" />
                                <Setter Property="BorderThickness" Value="0" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ScrollViewer">
                                            <Border CornerRadius="2" BorderBrush="{TemplateBinding BorderBrush}"
							                    BorderThickness="{TemplateBinding BorderThickness}">
                                                <Grid Background="{TemplateBinding Background}">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="*" />
                                                        <RowDefinition Height="Auto" />
                                                    </Grid.RowDefinitions>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*" />
                                                        <ColumnDefinition Width="Auto" />
                                                    </Grid.ColumnDefinitions>

                                                    <ScrollContentPresenter x:Name="ScrollContentPresenter"
									                    Cursor="{TemplateBinding Cursor}"
									                    Margin="{TemplateBinding Padding}"
									                    ContentTemplate="{TemplateBinding ContentTemplate}" 
									                    />
                                                </Grid>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Grid.Resources>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled"/>
                                <VisualState x:Name="Normal" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border CornerRadius="8" MinWidth="10" MinHeight="10" Grid.Row="1" BorderThickness="0,1,1,0" Padding="5" BorderBrush="White">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFE5E9EE" Offset="0.14"/>
                                    <GradientStop Color="White"/>
                                    <GradientStop Color="#FFCDD1D6" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <ContentPresenter x:Name="ContentElement" 
                              Content="{TemplateBinding SelectedContent}"
                              ContentTemplate="{TemplateBinding SelectedContentTemplate}" />
                            </Grid>
                        </Border>
                        <telerik:RadDockPanel Canvas.ZIndex="10" Margin="9 4 0 0">
                            <ToggleButton x:Name="DropDownButtonElement"
									telerik:RadDockPanel.Dock="Right" Margin="2 4 4 2"
									Style="{TemplateBinding DropDownButtonStyle}" ClickMode="Press"
									IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                <Controls:RadContextMenu.ContextMenu>
                                    <telerikTabControl:DropDownMenu x:Name="DropDownMenuElement"											
											StaysOpen="False" Placement="Bottom"
											Style="{TemplateBinding DropDownStyle}"
											ItemTemplate="{TemplateBinding ItemDropDownContentTemplate}"
											ItemTemplateSelector="{TemplateBinding ItemDropDownContentTemplateSelector}"
											DisplayMemberPath="{TemplateBinding DropDownDisplayMemberPath}">
                                    </telerikTabControl:DropDownMenu>
                                </Controls:RadContextMenu.ContextMenu>
                            </ToggleButton>
                            <RepeatButton x:Name="LeftScrollButtonElement"
									Style="{StaticResource WorkspaceLeftScrollButtonStyle}" Margin="4 4 2 2"
									Visibility="{Binding ComputedHorizontalScrollBarVisibility, ElementName=ScrollViewerElement}" />
                            <RepeatButton x:Name="RightScrollButtonElement"
									Style="{StaticResource WorkspaceRightScrollButtonStyle}"
									telerik:RadDockPanel.Dock="Right" Margin="2 4 2 2"
									Visibility="{Binding ComputedHorizontalScrollBarVisibility, ElementName=ScrollViewerElement}" />
                            <ScrollViewer x:Name="ScrollViewerElement"
									Style="{StaticResource EmptyScrollViewerStyle}"
									VerticalScrollBarVisibility="Disabled"
									BorderThickness="0" IsTabStop="False"
									HorizontalScrollBarVisibility="{Binding (ScrollViewer.HorizontalScrollBarVisibility), RelativeSource={RelativeSource TemplatedParent}}">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </telerik:RadDockPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemDropDownContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding HeaderContext}" Margin="5,5,5,5" TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="Bold"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- FormSectionListBoxStyle -->

    <!-- ItemEditPanelDataTemplate -->


    <!-- EditPanelStyle for a single item -->
    <Style x:Key="ItemEditPanelStyle" TargetType="toolkit:HeaderedContentControl">
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="toolkit:HeaderedContentControl">
                    <Grid Width="300">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" MinHeight="30"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid  Grid.Row="1" Grid.ColumnSpan="2" Visibility="{Binding IsRootPanel, Converter={StaticResource InvertedBooleanToVisibilityConverterInstance}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border BorderBrush="Black" BorderThickness="0" Margin="0" Height="30" Grid.ColumnSpan="3" d:LayoutOverrides="Height">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFD2E4EB" Offset="0.186"/>
                                        <GradientStop Color="#FF89A7AD"/>
                                        <GradientStop Color="#FFD2E4EB" Offset="0.956"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <Button x:Name="Finish" Command="{Binding FinishCommand}" Content="Finish" Width="75" d:LayoutOverrides="Height" Margin="8,0,0,0" VerticalAlignment="Center"/>
                            <Button x:Name="Delete" Command="{Binding DeleteCommand}" Content="Delete" HorizontalAlignment="Center" Grid.Column="1" Width="75" Margin="0" VerticalAlignment="Center"/>
                            <Button x:Name="Cancel" Command="{Binding CancelCommand}" Content="Cancel" HorizontalAlignment="Right" Grid.Column="2" Width="75" Margin="0,0,8,0" VerticalAlignment="Center"/>
                        </Grid>
                        <Border BorderBrush="Red" BorderThickness="0" Margin="0,0,0,0" Height="30" Background="#FF006699"/>
                        <Border BorderBrush="Red" BorderThickness="0" Margin="0,0,0,0" Grid.Row="2" Grid.ColumnSpan="3" Background="White"/>
                        <ContentPresenter Cursor="{TemplateBinding Cursor}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Header}" Margin="{TemplateBinding Padding}" Grid.Row="0" d:LayoutOverrides="GridBox" VerticalAlignment="Center"/>
                        <ContentPresenter Cursor="{TemplateBinding Cursor}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="0" Grid.Row="2" VerticalAlignment="Stretch"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- EditPanelStyle for a single item -->
    <Style x:Key="ItemSelectPanelStyle" TargetType="toolkit:HeaderedContentControl">
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="toolkit:HeaderedContentControl">
                    <Grid Width="300">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" MinHeight="30"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid  Grid.Row="1" Grid.ColumnSpan="2" Visibility="{Binding IsRootPanel, Converter={StaticResource InvertedBooleanToVisibilityConverterInstance}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border BorderBrush="Black" BorderThickness="0" Margin="0" Height="30" Grid.ColumnSpan="3" d:LayoutOverrides="Height">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFD2E4EB" Offset="0.186"/>
                                        <GradientStop Color="#FF89A7AD"/>
                                        <GradientStop Color="#FFD2E4EB" Offset="0.956"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <Button x:Name="Finish" Command="{Binding FinishCommand}" Content="Finish" Width="75" d:LayoutOverrides="Height" Margin="8,0,0,0" VerticalAlignment="Center"/>
                        </Grid>
                        <Border BorderBrush="Red" BorderThickness="0" Margin="0,0,0,0" Height="30" Background="#FF006699"/>
                        <Border BorderBrush="Red" BorderThickness="0" Margin="0,0,0,0" Grid.Row="2" Grid.ColumnSpan="3" Background="White"/>
                        <ContentPresenter Cursor="{TemplateBinding Cursor}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Header}" Margin="{TemplateBinding Padding}" Grid.Row="0" d:LayoutOverrides="GridBox" VerticalAlignment="Center"/>
                        <ContentPresenter Cursor="{TemplateBinding Cursor}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="0" Grid.Row="2" VerticalAlignment="Stretch"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListEditPanelHeaderTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="8,0,0,0"/>
    </Style>

    <!-- EditPanelStyle for list of items -->
    <Style x:Key="ListEditPanelStyle" TargetType="toolkit:HeaderedContentControl">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="toolkit:HeaderedContentControl">
                    <Grid Height="Auto" Width="300">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" MinHeight="30"/>
                            <RowDefinition Height="Auto" MinHeight="30"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid  Grid.Row="1" Grid.ColumnSpan="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border BorderBrush="Black" BorderThickness="0" Margin="0" Height="30" Grid.ColumnSpan="3" d:LayoutOverrides="Height">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFD2E4EB" Offset="0.186"/>
                                        <GradientStop Color="#FF89A7AD"/>
                                        <GradientStop Color="#FFD2E4EB" Offset="0.956"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <Button x:Name="Add" Command="{Binding AddItemCommand}" Content="Add" Width="75" d:LayoutOverrides="Height" Margin="8,0,0,0" VerticalAlignment="Center"/>
                        </Grid>
                        <Border BorderBrush="Black" BorderThickness="0" Margin="0,0,0,0" Height="30" Background="#FF006699"/>
                        <ContentPresenter Cursor="{TemplateBinding Cursor}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Header}" Margin="{TemplateBinding Padding}" Grid.Row="0" d:LayoutOverrides="GridBox" VerticalAlignment="Center"/>
                        <ContentPresenter Cursor="{TemplateBinding Cursor}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="0" Grid.Row="2" VerticalAlignment="Stretch"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="Auto"/>
    </Style>

    <Style x:Key="PanelHeaderLabelStyle" TargetType="dataInput:Label">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dataInput:Label">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="Invalid"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="RequiredStates">
                                <VisualState x:Name="NotRequired"/>
                                <VisualState x:Name="Required">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="FontWeight" Storyboard.TargetName="ContentControl">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="SemiBold"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2" Padding="{TemplateBinding Padding}">
                            <ContentControl x:Name="ContentControl" Cursor="{TemplateBinding Cursor}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" FontWeight="{TemplateBinding FontWeight}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsTabStop="False" VerticalAlignment="{TemplateBinding VerticalAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Foreground="#FFF9F8F8"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RoundedWinButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="#FF1F3B53"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Margin="4,0,12,0">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
                                        <ColorAnimation Duration="0" To="#E9448DCA" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="BackgroundAnimation" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BackgroundGradient">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Offset)" Storyboard.TargetName="BackgroundGradient" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0.421" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Offset)" Storyboard.TargetName="BackgroundGradient" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0.258" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Offset)" Storyboard.TargetName="BackgroundGradient" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Offset)" Storyboard.TargetName="BackgroundGradient" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0.76" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[4].(GradientStop.Offset)" Storyboard.TargetName="BackgroundGradient" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="#7FD6DBE0" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[4].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="#FF6DBDD1" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BackgroundGradient">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BackgroundAnimation">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FocusVisualElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="White" CornerRadius="10" MinWidth="40" Margin="0">
                            <Grid Margin="1">
                                <Border x:Name="BackgroundAnimation" Background="#FF448DCA" Opacity="0" CornerRadius="10"/>
                                <Rectangle x:Name="BackgroundGradient" RadiusX="10" RadiusY="10">
                                    <Rectangle.Fill>

                                        <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                            <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                            <GradientStop Color="#F9FFFFFF" Offset="0.421"/>
                                            <GradientStop Color="#E5FFFFFF" Offset="0.258"/>
                                            <GradientStop Color="#FFBEC4CC" Offset="1"/>
                                            <GradientStop Color="#FBD6DBE0" Offset="0.76"/>
                                        </LinearGradientBrush>

                                    </Rectangle.Fill>
                                </Rectangle>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <Rectangle x:Name="DisabledVisualElement" Fill="#FFFFFFFF" IsHitTestVisible="false" Opacity="0" RadiusY="10" RadiusX="10"/>
                        <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Margin="1" Opacity="0" RadiusY="10" RadiusX="10" Stroke="#FF6DBDD1" StrokeThickness="1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WrapPanelStyle" TargetType="ItemsControl">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <Ellipse Fill="Pink" HorizontalAlignment="Left" Height="5" Stroke="Black" VerticalAlignment="Top" Width="5"/>
                        <TextBlock Text="{Binding Name}" Margin="2,0,0,2"/>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <toolkit:WrapPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MultiSelectSelectedItemsStyle" TargetType="ItemsControl">
        <Setter Property="Margin" Value="0,0,0,8"/>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid Height="Auto" Margin="6,0,0,0" Width="Auto">
                        <Rectangle Fill="#FF008CC8" Width="4"  Height="4" HorizontalAlignment="Left" Margin="0,8"  VerticalAlignment="Top"/>
                        <TextBlock Text="{Binding Name}" Margin="8,0,0,0"  MinWidth="240" TextWrapping="Wrap"  VerticalAlignment="Top" d:LayoutOverrides="Width, Height"/>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RibbonButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="#FF1F3B53"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
                                        <ColorAnimation Duration="0" To="#F2FFFFFF" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                        <ColorAnimation Duration="0" To="#CCFFFFFF" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                        <ColorAnimation Duration="0" To="#7FFFFFFF" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="#FF6DBDD1" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
                                        <ColorAnimation Duration="0" To="#D8FFFFFF" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                        <ColorAnimation Duration="0" To="#C6FFFFFF" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                        <ColorAnimation Duration="0" To="#8CFFFFFF" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                        <ColorAnimation Duration="0" To="#3FFFFFFF" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="White" CornerRadius="3">
                            <Grid Background="{TemplateBinding Background}" Margin="1">
                                <Border x:Name="BackgroundAnimation" Background="#FF448DCA" Opacity="0"/>
                                <Rectangle x:Name="BackgroundGradient">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                            <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                            <GradientStop Color="#F9FFFFFF" Offset="0.375"/>
                                            <GradientStop Color="#E5FFFFFF" Offset="0.625"/>
                                            <GradientStop Color="#C6FFFFFF" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <Rectangle x:Name="DisabledVisualElement" Fill="#FFFFFFFF" IsHitTestVisible="false" Opacity="0" RadiusY="3" RadiusX="3"/>
                        <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Margin="1" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="RibbonButtonStyle1" TargetType="Button">
        <Setter Property="Background" Value="#FF1F3B53"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="grid" Margin="2">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Normal" GeneratedDuration="0:0:0.15" To="MouseOver">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CircleEase EasingMode="EaseIn"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                        <Storyboard/>
                                    </VisualTransition>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.15" To="Normal">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CircleEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.15" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundAnimation">
                                                <DoubleAnimation.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <ColorAnimation Duration="0:0:0.15" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                <ColorAnimation.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut"/>
                                                </ColorAnimation.EasingFunction>
                                            </ColorAnimation>
                                            <ColorAnimation Duration="0:0:0.15" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                <ColorAnimation.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut"/>
                                                </ColorAnimation.EasingFunction>
                                            </ColorAnimation>
                                            <ColorAnimation Duration="0:0:0.15" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                <ColorAnimation.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut"/>
                                                </ColorAnimation.EasingFunction>
                                            </ColorAnimation>
                                            <DoubleAnimation Duration="0:0:0.15" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid">
                                                <DoubleAnimation.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
                                        <ColorAnimation Duration="0" To="#F2FFFFFF" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                        <ColorAnimation Duration="0" To="#CCFFFFFF" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                        <ColorAnimation Duration="0" To="#7FFFFFFF" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="#FF6DBDD1" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
                                        <ColorAnimation Duration="0" To="#D8FFFFFF" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                        <ColorAnimation Duration="0" To="#C6FFFFFF" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                        <ColorAnimation Duration="0" To="#8CFFFFFF" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                        <ColorAnimation Duration="0" To="#3FFFFFFF" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="White" CornerRadius="3" Margin="0">
                            <Grid Background="{TemplateBinding Background}" Margin="1">
                                <Border x:Name="BackgroundAnimation" Background="#FF448DCA" Opacity="0"/>
                                <Rectangle x:Name="BackgroundGradient">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                            <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                            <GradientStop Color="#F9FFFFFF" Offset="0.375"/>
                                            <GradientStop Color="#E5FFFFFF" Offset="0.625"/>
                                            <GradientStop Color="#C6FFFFFF" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="0" VerticalAlignment="Center"/>
                        <Rectangle x:Name="DisabledVisualElement" Fill="#FFFFFFFF" IsHitTestVisible="false" Opacity="0" RadiusY="3" RadiusX="3"/>
                        <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Margin="1" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1"/>
                        <Border x:Name="border" BorderBrush="#FF617584" BorderThickness="1" Margin="2,2,0,2" HorizontalAlignment="Left" Width="16" CornerRadius="2"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RemRoundedSidesButton" BasedOn="{StaticResource RadButtonRemStyle}" TargetType="telerik:RadButton">
        <Setter Property="Height" Value="22"  />
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="Padding" Value="10,5,10,5"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{StaticResource BaseButtonForeground}"/>
    </Style>



    <Style x:Key="WorkPadRoundButtonStyle" BasedOn="{StaticResource RadButtonRemStyle}" TargetType="telerik:RadButton">
        <Setter Property="Width" Value="22" />
        <Setter Property="Height" Value="22" />
        <Setter Property="CornerRadius" Value="15"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>



    <Style x:Key="TileSubHeaderTextBlockStyle" TargetType="TextBox">
        <Setter Property="Foreground" Value="#FF4D4D4D"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Padding" Value="4 2"/>
        <Setter Property="FontFamily" Value="Trebuchet MS"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>
    <Style x:Key="MainHeaderTextBlockStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#FF4D4D4D"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Margin" Value="8,0,0,0"/>
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="14.667"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect ShadowDepth="2" BlurRadius="0" Direction="-30" Color="White" Opacity="0.8"/>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="WorkPadViewCommentTextBlockStyle" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment"  Value="Left"/>
        <Setter Property="Width" Value="270"/>
        <Setter Property="Margin" Value="4,0,0,8"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
    </Style>

    <!-- Start Telerik Style -->
    <ControlTemplate x:Key="ArrowTemplateNonEditableCombobox" TargetType="ContentControl">
        <Grid Margin="5 0">
            <Path x:Name="BackgroundIcon" Data="M0,0 L2,0 1,1 Z" Fill="{TemplateBinding Background}" Height="3" Margin="0 2 0 0" Stretch="Fill" Width="5"/>
            <Path x:Name="ForegroundIcon" Data="M0,0 L2,0 1,1 Z" Fill="{TemplateBinding Foreground}" Height="3" Margin="0 1 0 1" Stretch="Fill" Width="5"/>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="AddTemplateNonEditableCombobox" TargetType="ContentControl">
        <Grid Width="10" Height="10">
            <Border>
                <Path Stretch="Fill" Fill="{TemplateBinding Foreground}" Data="F1 M 103.25,96.5L 105.25,96.5L 105.25,102.5L 111.25,102.5L 111.25,104.5L 105.25,104.5L 105.25,110.5L 103.25,110.5L 103.25,104.5L 97.25,104.5L 97.25,102.5L 103.25,102.5L 103.25,96.5 Z " VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </Border>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="NonEditableComboBox" TargetType="telerikInput:RadComboBox">
        <Grid x:Name="VisualRoot">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Content">
                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DropDownIcon">
                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="DropDownIcon">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconForeground_Disabled}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="DropDownIcon">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconBackground_Disabled}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="RenderMouseOver" Storyboard.TargetName="ButtonChrome">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <System:Boolean>True</System:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BaseButtonForeground}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="DropDownIcon">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BaseButtonForeground}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="DropDownOpen">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="DropDownIcon">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BaseButtonForeground}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BaseButtonForeground}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused"/>
                    <VisualState x:Name="Unfocused"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ValidationStates">
                    <VisualState x:Name="Valid"/>
                    <VisualState x:Name="InvalidUnfocused">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationTooltip">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="InvalidFocused">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationTooltip">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="ValidationTooltip">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <System:Boolean>True</System:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border IsHitTestVisible="False"/>
            <telerik:RadToggleButton x:Name="PART_DropDownButton" ClickMode="Press" IsTabStop="False" Margin="0" Padding="0">
                <telerik:RadToggleButton.Template>
                    <ControlTemplate TargetType="telerik:RadToggleButton">
                        <ContentPresenter/>
                    </ControlTemplate>
                </telerik:RadToggleButton.Template>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Telerik_Windows_Controls_Chromes:ButtonChrome x:Name="ButtonChrome" Style="{StaticResource TileToggleButtonStyle}" Grid.ColumnSpan="2" Background="{TemplateBinding Background}" BorderBrush="{StaticResource TileButtonOuterBorderBrushChecked}" CornerRadius="{StaticResource SplitButton_SpanCornerRadius}" RenderPressed="{TemplateBinding IsDropDownOpen}" RenderFocused="{TemplateBinding IsFocused}" RenderEnabled="{TemplateBinding IsEnabled}"/>
                    <ContentControl x:Name="DropDownIcon" Background="{StaticResource BaseButtonForeground_MouseOver}" Foreground="{StaticResource BaseButtonForeground}" Grid.Column="1" IsTabStop="False" Template="{StaticResource ArrowTemplateNonEditableCombobox}"/>
                    <ContentControl x:Name="Content" Foreground="{TemplateBinding Foreground}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" Grid.Column="0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Grid>
            </telerik:RadToggleButton>
            <Telerik_Windows_Controls_Chromes:ValidationTooltip x:Name="ValidationTooltip" TooltipPlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" telerik:StyleManager.Theme="{StaticResource Theme}" TooltipContent="{Binding (Validation.Errors), RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed"/>
            <Primitives:Popup CloseOnOutsideClick="True" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Owner="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                <Grid x:Name="PopupRoot">
                    <Telerik_Windows_Controls_Chromes:ShadowChrome Margin="0 0 0 3" telerik:StyleManager.Theme="{StaticResource Theme}"/>
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource PickerPopupBackground}" CornerRadius="{StaticResource SplitButton_SpanCornerRadius}" MaxHeight="{TemplateBinding MaxDropDownHeight}" Margin="0 0 0 3" MinWidth="{TemplateBinding MinDropDownWidth}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <telerik:RadButton x:Name="PART_ClearButton" Content="{TemplateBinding ClearSelectionButtonContent}" Margin="-1 -1 -1 0" Grid.Row="0" Style="{StaticResource RadButtonRemStyle}" Visibility="{TemplateBinding ClearSelectionButtonVisibility}"/>
                            <ScrollViewer x:Name="PART_ScrollViewer" BorderThickness="0" telerik:ScrollViewerExtensions.EnableMouseWheel="True" Padding="1 1 1 0" Grid.Row="1" telerik:StyleManager.Theme="{StaticResource Theme}" VerticalScrollBarVisibility="Auto">
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </Grid>
                    </Border>
                </Grid>
            </Primitives:Popup>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="BorderlessAddButtonComboBox" TargetType="telerikInput:RadComboBox">
        <Grid x:Name="VisualRoot">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Content">
                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="RenderMouseOver" Storyboard.TargetName="ButtonChrome">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <System:Boolean>True</System:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="DropDownOpen">
                        <Storyboard>
                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
                        </Storyboard>
                    </VisualState>

                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused"/>
                    <VisualState x:Name="Unfocused"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ValidationStates">
                    <VisualState x:Name="Valid"/>
                    <VisualState x:Name="InvalidUnfocused">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationTooltip">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="InvalidFocused">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationTooltip">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="ValidationTooltip">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <System:Boolean>True</System:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border IsHitTestVisible="False"/>
            <telerik:RadToggleButton x:Name="PART_DropDownButton" ClickMode="Press" IsTabStop="False" Margin="0" Padding="0" HorizontalAlignment="Center" VerticalAlignment="Center">
                <telerik:RadToggleButton.Template>
                    <ControlTemplate TargetType="telerik:RadToggleButton">
                        <ContentPresenter/>
                    </ControlTemplate>
                </telerik:RadToggleButton.Template>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <Telerik_Windows_Controls_Chromes:ButtonChrome x:Name="ButtonChrome" Style="{StaticResource BorderlessButtonBaseStyle}" Grid.ColumnSpan="2" Background="{TemplateBinding Background}" BorderBrush="{StaticResource TileButtonOuterBorderBrushChecked}" CornerRadius="{StaticResource SplitButton_SpanCornerRadius}" RenderPressed="{TemplateBinding IsDropDownOpen}" RenderFocused="{TemplateBinding IsFocused}" RenderEnabled="{TemplateBinding IsEnabled}" Width="20" Height="20" BorderThickness="0.5"/>
                    <ContentControl x:Name="Content" Foreground="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Foreground,Mode=TwoWay}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Grid.Column="0" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <ContentPresenter>
                            <Grid Width="10" Height="10">
                                <Border>
                                    <Path Stretch="Fill" Fill="{Binding Foreground, ElementName='Content'}" Data="F1 M 103.25,96.5L 105.25,96.5L 105.25,102.5L 111.25,102.5L 111.25,104.5L 105.25,104.5L 105.25,110.5L 103.25,110.5L 103.25,104.5L 97.25,104.5L 97.25,102.5L 103.25,102.5L 103.25,96.5 Z " VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </Border>

                            </Grid>
                        </ContentPresenter>
                        <ContentControl.Effect>
                            <DropShadowEffect Color="White" ShadowDepth="1" BlurRadius="0" Direction="323"/>
                        </ContentControl.Effect>
                    </ContentControl>
                </Grid>
            </telerik:RadToggleButton>
            <Telerik_Windows_Controls_Chromes:ValidationTooltip x:Name="ValidationTooltip" TooltipPlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" telerik:StyleManager.Theme="{StaticResource Theme}" TooltipContent="{Binding (Validation.Errors), RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed"/>
            <Primitives:Popup CloseOnOutsideClick="True" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Owner="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                <Grid x:Name="PopupRoot">
                    <Telerik_Windows_Controls_Chromes:ShadowChrome Margin="0 0 0 3" telerik:StyleManager.Theme="{StaticResource Theme}"/>
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource PickerPopupBackground}" CornerRadius="{StaticResource SplitButton_SpanCornerRadius}" MaxHeight="{TemplateBinding MaxDropDownHeight}" Margin="0 0 0 3" MinWidth="{TemplateBinding MinDropDownWidth}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <telerik:RadButton x:Name="PART_ClearButton" Content="{TemplateBinding ClearSelectionButtonContent}" Margin="-1 -1 -1 0" Grid.Row="0" Style="{StaticResource RadButtonRemStyle}" Visibility="{TemplateBinding ClearSelectionButtonVisibility}"/>
                            <ScrollViewer x:Name="PART_ScrollViewer" BorderThickness="0" telerik:ScrollViewerExtensions.EnableMouseWheel="True" Padding="1 1 1 0" Grid.Row="1" telerik:StyleManager.Theme="{StaticResource Theme}" VerticalScrollBarVisibility="Auto">
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </Grid>
                    </Border>
                </Grid>
            </Primitives:Popup>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="TileBorderlessComboBox" TargetType="telerikInput:RadComboBox">

        <Grid x:Name="VisualRoot">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Content">
                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DropDownIcon">
                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <ColorAnimation Duration="0" To="#FF4D4D4D" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="PART_DropDownButton" d:IsOptimized="True"/>

                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation Duration="0" To="#FF4D4D4D" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="PART_DropDownButton" d:IsOptimized="True"/>

                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="DropDownOpen">
                        <Storyboard>

                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" Storyboard.TargetName="DropDownIcon" d:IsOptimized="True"/>
                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" Storyboard.TargetName="Content" d:IsOptimized="True"/>

                            <ColorAnimation Duration="0" To="#FFFFFFFF" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="PART_DropDownButton" d:IsOptimized="True"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused"/>
                    <VisualState x:Name="Unfocused"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ValidationStates">
                    <VisualState x:Name="Valid"/>
                    <VisualState x:Name="InvalidUnfocused">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationTooltip">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="InvalidFocused">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationTooltip">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="ValidationTooltip">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <System:Boolean>True</System:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border IsHitTestVisible="False"/>
            <telerik:RadToggleButton x:Name="PART_DropDownButton" Foreground="#FF4D4D4D" ClickMode="Press" IsTabStop="False" Margin="0" BorderThickness="0" Padding="0" Style="{StaticResource BorderlessToggleButtonStyle}">
                <telerik:RadToggleButton.Template>
                    <ControlTemplate TargetType="telerik:RadToggleButton">
                        <ContentPresenter/>
                    </ControlTemplate>
                </telerik:RadToggleButton.Template>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Telerik_Windows_Controls_Chromes:ButtonChrome x:Name="ButtonChrome" Style="{StaticResource BorderlessButtonBaseStyle}" Grid.ColumnSpan="2" Background="{TemplateBinding Background}" BorderBrush="{StaticResource TileButtonOuterBorderBrushChecked}" CornerRadius="{StaticResource SplitButton_SpanCornerRadius}" RenderPressed="{TemplateBinding IsDropDownOpen}" RenderFocused="{TemplateBinding IsFocused}" RenderEnabled="{TemplateBinding IsEnabled}" Foreground="{StaticResource BorderlessButtonForeground}" BorderThickness="0.5" RenderMouseOver="True"/>
                    <Path x:Name="DropDownIcon" Grid.Column="2" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z " HorizontalAlignment="Right" Height="4" Margin="0,0,6,0" Stretch="Uniform" Width="8" Fill="{Binding Foreground, ElementName=PART_DropDownButton}">
                        <Path.Effect>
                            <DropShadowEffect Color="White" ShadowDepth="1" BlurRadius="0" Direction="289"/>
                        </Path.Effect>
                    </Path>
                    <ContentControl x:Name="Content" Foreground="{Binding Foreground, ElementName=PART_DropDownButton}" FontFamily="Arial"  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" Grid.Column="0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" FontSize="{Binding FontSize, ElementName=ButtonChrome, Mode=OneTime}" BorderThickness="4,0,0,0">
                        <ContentControl.Effect>
                            <DropShadowEffect Color="White" ShadowDepth="1" BlurRadius="0" Direction="320"/>
                        </ContentControl.Effect>
                    </ContentControl>
                </Grid>
            </telerik:RadToggleButton>
            <Telerik_Windows_Controls_Chromes:ValidationTooltip x:Name="ValidationTooltip" TooltipPlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" telerik:StyleManager.Theme="{StaticResource Theme}" TooltipContent="{Binding (Validation.Errors), RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed"/>
            <Primitives:Popup CloseOnOutsideClick="True" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Owner="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                <Grid x:Name="PopupRoot">
                    <Telerik_Windows_Controls_Chromes:ShadowChrome Margin="0 0 0 3" telerik:StyleManager.Theme="{StaticResource Theme}"/>
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource PickerPopupBackground}" CornerRadius="{StaticResource SplitButton_SpanCornerRadius}" MaxHeight="{TemplateBinding MaxDropDownHeight}" Margin="0 0 0 3" MinWidth="{TemplateBinding MinDropDownWidth}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <telerik:RadButton x:Name="PART_ClearButton" Content="{TemplateBinding ClearSelectionButtonContent}" Margin="-1 -1 -1 0" Grid.Row="0" Style="{StaticResource RadButtonRemStyle}" Visibility="{TemplateBinding ClearSelectionButtonVisibility}"/>
                            <ScrollViewer x:Name="PART_ScrollViewer" BorderThickness="0" telerik:ScrollViewerExtensions.EnableMouseWheel="True" Padding="1 1 1 0" Grid.Row="1" telerik:StyleManager.Theme="{StaticResource Theme}" VerticalScrollBarVisibility="Auto">
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </Grid>
                    </Border>
                </Grid>
            </Primitives:Popup>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="BorderlessComboBox" TargetType="telerikInput:RadComboBox">

        <Grid x:Name="VisualRoot">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Content">
                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DropDownIcon">
                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Normal">
                    </VisualState>
                    <VisualState x:Name="MouseOver">
                    </VisualState>
                    <VisualState x:Name="DropDownOpen">
                        <Storyboard>

                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" Storyboard.TargetName="DropDownIcon" d:IsOptimized="True"/>

                            <ColorAnimation Duration="0" To="#FFFFFFFF" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="PART_DropDownButton" d:IsOptimized="True"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused"/>
                    <VisualState x:Name="Unfocused"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ValidationStates">
                    <VisualState x:Name="Valid"/>
                    <VisualState x:Name="InvalidUnfocused">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationTooltip">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="InvalidFocused">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationTooltip">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="ValidationTooltip">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <System:Boolean>True</System:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border IsHitTestVisible="False"/>
            <telerik:RadToggleButton x:Name="PART_DropDownButton" ClickMode="Press" IsTabStop="False" Margin="0" Height="{TemplateBinding Height}" BorderThickness="0" Padding="0" Foreground="{TemplateBinding Foreground}" Style="{StaticResource BorderlessToggleButtonStyle}">
                <telerik:RadToggleButton.Template>
                    <ControlTemplate TargetType="telerik:RadToggleButton">
                        <ContentPresenter/>
                    </ControlTemplate>
                </telerik:RadToggleButton.Template>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Telerik_Windows_Controls_Chromes:ButtonChrome x:Name="ButtonChrome" Style="{StaticResource BorderlessButtonBaseStyle}" Grid.ColumnSpan="2" Background="{TemplateBinding Background}" BorderBrush="{StaticResource TileButtonOuterBorderBrushChecked}" CornerRadius="{StaticResource SplitButton_SpanCornerRadius}" RenderPressed="{TemplateBinding IsDropDownOpen}" RenderFocused="{TemplateBinding IsFocused}" RenderEnabled="{TemplateBinding IsEnabled}" Foreground="{StaticResource BorderlessButtonForeground}" BorderThickness="0.5" RenderMouseOver="{Binding IsMouseOver, ElementName=PART_DropDownButton}"/>
                    <Path x:Name="DropDownIcon" Grid.Column="2" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z " HorizontalAlignment="Right" Height="4" Margin="0,0,6,0" Stretch="Uniform" Width="8" Fill="{Binding Foreground, ElementName=PART_DropDownButton}">
                        <Path.Effect>
                            <DropShadowEffect Color="White" ShadowDepth="1" BlurRadius="0" Direction="289"/>
                        </Path.Effect>
                    </Path>
                    <ContentControl x:Name="Content" Foreground="{Binding Foreground, ElementName=PART_DropDownButton}" FontFamily="Arial"  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" Grid.Column="0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" FontSize="{Binding FontSize, ElementName=ButtonChrome, Mode=OneTime}" BorderThickness="4,0,0,0"/>
                </Grid>
            </telerik:RadToggleButton>
            <Telerik_Windows_Controls_Chromes:ValidationTooltip x:Name="ValidationTooltip" TooltipPlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" telerik:StyleManager.Theme="{StaticResource Theme}" TooltipContent="{Binding (Validation.Errors), RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed"/>
            <Primitives:Popup CloseOnOutsideClick="True" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Owner="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                <Grid x:Name="PopupRoot">
                    <Telerik_Windows_Controls_Chromes:ShadowChrome Margin="0 0 0 3" telerik:StyleManager.Theme="{StaticResource Theme}"/>
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource PickerPopupBackground}" CornerRadius="{StaticResource SplitButton_SpanCornerRadius}" MaxHeight="{TemplateBinding MaxDropDownHeight}" Margin="0 0 0 3" MinWidth="{TemplateBinding MinDropDownWidth}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <telerik:RadButton x:Name="PART_ClearButton" Content="{TemplateBinding ClearSelectionButtonContent}" Margin="-1 -1 -1 0" Grid.Row="0" Style="{StaticResource RadButtonRemStyle}" Visibility="{TemplateBinding ClearSelectionButtonVisibility}"/>
                            <ScrollViewer x:Name="PART_ScrollViewer" BorderThickness="0" telerik:ScrollViewerExtensions.EnableMouseWheel="True" Padding="1 1 1 0" Grid.Row="1" telerik:StyleManager.Theme="{StaticResource Theme}" VerticalScrollBarVisibility="Auto">
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </Grid>
                    </Border>
                </Grid>
            </Primitives:Popup>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="FormComboBoxRemStyleTemplate" TargetType="telerikInput:RadComboBox">

        <Grid x:Name="VisualRoot">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Content">
                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DropDownIcon">
                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Normal">
                    </VisualState>
                    <VisualState x:Name="MouseOver">
                    </VisualState>
                    <VisualState x:Name="DropDownOpen">
                        <Storyboard>

                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" Storyboard.TargetName="DropDownIcon" d:IsOptimized="True"/>

                            <ColorAnimation Duration="0" To="#FFFFFFFF" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="PART_DropDownButton" d:IsOptimized="True"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused"/>
                    <VisualState x:Name="Unfocused"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ValidationStates">
                    <VisualState x:Name="Valid"/>
                    <VisualState x:Name="InvalidUnfocused">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationTooltip">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="InvalidFocused">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationTooltip">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="ValidationTooltip">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <System:Boolean>True</System:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border IsHitTestVisible="False"/>
            <telerik:RadToggleButton x:Name="PART_DropDownButton" ClickMode="Press" IsTabStop="False" Margin="0" Height="{TemplateBinding Height}" BorderThickness="0" Padding="0" Foreground="{TemplateBinding Foreground}" Style="{StaticResource BorderlessToggleButtonStyle}">
                <telerik:RadToggleButton.Template>
                    <ControlTemplate TargetType="telerik:RadToggleButton">
                        <ContentPresenter/>
                    </ControlTemplate>
                </telerik:RadToggleButton.Template>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Telerik_Windows_Controls_Chromes:ButtonChrome x:Name="ButtonChrome" Style="{StaticResource FormButtonChromeRemStyle}" Grid.ColumnSpan="2" Background="{TemplateBinding Background}" BorderBrush="{StaticResource TileButtonOuterBorderBrushChecked}" CornerRadius="{StaticResource SplitButton_SpanCornerRadius}" RenderPressed="{TemplateBinding IsDropDownOpen}" RenderFocused="{TemplateBinding IsFocused}" RenderEnabled="{TemplateBinding IsEnabled}" Foreground="{StaticResource BorderlessButtonForeground}" BorderThickness="0.5" RenderMouseOver="{Binding IsMouseOver, ElementName=PART_DropDownButton}"/>
                    <Path x:Name="DropDownIcon" Grid.Column="2" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z " HorizontalAlignment="Right" Height="4" Margin="0,0,6,0" Stretch="Uniform" Width="8" Fill="{Binding Foreground, ElementName=PART_DropDownButton}">
                        <Path.Effect>
                            <DropShadowEffect Color="White" ShadowDepth="1" BlurRadius="0" Direction="289"/>
                        </Path.Effect>
                    </Path>
                    <ContentControl x:Name="Content" Foreground="{Binding Foreground, ElementName=PART_DropDownButton}" FontFamily="Arial"  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" Grid.Column="0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" FontSize="{Binding FontSize, ElementName=ButtonChrome, Mode=OneTime}" BorderThickness="4,0,0,0"/>
                </Grid>
            </telerik:RadToggleButton>
            <Telerik_Windows_Controls_Chromes:ValidationTooltip x:Name="ValidationTooltip" TooltipPlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" telerik:StyleManager.Theme="{StaticResource Theme}" TooltipContent="{Binding (Validation.Errors), RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed"/>
            <Primitives:Popup CloseOnOutsideClick="True" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Owner="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                <Grid x:Name="PopupRoot">
                    <Telerik_Windows_Controls_Chromes:ShadowChrome Margin="0 0 0 3" telerik:StyleManager.Theme="{StaticResource Theme}"/>
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource PickerPopupBackground}" CornerRadius="{StaticResource SplitButton_SpanCornerRadius}" MaxHeight="{TemplateBinding MaxDropDownHeight}" Margin="0 0 0 3" MinWidth="{TemplateBinding MinDropDownWidth}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <telerik:RadButton x:Name="PART_ClearButton" Content="{TemplateBinding ClearSelectionButtonContent}" Margin="-1 -1 -1 0" Grid.Row="0" Style="{StaticResource RadButtonRemStyle}" Visibility="{TemplateBinding ClearSelectionButtonVisibility}"/>
                            <ScrollViewer x:Name="PART_ScrollViewer" BorderThickness="0" telerik:ScrollViewerExtensions.EnableMouseWheel="True" Padding="1 1 1 0" Grid.Row="1" telerik:StyleManager.Theme="{StaticResource Theme}" VerticalScrollBarVisibility="Auto">
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </Grid>
                    </Border>
                </Grid>
            </Primitives:Popup>
        </Grid>
    </ControlTemplate>


    <ControlTemplate x:Key="ArrowTemplateEditableCombobox" TargetType="ContentControl">
        <Grid Margin="5 0">
            <Path x:Name="BackgroundIcon" Data="M0,0 L2,0 1,1 Z" Fill="{TemplateBinding Background}" Height="3" Margin="0 2 0 0" Stretch="Fill" Width="5"/>
            <Path x:Name="ForegroundIcon" Data="M0,0 L2,0 1,1 Z" Fill="{TemplateBinding Foreground}" Height="3" Margin="0 1 0 1" Stretch="Fill" Width="5"/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="ArrowTemplateBorderlessCombobox" TargetType="ContentControl">
        <Grid Margin="2 0">
            <Path x:Name="BackgroundIcon" Data="M0,0 L2,0 1,1 Z" Fill="{TemplateBinding Background}" Height="6"  Margin="0 2 0 0"  Width="12"  Stretch="Fill"/>
            <Path x:Name="ForegroundIcon" Data="M0,0 L2,0 1,1 Z" Fill="{TemplateBinding Foreground}" Height="6" Margin="0 1 0 1"  Width="12" Stretch="Fill" StrokeThickness="0.75"/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="EditableComboBox" TargetType="telerikInput:RadComboBox">
        <Grid x:Name="VisualRoot">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource ControlOuterBorder_Disabled}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverVisual">
                                <LinearDoubleKeyFrame KeyTime="0:0:0.050" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="MouseOverVisual">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.050">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="PART_EditableTextBox">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource PickerForeground_Disabled}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="DropDownIcon">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconForeground_Disabled}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="DropDownIcon">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconBackground_Disabled}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Background">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ControlBackground_Disabled}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverVisual">
                                <LinearDoubleKeyFrame KeyTime="0:0:0.150" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="MouseOverVisual">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.150">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="RenderActive" Storyboard.TargetName="ButtonChrome">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <System:Boolean>True</System:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverVisual">
                                <LinearDoubleKeyFrame KeyTime="0:0:0.115" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="MouseOverVisual">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="DropDownIcon">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BaseButtonForeground_MouseOver}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="DropDownOpen">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource ControlOuterBorder_Pressed}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverVisual">
                                <LinearDoubleKeyFrame KeyTime="0:0:0.050" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="MouseOverVisual">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.050">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="0"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="DropDownIcon">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconForeground_Pressed}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="DropDownIcon">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconBackground_Pressed}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="RenderFocused" Storyboard.TargetName="ButtonChrome">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <System:Boolean>True</System:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unfocused"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ValidationStates">
                    <VisualState x:Name="Valid"/>
                    <VisualState x:Name="InvalidUnfocused">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationTooltip">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="InvalidFocused">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationTooltip">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="ValidationTooltip">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <System:Boolean>True</System:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="WatermarkStates">
                    <VisualState x:Name="WatermarkVisible">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Watermark">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="WatermarkInvisible"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Background" Grid.Column="0" IsHitTestVisible="False"/>
            <Border Background="{TemplateBinding Background}" Grid.ColumnSpan="2" CornerRadius="{StaticResource SplitButton_SpanCornerRadius}" IsHitTestVisible="False"/>
            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" CornerRadius="{StaticResource SplitButton_SpanCornerRadius}" IsHitTestVisible="False"/>
            <Border x:Name="MouseOverVisual" BorderBrush="{StaticResource ControlOuterBorder_MouseOver}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" CornerRadius="{StaticResource SplitButton_SpanCornerRadius}" IsHitTestVisible="False" Opacity="0" Visibility="Collapsed"/>
            <telerik:PickerTextBox x:Name="PART_EditableTextBox" Foreground="{TemplateBinding Foreground}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{TemplateBinding IsReadOnly}" Padding="{TemplateBinding Padding}" telerik:StyleManager.Theme="{StaticResource Theme}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
            <Border x:Name="FocusVisual" BorderBrush="{StaticResource ControlOuterBorder_Focused}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" CornerRadius="{StaticResource SplitButton_SpanCornerRadius}" IsHitTestVisible="False" Visibility="Collapsed">
                <Border BorderBrush="{StaticResource ControlInnerBorder_Focused}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{StaticResource SplitButton_SpanInnerCornerRadius}"/>
            </Border>
            <telerik:RadToggleButton x:Name="PART_DropDownButton" ClickMode="Press" Grid.Column="1" IsTabStop="False" Margin="0" Padding="0">
                <telerik:RadToggleButton.Template>
                    <ControlTemplate TargetType="telerik:RadToggleButton">
                        <ContentPresenter/>
                    </ControlTemplate>
                </telerik:RadToggleButton.Template>
                <Grid>
                    <Telerik_Windows_Controls_Chromes:ButtonChrome x:Name="ButtonChrome" Style="{StaticResource ButtonChromeRemStyle}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{StaticResource SplitButton_RightPartCornerRadius}" RenderMouseOver="{Binding IsMouseOver, ElementName=PART_DropDownButton}" RenderPressed="{TemplateBinding IsDropDownOpen}" RenderFocused="{TemplateBinding IsFocused}" RenderEnabled="{TemplateBinding IsEnabled}"/>
                    <ContentControl x:Name="DropDownIcon" Background="{StaticResource BaseButtonForeground_MouseOver}" Foreground="{StaticResource BaseButtonForeground}" Grid.Column="1" IsTabStop="False" Template="{StaticResource ArrowTemplateEditableCombobox}"/>
                </Grid>
            </telerik:RadToggleButton>
            <TextBlock x:Name="Watermark" HorizontalAlignment="Left" IsHitTestVisible="False" Margin="5,0,0,0" Opacity=".5" Text="{TemplateBinding EmptyText}" Visibility="Collapsed" VerticalAlignment="Center"/>
            <Telerik_Windows_Controls_Chromes:ValidationTooltip x:Name="ValidationTooltip" Grid.ColumnSpan="2" TooltipPlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" telerik:StyleManager.Theme="{StaticResource Theme}" TooltipContent="{Binding (Validation.Errors), RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed"/>
            <Primitives:Popup CloseOnOutsideClick="True" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Owner="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                <Grid x:Name="PopupRoot">
                    <Telerik_Windows_Controls_Chromes:ShadowChrome Margin="0 0 0 3" telerik:StyleManager.Theme="{StaticResource Theme}"/>
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource PickerPopupBackground}" CornerRadius="{StaticResource SplitButton_SpanCornerRadius}" MaxHeight="{TemplateBinding MaxDropDownHeight}" Margin="0 0 0 3" MinWidth="{TemplateBinding MinDropDownWidth}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <telerik:RadButton x:Name="PART_ClearButton" Content="{TemplateBinding ClearSelectionButtonContent}" Margin="-1 -1 -1 0" Grid.Row="0" Style="{StaticResource RadButtonRemStyle}" Visibility="{TemplateBinding ClearSelectionButtonVisibility}"/>
                            <ScrollViewer x:Name="PART_ScrollViewer" BorderThickness="0" telerik:ScrollViewerExtensions.EnableMouseWheel="True" Padding="1 1 1 0" Grid.Row="1" telerik:StyleManager.Theme="{StaticResource Theme}" VerticalScrollBarVisibility="Auto">
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </Grid>
                    </Border>
                </Grid>
            </Primitives:Popup>
        </Grid>
    </ControlTemplate>

    <Style x:Key="FormRadComboBoxStyle" TargetType="telerikInput:RadComboBox">
        <Setter Property="Template" Value="{StaticResource NonEditableComboBox}"/>
        <Setter Property="EditableTemplate" Value="{StaticResource EditableComboBox}"/>
        <Setter Property="NonEditableTemplate" Value="{StaticResource NonEditableComboBox}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="MinHeight" Value="22"/>
        <Setter Property="Padding" Value="5 0"/>
        <Setter Property="Foreground" Value="{StaticResource PickerForeground_Normal}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{StaticResource ControlOuterBorder_Normal}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontSize" Value="7" />
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="ClearSelectionButtonVisibility" Value="Visible"/>
        <Setter Property="ClearSelectionButtonContent" Value="Clear"/>
        <Setter Property="EmptyText" Value=""/>
        <Setter Property="Animation:AnimationManager.AnimationSelector">
            <Setter.Value>
                <Animation:AnimationSelector>
                    <Animation:AnimationGroup AnimationName="Expand">
                        <Animation:SlideAnimation Direction="In" SlideMode="Top" TargetElementName="PopupRoot"/>
                    </Animation:AnimationGroup>
                    <Animation:AnimationGroup AnimationName="Collapse">
                        <Animation:SlideAnimation Direction="Out" SlideMode="Top" TargetElementName="PopupRoot"/>
                    </Animation:AnimationGroup>
                </Animation:AnimationSelector>
            </Setter.Value>
        </Setter>
    </Style>
<Style x:Key="FormRadComboBoxRemStyle" TargetType="telerikInput:RadComboBox">
        <Setter Property="Template" Value="{StaticResource FormComboBoxRemStyleTemplate}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="MinHeight" Value="22"/>
        <Setter Property="Padding" Value="5 0"/>
        <Setter Property="Foreground" Value="{StaticResource FormButtonForegroundBrushNormal}"/>
        <Setter Property="Background" Value="{StaticResource FormButtonBackgroundBrushNormal}"/>
        <Setter Property="BorderBrush" Value="{StaticResource FormButtonForegroundBrushNormal}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontSize" Value="13.3333" />
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="ClearSelectionButtonVisibility" Value="Visible"/>
        <Setter Property="ClearSelectionButtonContent" Value="Clear"/>
        <Setter Property="EmptyText" Value=""/>
        <Setter Property="Animation:AnimationManager.AnimationSelector">
            <Setter.Value>
                <Animation:AnimationSelector>
                    <Animation:AnimationGroup AnimationName="Expand">
                        <Animation:SlideAnimation Direction="In" SlideMode="Top" TargetElementName="PopupRoot"/>
                    </Animation:AnimationGroup>
                    <Animation:AnimationGroup AnimationName="Collapse">
                        <Animation:SlideAnimation Direction="Out" SlideMode="Top" TargetElementName="PopupRoot"/>
                    </Animation:AnimationGroup>
                </Animation:AnimationSelector>
            </Setter.Value>
        </Setter>
    </Style>


    <ControlTemplate x:Key="BorderlessRadComboBox" TargetType="Controls1:RadComboBox">
        <Grid x:Name="VisualRoot">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0" To="DropDownOpen"/>
                        <VisualTransition From="DropDownOpen" GeneratedDuration="0"/>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Content">
                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DropDownIcon">
                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="DropDownIcon">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconForeground_Disabled}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="DropDownIcon">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconBackground_Disabled}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ButtonChrome">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="100"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="RenderMouseOver" Storyboard.TargetName="ButtonChrome">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <System:Boolean>True</System:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="DropDownOpen">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="White"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" Storyboard.TargetName="DropDownIcon" d:IsOptimized="True"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ButtonChrome">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="100"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="ButtonChrome">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CloseButtonGrayBackgroundBrushPressed}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="DropDownIcon">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="White"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="DropDownIcon">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused"/>

                    <VisualState x:Name="Unfocused"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ValidationStates">
                    <VisualState x:Name="Valid"/>
                    <VisualState x:Name="InvalidUnfocused">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationTooltip">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="InvalidFocused">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationTooltip">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="ValidationTooltip">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <System:Boolean>True</System:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border IsHitTestVisible="False"/>
            <telerik:RadToggleButton x:Name="PART_DropDownButton" ClickMode="Press" IsTabStop="False" Margin="0" Padding="0">
                <telerik:RadToggleButton.Template>
                    <ControlTemplate TargetType="telerik:RadToggleButton">
                        <ContentPresenter>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </ContentPresenter>
                    </ControlTemplate>
                </telerik:RadToggleButton.Template>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Telerik_Windows_Controls_Chromes:ButtonChrome x:Name="ButtonChrome" Grid.ColumnSpan="2" Background="{TemplateBinding Background}" CornerRadius="3" RenderPressed="{TemplateBinding IsDropDownOpen}" RenderFocused="{TemplateBinding IsFocused}" RenderEnabled="{TemplateBinding IsEnabled}" Opacity="0" BorderBrush="{x:Null}" Style="{StaticResource BorderlessButtonBaseStyle}" Margin="0"/>
                    <ContentControl x:Name="DropDownIcon" Background="{TemplateBinding Background}" Foreground="{StaticResource BorderlessButtonForeground}" Grid.Column="1" IsTabStop="False" Template="{StaticResource ArrowTemplateBorderlessCombobox}" Margin="10, 0">
                        <ContentControl.Effect>
                            <DropShadowEffect Color="White" ShadowDepth="1" BlurRadius="0" Direction="280"/>
                        </ContentControl.Effect>
                    </ContentControl>
                    <ContentControl x:Name="Content" Foreground="{StaticResource BorderlessButtonForeground}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" Grid.Column="0" IsHitTestVisible="False" VerticalAlignment="Center" Margin="4 0 0 0">
                        <ContentControl.Effect>
                            <DropShadowEffect Color="White" ShadowDepth="1" BlurRadius="0" Direction="323"/>
                        </ContentControl.Effect>
                    </ContentControl>
                </Grid>
            </telerik:RadToggleButton>
            <Telerik_Windows_Controls_Chromes:ValidationTooltip x:Name="ValidationTooltip" TooltipPlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" telerik:StyleManager.Theme="{StaticResource Theme}" TooltipContent="{Binding (Validation.Errors), RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed"/>
            <Primitives:Popup CloseOnOutsideClick="True" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Owner="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                <Grid x:Name="PopupRoot">
                    <Telerik_Windows_Controls_Chromes:ShadowChrome Margin="0 0 0 3" telerik:StyleManager.Theme="{StaticResource Theme}"/>
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource PickerPopupBackground}" CornerRadius="{StaticResource SplitButton_SpanCornerRadius}" MaxHeight="{TemplateBinding MaxDropDownHeight}" Margin="0 0 0 3" MinWidth="{TemplateBinding MinDropDownWidth}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <telerik:RadButton x:Name="PART_ClearButton" Content="{TemplateBinding ClearSelectionButtonContent}" Margin="-1 -1 -1 0" Grid.Row="0" Style="{StaticResource RadButtonRemStyle}" Visibility="{TemplateBinding ClearSelectionButtonVisibility}"/>
                            <ScrollViewer x:Name="PART_ScrollViewer" BorderThickness="0" telerik:ScrollViewerExtensions.EnableMouseWheel="True" Padding="1 1 1 0" Grid.Row="1" telerik:StyleManager.Theme="{StaticResource Theme}" VerticalScrollBarVisibility="Auto">
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </Grid>
                    </Border>
                </Grid>
            </Primitives:Popup>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="WorkPadNavigationRadComboBox" TargetType="telerikInput:RadComboBox">
        <Grid x:Name="VisualRoot">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Content">
                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DropDownIcon">
                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="DropDownIcon">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconForeground_Disabled}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="DropDownIcon">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconBackground_Disabled}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="RenderMouseOver" Storyboard.TargetName="ButtonChrome">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <System:Boolean>True</System:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BaseButtonForeground_MouseOver}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="DropDownIcon">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BaseButtonForeground_MouseOver}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="DropDownOpen">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="DropDownIcon">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconForeground_MouseOver}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BaseButtonForeground_MouseOver}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="DropDownIcon">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconBackground_Pressed}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused"/>
                    <VisualState x:Name="Unfocused"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ValidationStates">
                    <VisualState x:Name="Valid"/>
                    <VisualState x:Name="InvalidUnfocused">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationTooltip">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="InvalidFocused">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationTooltip">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="ValidationTooltip">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <System:Boolean>True</System:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border IsHitTestVisible="False"/>
            <telerik:RadToggleButton x:Name="PART_DropDownButton" ClickMode="Press" IsTabStop="False" Margin="0" Padding="0">
                <telerik:RadToggleButton.Template>
                    <ControlTemplate TargetType="telerik:RadToggleButton">
                        <ContentPresenter/>
                    </ControlTemplate>
                </telerik:RadToggleButton.Template>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Telerik_Windows_Controls_Chromes:ButtonChrome x:Name="ButtonChrome" Style="{StaticResource WorkPadNavigationButtonBaseStyle}" Grid.ColumnSpan="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{StaticResource SplitButton_SpanCornerRadius}" RenderPressed="{TemplateBinding IsDropDownOpen}" RenderFocused="{TemplateBinding IsFocused}" RenderEnabled="{TemplateBinding IsEnabled}"/>
                    <ContentControl x:Name="DropDownIcon" Background="{StaticResource BaseButtonForeground_MouseOver}" Foreground="{StaticResource BaseButtonForeground}" Grid.Column="1" IsTabStop="False" Template="{StaticResource ArrowTemplateNonEditableCombobox}"/>
                    <ContentControl x:Name="Content" Foreground="{TemplateBinding Foreground}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" Grid.Column="0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Grid>
            </telerik:RadToggleButton>
            <Telerik_Windows_Controls_Chromes:ValidationTooltip x:Name="ValidationTooltip" TooltipPlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" telerik:StyleManager.Theme="{StaticResource Theme}" TooltipContent="{Binding (Validation.Errors), RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed"/>
            <Primitives:Popup CloseOnOutsideClick="True" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Owner="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                <Grid x:Name="PopupRoot">
                    <Telerik_Windows_Controls_Chromes:ShadowChrome Margin="0 0 0 3" telerik:StyleManager.Theme="{StaticResource Theme}"/>
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource PickerPopupBackground}" CornerRadius="{StaticResource SplitButton_SpanCornerRadius}" MaxHeight="{TemplateBinding MaxDropDownHeight}" Margin="0 0 0 3" MinWidth="{TemplateBinding MinDropDownWidth}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <telerik:RadButton x:Name="PART_ClearButton" Content="{TemplateBinding ClearSelectionButtonContent}" Margin="-1 -1 -1 0" Grid.Row="0" Style="{StaticResource RadButtonRemStyle}" Visibility="{TemplateBinding ClearSelectionButtonVisibility}"/>
                            <ScrollViewer x:Name="PART_ScrollViewer" BorderThickness="0" telerik:ScrollViewerExtensions.EnableMouseWheel="True" Padding="1 1 1 0" Grid.Row="1" telerik:StyleManager.Theme="{StaticResource Theme}" VerticalScrollBarVisibility="Auto">
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </Grid>
                    </Border>
                </Grid>
            </Primitives:Popup>
        </Grid>
    </ControlTemplate>



    <Style x:Key="RadComboBoxRemStyle" TargetType="telerikInput:RadComboBox">
        <Setter Property="Background" Value="{StaticResource REMControl_Background_Normal}"/>
        <Setter Property="BorderBrush" Value="{StaticResource REMControl_OuterBorder_Normal}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template" Value="{StaticResource NonEditableComboBox}"/>
        <Setter Property="EditableTemplate" Value="{StaticResource EditableComboBox}"/>
        <Setter Property="NonEditableTemplate" Value="{StaticResource NonEditableComboBox}"/>
        <Setter Property="FontSize" Value="9.333"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="Width" Value="100"/>
    </Style>

    <Style x:Key="BorderlessAddButtonComboBoxStyle" TargetType="telerikInput:RadComboBox">
        <Setter Property="Template" Value="{StaticResource BorderlessAddButtonComboBox}"/>
        <Setter Property="Foreground" Value="{StaticResource BorderlessButtonForeground}"/>
        <Setter Property="EditableTemplate" Value="{StaticResource EditableComboBox}"/>
        <Setter Property="NonEditableTemplate" Value="{StaticResource BorderlessAddButtonComboBox}"/>
        <Setter Property="FontSize" Value="9.333"/>
    </Style>
    <Style x:Key="TileBorderlessComboBoxStyle" TargetType="telerikInput:RadComboBox">
        <Setter Property="Template" Value="{StaticResource TileBorderlessComboBox}"/>
        <Setter Property="Foreground" Value="{StaticResource BorderlessButtonForeground}"/>
        <Setter Property="EditableTemplate" Value="{StaticResource EditableComboBox}"/>
        <Setter Property="NonEditableTemplate" Value="{StaticResource TileBorderlessComboBox}"/>
        <Setter Property="FontSize" Value="9.333"/>
    </Style>

    <Style x:Key="GlobalNavBorderlessComboBoxStyle" TargetType="telerikInput:RadComboBox">
        <Setter Property="Template" Value="{StaticResource BorderlessComboBox}"/>
        <Setter Property="Foreground" Value="{StaticResource BorderlessButtonForeground}"/>
        <Setter Property="EditableTemplate" Value="{StaticResource EditableComboBox}"/>
        <Setter Property="NonEditableTemplate" Value="{StaticResource BorderlessComboBox}"/>
        <Setter Property="SelectionBoxTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}">
						<TextBlock.Effect>							
                            <DropShadowEffect Color="White" ShadowDepth="1" BlurRadius="0" Direction="323"/>
						</TextBlock.Effect>
                    </TextBlock>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontSize" Value="9.333"/>
    </Style>

    <Style x:Key="BorderlessRadComboBoxRemStyle" TargetType="Controls1:RadComboBox">
        <Setter Property="Background" Value="{StaticResource CloseButtonGrayBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource CloseButtonGrayBackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="10,0"/>
        <Setter Property="Foreground" Value="{StaticResource BorderlessButtonForeground}"/>
        <Setter Property="Template" Value="{StaticResource BorderlessRadComboBox}"/>
        <Setter Property="EditableTemplate" Value="{StaticResource BorderlessRadComboBox}"/>
        <Setter Property="NonEditableTemplate" Value="{StaticResource BorderlessRadComboBox}"/>
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Width" Value="Auto"/>
    </Style>


    <Style x:Key="WorkSpaceHeader_RibbonComboBox_Style" BasedOn="{StaticResource RadComboBoxRemStyle}" TargetType="telerikInput:RadComboBox">
        <Setter Property="BorderBrush" Value="{StaticResource WorkPadHeaderControl_OuterBorder_Normal}"/>
        <Setter Property="Background" Value="{StaticResource WorkPadHeaderControl_Background_Normal}"/>
    </Style>
    <Style x:Key="WorkPadRibbonComboBoxStyle" TargetType="telerikInput:RadComboBox">
        <Setter Property="Template" Value="{StaticResource WorkPadNavigationRadComboBox}"/>
        <Setter Property="NonEditableTemplate" Value="{StaticResource WorkPadNavigationRadComboBox}"/>
        <Setter Property="EditableTemplate" Value="{StaticResource WorkPadNavigationRadComboBox}"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Width" Value="100"/>

    </Style>
    <!-- End Telerik Style -->

    <Style x:Key="MonthViewStyle" TargetType="Telerik_Windows_Controls_Calendar:CalendarView">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="{StaticResource CalendarOuterBorder}"/>
        <Setter Property="Background" Value="{StaticResource CalendarViewBackground}"/>
        <Setter Property="BorderThickness" Value="{StaticResource CalendarViewBorderThickness}"/>
        <Setter Property="Padding" Value="{StaticResource CalendarViewHeaderPadding}"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Telerik_Windows_Controls_Calendar:CalendarView">
                    <Grid Margin="{StaticResource CalendarViewMargin}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border x:Name="BackgroundVisual" Background="{TemplateBinding Background}" Grid.RowSpan="2"/>
                        <Border x:Name="Header" BorderBrush="{StaticResource CalendarSubHeaderOuterBorder}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource CalendarSubHeaderBackground}" Margin="{StaticResource CalendarViewHeaderMargin}" Visibility="{TemplateBinding HeaderVisibility}">
                            <Border BorderBrush="{StaticResource CalendarSubHeaderInnerBorder}" BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </Border>
                        <Grid x:Name="WeekHeaders" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="7*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="6*"/>
                            </Grid.RowDefinitions>
                            <Border x:Name="VerticalOuterBorder" BorderBrush="{StaticResource CalendarWeekHeaderVerticalOuterBorder}" BorderThickness="{StaticResource CalendarWeekHeaderVerticalOuterBorderThickness}" Margin="{StaticResource CalendarWeekHeaderVerticalOuterBorderMargin}" Grid.RowSpan="2" Visibility="{Binding HideColumn, Converter={StaticResource InvertedBooleanToVisibilityConverterInstance}}" Canvas.ZIndex="{StaticResource CalendarWeekHeaderVerticalOuterBorderZIndex}"/>
                            <Border x:Name="HorizontalOuterBorder" BorderBrush="{StaticResource CalendarWeekHeaderHorizontalOuterBorder}" BorderThickness="{StaticResource CalendarWeekHeaderHorizontalOuterBorderThickness}" Grid.ColumnSpan="2" Margin="{StaticResource CalendarWeekHeaderHorizontalOuterBorderMargin}" Visibility="{Binding HideRow, Converter={StaticResource InvertedBooleanToVisibilityConverterInstance}}" Canvas.ZIndex="{StaticResource CalendarWeekHeaderHorizontalOuterBorderZIndex}"/>
                            <Border x:Name="VerticalInnerBorder" BorderBrush="{StaticResource CalendarWeekHeaderVerticalInnerBorder}" BorderThickness="{StaticResource CalendarWeekHeaderVerticalInnerBorderThickness}" Margin="{StaticResource CalendarWeekHeaderVerticalInnerBorderMargin}" Grid.RowSpan="2" Visibility="{Binding HideColumn, Converter={StaticResource InvertedBooleanToVisibilityConverterInstance}}" Canvas.ZIndex="{StaticResource CalendarWeekHeaderVerticalInnerBorderZIndex}"/>
                            <Border x:Name="HorizontalInnerBorder" BorderBrush="{StaticResource CalendarWeekHeaderHorizontalInnerBorder}" BorderThickness="{StaticResource CalendarWeekHeaderHorizontalInnerBorderThickness}" Grid.ColumnSpan="2" Margin="{StaticResource CalendarWeekHeaderHorizontalInnerBorderMargin}" Visibility="{Binding HideRow, Converter={StaticResource InvertedBooleanToVisibilityConverterInstance}}" Canvas.ZIndex="{StaticResource CalendarWeekHeaderHorizontalInnerBorderZIndex}"/>
                            <Rectangle x:Name="VerticalBackground" Fill="{StaticResource CalendarWeekHeaderVerticalBackground}" Margin="{StaticResource CalendarWeekHeaderVerticalBackgroundMargin}" Grid.RowSpan="2" Visibility="{Binding HideColumn, Converter={StaticResource InvertedBooleanToVisibilityConverterInstance}}" Canvas.ZIndex="{StaticResource CalendarWeekHeaderVerticalBackgroundZIndex}"/>
                            <Rectangle x:Name="HorizontalBackground" Grid.ColumnSpan="2" Fill="{StaticResource CalendarWeekHeaderHorizontalBackground}" Margin="{StaticResource CalendarWeekHeaderHorizontalBackgroundMargin}" Visibility="{Binding HideRow, Converter={StaticResource InvertedBooleanToVisibilityConverterInstance}}" Canvas.ZIndex="{StaticResource CalendarWeekHeaderHorizontalBackgroundZIndex}"/>
                        </Grid>
                        <ItemsPresenter Margin="{StaticResource CalendarItemsMargin}" Grid.Row="1"/>
                        <Border x:Name="BorderBrush" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.RowSpan="2"/>
                        <Rectangle x:Name="MinDesiredSize" Height="155" Grid.Row="1" Width="240"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="0"/>
    </Style>
    <Style x:Key="CalendarViewStyle" TargetType="Telerik_Windows_Controls_Calendar:CalendarView">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="{StaticResource CalendarOuterBorder}"/>
        <Setter Property="Background" Value="{StaticResource CalendarViewBackground}"/>
        <Setter Property="BorderThickness" Value="{StaticResource CalendarViewBorderThickness}"/>
        <Setter Property="Padding" Value="{StaticResource CalendarViewHeaderPadding}"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Telerik_Windows_Controls_Calendar:CalendarView">
                    <Grid Margin="{StaticResource CalendarViewMargin}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border x:Name="BackgroundVisual" Background="{TemplateBinding Background}" Grid.RowSpan="2"/>
                        <Border x:Name="Header" BorderBrush="{StaticResource CalendarSubHeaderOuterBorder}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource CalendarSubHeaderBackground}" Margin="{StaticResource CalendarViewHeaderMargin}" Visibility="{TemplateBinding HeaderVisibility}">
                            <Border BorderBrush="{StaticResource CalendarSubHeaderInnerBorder}" BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </Border>
                        <ItemsPresenter Margin="{StaticResource CalendarItemsMargin}" Grid.Row="1"/>
                        <Border x:Name="BorderBrush" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.RowSpan="2"/>
                        <Rectangle x:Name="MinDesiredSize" Height="155" Grid.Row="1" Width="240"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="0"/>
    </Style>
    <Thickness x:Key="CalendarButtonButtonChromeMargin">2</Thickness>
    <Thickness x:Key="CalendarButtonTodayVisualMargin">1</Thickness>
    <Style x:Key="CalendarButtonStyle" TargetType="Telerik_Windows_Controls_Calendar:CalendarButton">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Telerik_Windows_Controls_Calendar:CalendarButton">
                    <Grid x:Name="LayoutRoot">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="LayoutRoot">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.75"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ViewStates">
                                <VisualState x:Name="IsInAnotherView"/>
                                <VisualState x:Name="IsNotFromCurrentView">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Content">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ButtonType">
                                <VisualState x:Name="Year"/>
                                <VisualState x:Name="Decade"/>
                                <VisualState x:Name="Date"/>
                                <VisualState x:Name="WeekName">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="SelectionChrome">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="WeekNumber">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="SelectionChrome">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="TodayDate">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="TodayVisual">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Month"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Selected"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderThickness}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                        <Telerik_Windows_Controls_Chromes:ButtonChrome x:Name="SelectionChrome" CornerRadius="{StaticResource SplitButton_SpanCornerRadius}" Margin="{StaticResource CalendarButtonButtonChromeMargin}" RenderNormal="False" RenderSelected="{TemplateBinding IsSelected}" RenderFocused="{TemplateBinding IsFocused}" RenderHighlighted="{TemplateBinding IsMouseOver}" telerik:StyleManager.Theme="{StaticResource Theme}"/>
                        <Border x:Name="TodayVisual" BorderBrush="{StaticResource ControlOuterBorder_Pressed}" BorderThickness="1" CornerRadius="2" Margin="{StaticResource CalendarButtonTodayVisualMargin}" Visibility="Collapsed"/>
                        <ContentPresenter x:Name="Content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Thickness x:Key="CalendarHeaderPadding">0</Thickness>
    <Thickness x:Key="CalendarTransitionPanelMargin">0 0 0 0</Thickness>
    <CornerRadius x:Key="CalendarInnerBorderCornerRadius">0</CornerRadius>
    <CornerRadius x:Key="CalendarOuterBorderCornerRadius">0</CornerRadius>
    <Thickness x:Key="CalendarHeaderBorderThickness">1</Thickness>
    <Style x:Key="HeaderButtonChrome" TargetType="Telerik_Windows_Controls_Chromes:ButtonChrome">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource HeaderButtonOuterBorder_Normal}"/>
        <Setter Property="Background" Value="{StaticResource HeaderButtonBackground_Normal}"/>
        <Setter Property="CornerRadius" Value="{StaticResource SplitButton_SpanCornerRadius}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Telerik_Windows_Controls_Chromes:ButtonChrome">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderButtonOuterBorder_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderButtonInnerBorder_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderButtonBackground_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderButtonOuterBorder_Pressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderButtonInnerBorder_Pressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderButtonBackground_Pressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="OuterBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
                            <Border x:Name="InnerBorder" BorderBrush="{StaticResource HeaderButtonInnerBorder_Normal}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MoveLeftButtonStyle" TargetType="RepeatButton">
        <Setter Property="Width" Value="22"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderButtonIconBackground_Disabled}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderButtonIconForeground_Disabled}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderButtonIconBackground_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderButtonIconForeground_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderButtonIconBackground_Pressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderButtonIconForeground_Pressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Telerik_Windows_Controls_Chromes:ButtonChrome CornerRadius="{StaticResource SplitButton_SpanCornerRadius}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" RenderFocused="{TemplateBinding IsFocused}" Style="{StaticResource HeaderButtonChrome}"/>
                        <Path x:Name="BackgroundIcon" Data="M4,0 L4,7 3,7 3,6 2,6 2,5 1,5 1,4 0,4 0,3 1,3 1,2 2,2 2,1 3,1 3,0 z" Fill="{StaticResource HeaderButtonIconBackground_Normal}" Height="7" Margin="0 2 0 0" Width="4"/>
                        <Path x:Name="ForegroundIcon" Data="M4,0 L4,7 3,7 3,6 2,6 2,5 1,5 1,4 0,4 0,3 1,3 1,2 2,2 2,1 3,1 3,0 z" Fill="{StaticResource HeaderButtonIconForeground_Normal}" Height="7" Margin="0 1 0 1" Width="4"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <FontWeight x:Key="HeaderTextFontWeight">Bold</FontWeight>
    <Style x:Key="CalendarHeaderButton" TargetType="Button">
        <Setter Property="Height" Value="22"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="LayoutRoot">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="LayoutRoot">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.75"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="TextDecorations" Storyboard.TargetName="BackgroundText">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Underline"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="TextDecorations" Storyboard.TargetName="ForegroundText">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Underline"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="TextDecorations" Storyboard.TargetName="BackgroundText">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Underline"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="TextDecorations" Storyboard.TargetName="ForegroundText">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Underline"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="TextDecorations" Storyboard.TargetName="BackgroundText">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Underline"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="TextDecorations" Storyboard.TargetName="ForegroundText">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Underline"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <TextBlock x:Name="BackgroundText" Foreground="{StaticResource HeaderTextBackground}" FontWeight="{StaticResource HeaderTextFontWeight}" HorizontalAlignment="Center" Margin="0 2 0 0" Text="{TemplateBinding Content}" VerticalAlignment="Center"/>
                        <TextBlock x:Name="ForegroundText" Foreground="{StaticResource HeaderTextForeground}" FontWeight="{StaticResource HeaderTextFontWeight}" HorizontalAlignment="Center" Margin="0 1 0 1" Text="{TemplateBinding Content}" VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MoveRightButtonStyle" TargetType="RepeatButton">
        <Setter Property="Width" Value="22"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderButtonIconBackground_Disabled}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderButtonIconForeground_Disabled}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderButtonIconBackground_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderButtonIconForeground_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderButtonIconBackground_Pressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderButtonIconForeground_Pressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Telerik_Windows_Controls_Chromes:ButtonChrome CornerRadius="{StaticResource SplitButton_SpanCornerRadius}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" RenderFocused="{TemplateBinding IsFocused}" Style="{StaticResource HeaderButtonChrome}"/>
                        <Path x:Name="BackgroundIcon" Data="M0,0 L0,7 1,7 1,6 2,6 2,5 3,5 3,4 4,4 4,3 3,3 3,2 2,2 2,1 1,1 1,0 z" Fill="{StaticResource HeaderButtonIconBackground_Normal}" Height="7" Margin="0 2 0 0" Width="4"/>
                        <Path x:Name="ForegroundIcon" Data="M0,0 L0,7 1,7 1,6 2,6 2,5 3,5 3,4 4,4 4,3 3,3 3,2 2,2 2,1 1,1 1,0 z" Fill="{StaticResource HeaderButtonIconForeground_Normal}" Height="7" Margin="0 1 0 1" Width="4"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <CornerRadius x:Key="CalendarHeaderInnerCornerRadius">0</CornerRadius>
    <CornerRadius x:Key="CalendarHeaderOuterCornerRadius">0</CornerRadius>
    <Style x:Key="RadCalendarDefaultStyleKey" TargetType="telerikInput:RadCalendar">
        <Setter Property="Columns" Value="1"/>
        <Setter Property="Rows" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource PickerForeground_Normal}"/>
        <Setter Property="MonthViewStyle" Value="{StaticResource MonthViewStyle}"/>
        <Setter Property="YearViewStyle" Value="{StaticResource CalendarViewStyle}"/>
        <Setter Property="DecadeViewStyle" Value="{StaticResource CalendarViewStyle}"/>
        <Setter Property="CenturyViewStyle" Value="{StaticResource CalendarViewStyle}"/>
        <Setter Property="DayButtonStyle" Value="{StaticResource CalendarButtonStyle}"/>
        <Setter Property="MonthButtonStyle" Value="{StaticResource CalendarButtonStyle}"/>
        <Setter Property="YearButtonStyle" Value="{StaticResource CalendarButtonStyle}"/>
        <Setter Property="DecadeButtonStyle" Value="{StaticResource CalendarButtonStyle}"/>
        <Setter Property="Background" Value="{StaticResource PanelBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource CalendarOuterBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="{StaticResource CalendarHeaderPadding}"/>
        <Setter Property="ViewsHeaderVisibility" Value="Collapsed"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikInput:RadCalendar">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border x:Name="Background" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.RowSpan="2"/>
                        <Telerik_Windows_Controls_Calendar:TransitionPanel x:Name="TransitionPanel" ClipToBounds="True" Margin="{StaticResource CalendarTransitionPanelMargin}" Grid.Row="1">
                            <Primitives:RadUniformGrid x:Name="MonthViews" Columns="{TemplateBinding Columns}" Margin="1 1 0 0" Rows="{TemplateBinding Rows}"/>
                            <Primitives:RadUniformGrid x:Name="YearViews" Columns="{TemplateBinding Columns}" Margin="1 1 0 0" Rows="{TemplateBinding Rows}" Visibility="Collapsed"/>
                            <Primitives:RadUniformGrid x:Name="DecadeViews" Columns="{TemplateBinding Columns}" Margin="1 1 0 0" Rows="{TemplateBinding Rows}" Visibility="Collapsed"/>
                            <Primitives:RadUniformGrid x:Name="CenturyViews" Columns="{TemplateBinding Columns}" Margin="1 1 0 0" Rows="{TemplateBinding Rows}" Visibility="Collapsed"/>
                        </Telerik_Windows_Controls_Calendar:TransitionPanel>
                        <Border x:Name="OuterBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{StaticResource CalendarOuterBorderCornerRadius}" Grid.RowSpan="2">
                            <Border x:Name="InnerBorder" BorderBrush="{StaticResource CalendarInnerBorder}" BorderThickness="1" CornerRadius="{StaticResource CalendarInnerBorderCornerRadius}"/>
                        </Border>
                        <Border x:Name="Navigation" BorderBrush="{StaticResource HeaderOuterBorder}" BorderThickness="{StaticResource CalendarHeaderBorderThickness}" Background="{StaticResource HeaderBackground}" CornerRadius="{StaticResource CalendarHeaderOuterCornerRadius}" Margin="0 0 0 -1" Visibility="{TemplateBinding HeaderVisibility}" Canvas.ZIndex="2">
                            <Border BorderBrush="{StaticResource HeaderInnerBorder}" BorderThickness="{StaticResource CalendarHeaderBorderThickness}" CornerRadius="{StaticResource CalendarHeaderInnerCornerRadius}" Padding="{TemplateBinding Padding}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <RepeatButton x:Name="MoveLeft" Grid.Column="0" Style="{StaticResource MoveLeftButtonStyle}"/>
                                    <Button x:Name="Header" Grid.Column="1" Style="{StaticResource CalendarHeaderButton}"/>
                                    <RepeatButton x:Name="MoveRight" Grid.Column="2" Style="{StaticResource MoveRightButtonStyle}"/>
                                </Grid>
                            </Border>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MonthViewPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Telerik_Windows_Controls_Calendar:CalendarPanel Columns="8" FirstColumn="1" PreserveSpaceForCollapsedChildren="True" Rows="7" VerticalAlignment="Stretch"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="YearViewPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Telerik_Windows_Controls_Calendar:CalendarPanel Columns="4" PreserveSpaceForCollapsedChildren="True" Rows="3" VerticalAlignment="Stretch"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="DecadeViewPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Telerik_Windows_Controls_Calendar:CalendarPanel Columns="4" PreserveSpaceForCollapsedChildren="True" Rows="3" VerticalAlignment="Stretch"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="CenturyViewPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Telerik_Windows_Controls_Calendar:CalendarPanel Columns="4" PreserveSpaceForCollapsedChildren="True" Rows="3" VerticalAlignment="Stretch"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <CornerRadius x:Key="ClockInnerBorderCornerRadius">0</CornerRadius>
    <CornerRadius x:Key="ClockOuterBorderCornerRadius">0</CornerRadius>
    <Thickness x:Key="ClockItemsMargin">1 0 1 1</Thickness>
    <Style x:Key="RadClockDefaultStyleKey" TargetType="telerikInput:RadClock">
        <Setter Property="Header" Value="Clock"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="{StaticResource PanelBorderBrush}"/>
        <Setter Property="Background" Value="{StaticResource ClockBackground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="{StaticResource CalendarHeaderPadding}"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="StartTime" Value="0:0:0"/>
        <Setter Property="EndTime" Value="23:59:0"/>
        <Setter Property="TimeInterval" Value="1:0:0"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Primitives:RadUniformGrid x:Name="uniformGrid" Columns="4"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock x:Name="ContentText" HorizontalAlignment="Center" TextAlignment="Center" Text="{Binding}" VerticalAlignment="Center"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikInput:RadClock">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border x:Name="BackgroundVisual" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{StaticResource ClockOuterBorderCornerRadius}" Grid.RowSpan="2">
                            <Border BorderBrush="{StaticResource ClockInnerBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{StaticResource ClockInnerBorderCornerRadius}"/>
                        </Border>
                        <Border x:Name="Header" BorderBrush="{StaticResource HeaderOuterBorder}" BorderThickness="{StaticResource CalendarHeaderBorderThickness}" Background="{StaticResource HeaderBackground}" CornerRadius="{StaticResource CalendarHeaderOuterCornerRadius}" MinHeight="32">
                            <Border BorderBrush="{StaticResource HeaderInnerBorder}" BorderThickness="{StaticResource CalendarHeaderBorderThickness}" CornerRadius="{StaticResource CalendarHeaderInnerCornerRadius}" Padding="{TemplateBinding Padding}">
                                <ContentControl ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Foreground="{StaticResource HeaderTextForeground}" FontWeight="{StaticResource HeaderTextFontWeight}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsTabStop="False" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </Border>
                        <ItemsPresenter Margin="{StaticResource ClockItemsMargin}" Grid.Row="1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Thickness x:Key="Tooltip_OuterBorderThickness">1</Thickness>
    <DataTemplate x:Key="TooltipTemplate">
        <Border BorderBrush="{StaticResource Tooltip_OuterBorderBrush}" BorderThickness="{StaticResource Tooltip_OuterBorderThickness}" Background="{StaticResource TooltipBackground}" CornerRadius="2" Margin="0 2">
            <Border BorderBrush="{StaticResource TooltipInnerBorderBrush}" BorderThickness="{StaticResource Tooltip_OuterBorderThickness}" CornerRadius="1">
                <ContentControl Content="{Binding}" Foreground="{StaticResource TooltipForeground}" Margin="5 2"/>
            </Border>
        </Border>
    </DataTemplate>
    <DataTemplate x:Key="WatermarkTemplate">
        <Grid Margin="1" VerticalAlignment="Center">
            <TextBlock FontStyle="Italic" Opacity="0.5" Text="{Binding}"/>
        </Grid>
    </DataTemplate>
    <ControlTemplate x:Key="CalendarIcon" TargetType="ContentControl">
        <Grid>
            <Path x:Name="CalendarIconBackground" Data="M0,0.5 L7,0.5 M0,2.5 L7,2.5 M0,4.5 L7,4.5 M0,6.5 L7,6.5 M0.5,0 L0.5,7 M2.5,0 L2.5,7 M4.5,0 L4.5,7 M6.5,0 L6.5,7" Height="7" Margin="0 1 0 0" Stroke="{TemplateBinding Background}" Width="7"/>
            <Path x:Name="CalendarIconForeground" Data="M0,0.5 L7,0.5 M0,2.5 L7,2.5 M0,4.5 L7,4.5 M0,6.5 L7,6.5 M0.5,0 L0.5,7 M2.5,0 L2.5,7 M4.5,0 L4.5,7 M6.5,0 L6.5,7" Height="7" Margin="0 0 0 1" Stroke="{TemplateBinding Foreground}" Width="7"/>
        </Grid>
    </ControlTemplate>
    <Style x:Key="FormRadDateTimePickerStyle" TargetType="telerikInput:RadDateTimePicker">
        <Setter Property="TabNavigation" Value="Once"/>
        <Setter Property="CalendarStyle" Value="{StaticResource RadCalendarDefaultStyleKey}"/>
        <Setter Property="ClockStyle" Value="{StaticResource RadClockDefaultStyleKey}"/>
        <Setter Property="TooltipTemplate" Value="{StaticResource TooltipTemplate}"/>
        <Setter Property="Background" Value="{StaticResource PickerBackground_Normal}"/>
        <Setter Property="Foreground" Value="{StaticResource PickerForeground_Normal}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ControlOuterBorder_Normal}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontStyle" Value="Normal"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="MinHeight" Value="22"/>
        <Setter Property="Padding" Value="4 2"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="DateTimeWatermarkTemplate" Value="{StaticResource WatermarkTemplate}"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikInput:RadDateTimePicker">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverVisual">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.150" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="MouseOverVisual">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.150">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverVisual">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.115" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="MouseOverVisual">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="RenderActive" Storyboard.TargetName="ButtonChrome">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="DropDownIcon">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconForeground_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="DropDownIcon">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconBackground_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="BackgroundVisual">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource ControlOuterBorder_Disabled}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverVisual">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.050" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="MouseOverVisual">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.050">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="PART_DateTimeInput">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource PickerForeground_Disabled}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="DropDownIcon">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconForeground_Disabled}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="DropDownIcon">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconBackground_Disabled}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="RenderFocused" Storyboard.TargetName="ButtonChrome">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="InputTypeStates">
                                <VisualState x:Name="DateTimePicker"/>
                                <VisualState x:Name="DatePicker">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_Clock">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="TimePicker">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_Calendar">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="ValidationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.1">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="BackgroundVisual" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" CornerRadius="{StaticResource SplitButton_SpanCornerRadius}"/>
                        <Border x:Name="MouseOverVisual" BorderBrush="{StaticResource ControlOuterBorder_MouseOver}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" CornerRadius="{StaticResource SplitButton_SpanCornerRadius}" IsHitTestVisible="False" Opacity="0" Visibility="Collapsed"/>
                        <telerik:RadWatermarkTextBox x:Name="PART_DateTimeInput" BorderBrush="{x:Null}" BorderThickness="0" Background="{x:Null}" Grid.Column="0" CurrentText="{Binding CurrentDateTimeText, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{TemplateBinding IsReadOnly}" Margin="{TemplateBinding BorderThickness}" MinHeight="0" Padding="{TemplateBinding Padding}" SelectionOnFocus="SelectAll" TextAlignment="{TemplateBinding TextAlignment}" Text="{Binding DateTimeText, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" telerik:StyleManager.Theme="{StaticResource Theme}" TabIndex="0" VerticalAlignment="Stretch" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" WatermarkTemplate="{TemplateBinding DateTimeWatermarkTemplate}" WatermarkContent="{TemplateBinding DateTimeWatermarkContent}"/>
                        <Border x:Name="FocusVisual" BorderBrush="{StaticResource ControlOuterBorder_Focused}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" CornerRadius="{StaticResource SplitButton_SpanCornerRadius}" IsHitTestVisible="False" Visibility="Collapsed">
                            <Border BorderBrush="{StaticResource ControlInnerBorder_Focused}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{StaticResource SplitButton_SpanInnerCornerRadius}"/>
                        </Border>
                        <telerik:RadDropDownButton x:Name="PART_DropDownButton" CloseOnEnter="True" Grid.Column="1" DropDownIndicatorVisibility="Collapsed" telerikInput:DateTimePickerExtensions.FocusContentOnOpen="True" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" IsTabStop="False" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="-1 0 0 0" Padding="0" PopupPlacementTarget="{Binding ElementName=PART_DateTimeInput}" telerik:StyleManager.Theme="{StaticResource Theme}" TabIndex="1" VerticalAlignment="Stretch" VerticalContentAlignment="Stretch">
                            <telerik:RadDropDownButton.DropDownContent>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <telerikInput:RadCalendar x:Name="PART_Calendar" Culture="{TemplateBinding Culture}" Grid.Column="0" DisplayDateEnd="{Binding DisplayDateEnd, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" DateSelectionMode="{TemplateBinding DateSelectionMode}" DisplayDateStart="{Binding DisplayDateStart, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" DisplayDate="{Binding DisplayDate, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsReadOnly="{TemplateBinding IsReadOnly}" Style="{TemplateBinding CalendarStyle}" SelectableDateEnd="{Binding SelectableDateEnd, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" SelectionMode="Single" SelectedDate="{Binding SelectedDate, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" SelectableDateStart="{Binding SelectableDateStart, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    <telerikInput:DateTimePickerClock x:Name="PART_Clock" Culture="{TemplateBinding Culture}" Grid.Column="1" EndTime="{TemplateBinding EndTime}" IsReadOnly="{TemplateBinding IsReadOnly}" ItemsSource="{TemplateBinding ClockItemsSource}" Style="{TemplateBinding ClockStyle}" SelectedTime="{Binding SelectedTime, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" StartTime="{TemplateBinding StartTime}" TimeInterval="{Binding TimeInterval, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Grid>
                            </telerik:RadDropDownButton.DropDownContent>
                            <telerik:RadDropDownButton.Template>
                                <ControlTemplate TargetType="telerik:RadDropDownButton">
                                    <Grid>
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        <Primitives:Popup x:Name="DropDownPopup">
                                            <ContentPresenter x:Name="DropDownPopupContent" ContentTemplate="{TemplateBinding DropDownContentTemplate}" Content="{TemplateBinding DropDownContent}" DataContext="{Binding DataContext, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </Primitives:Popup>
                                    </Grid>
                                </ControlTemplate>
                            </telerik:RadDropDownButton.Template>
                            <Grid>
                                <Telerik_Windows_Controls_Chromes:ButtonChrome x:Name="ButtonChrome" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{StaticResource SplitButton_RightPartCornerRadius}" RenderMouseOver="{Binding IsMouseOver, ElementName=PART_DropDownButton}" RenderEnabled="{TemplateBinding IsEnabled}" telerik:StyleManager.Theme="{StaticResource Theme}"/>
                                <ContentControl x:Name="DropDownIcon" Background="{StaticResource ButtonIconBackground_Normal}" Foreground="{StaticResource ButtonIconForeground_Normal}" IsTabStop="False" Margin="4 0" Template="{StaticResource CalendarIcon}"/>
                            </Grid>
                        </telerik:RadDropDownButton>
                        <Telerik_Windows_Controls_Chromes:ValidationTooltip x:Name="ValidationTooltip" Grid.ColumnSpan="2" TooltipPlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" telerik:StyleManager.Theme="{StaticResource Theme}" TooltipContent="{Binding (Validation.Errors), RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed"/>
                        <Primitives:Popup IsOpen="{Binding IsTooltipOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Owner="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Top" PlacementTarget="{Binding ElementName=PART_DateTimeInput}">
                            <ContentPresenter ContentTemplate="{TemplateBinding TooltipTemplate}" Content="{TemplateBinding TooltipContent}"/>
                        </Primitives:Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="StatusButtonStyle" TargetType="Button">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFFBE715" Offset="0.597"/>
                    <GradientStop Color="#FFF9F008" Offset="0.221"/>
                    <GradientStop Color="#FFF7AE0E" Offset="0.406"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Width="14" Height="14">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="12">
                            <Grid Margin="1">
                                <Border x:Name="BackgroundAnimation" Opacity="0"/>
                                <Rectangle x:Name="BackgroundGradient"/>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <Rectangle x:Name="DisabledVisualElement" Fill="#FFFFFFFF" IsHitTestVisible="false" Opacity="0" RadiusY="3" RadiusX="3"/>
                        <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Margin="1,1,1,0" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1" Height="26" VerticalAlignment="Top">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="Black" Offset="0"/>
                                    <GradientStop Color="White" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SidePanelHeaderBorderStyle" TargetType="Border">
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Background" Value="{StaticResource TileHeaderGradientBackground}"/>
        <Setter Property="BorderBrush" Value="#FF707070"/>
    </Style>

    <Style x:Key="MainHeaderBorder" TargetType="Border">
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Background" Value="{StaticResource TileHeaderGradientBackground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="3,3,0,0" />
        <Setter Property="BorderBrush" Value="#FF252525"/>
    </Style>

    <Style x:Key="TestTextBoxStyle" TargetType="TextBox">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid x:Name="RootElement">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="#FF99C1E2" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="MouseOverBorder"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ReadOnlyVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="FocusVisualElement">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FFFFFEFE"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" Opacity="1"/>
                        <Border x:Name="DisabledVisualElement" BorderBrush="#A5F7F7F7" BorderThickness="{TemplateBinding BorderThickness}" Background="#A5F7F7F7" IsHitTestVisible="False" Opacity="0"/>
                        <Border x:Name="FocusVisualElement" BorderBrush="#FF6DBDD1" BorderThickness="{TemplateBinding BorderThickness}" IsHitTestVisible="False" Margin="1" Opacity="0" Background="Black"/>
                        <Grid Margin="1">
                            <Border x:Name="ReadOnlyVisualElement" Background="#5EC9C9C9" Opacity="0"/>
                            <Border x:Name="MouseOverBorder" BorderBrush="Transparent" BorderThickness="1">
                                <ScrollViewer x:Name="ContentElement" BorderThickness="0" IsTabStop="False" Padding="{TemplateBinding Padding}"/>
                            </Border>
                        </Grid>
                        <Border x:Name="ValidationErrorElement" BorderBrush="#FFDB000C" BorderThickness="1" CornerRadius="1" Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                                    <ToolTip.Triggers>
                                        <EventTrigger RoutedEvent="Canvas.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <System:Boolean>true</System:Boolean>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </ToolTip.Triggers>
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
                                <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="#FFDC000C" Margin="1,3,0,0"/>
                                <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="#ffffff" Margin="1,3,0,0"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="DetailButtonStyle" TargetType="RadioButton">
        <Setter Property="Background" Value="#FF1F3B53"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Height" Value="18"/>
        <Setter Property="Width" Value="8"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid Margin="0,2">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.3" To="Normal"/>
                                    <VisualTransition From="Normal" GeneratedDuration="0" To="MouseOver"/>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0" To="Pressed"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">




                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundAnimation_Copy" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">

                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>


                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" To="Checked"/>
                                    <VisualTransition From="Checked" To="Unchecked"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundAnimation_Checked" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundAnimation_Copy" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundAnimation" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused"/>
                                <VisualState x:Name="InvalidUnfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background" CornerRadius="3" BorderThickness="1" Background="Black" Width="7" HorizontalAlignment="Center">
                            <Grid Margin="1" Width="3">
                                <Border x:Name="BackgroundAnimation" Background="Cyan" CornerRadius="1.5" Width="3" Opacity="0"/>
                                <Rectangle x:Name="BackgroundGradient" Visibility="Collapsed"/>
                                <Border x:Name="BackgroundAnimation_Copy" Background="Gray" CornerRadius="1.5" Width="3"/>
                                <Border x:Name="BackgroundAnimation_Checked" Background="Cyan" CornerRadius="1.5" Width="3" Opacity="0"/>
                            </Grid>
                        </Border>
                        <Rectangle x:Name="DisabledVisualElement" Fill="#FFFFFFFF" IsHitTestVisible="false" Opacity="0" RadiusY="3" RadiusX="3" Margin="1"/>
                        <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Margin="0" Opacity="0" Stroke="#FF6DBDD1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="ExpandToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Background" Value="#FF1F3B53"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Width="20" Height="20" Margin="2,0,0,0">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked"/>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="90" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)" Storyboard.TargetName="path" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background" Width="20" Height="20">
                            <Grid Width="20" Height="20">
                                <Border x:Name="BackgroundAnimation"/>
                                <Rectangle x:Name="BackgroundGradient"/>
                                <Canvas Width="20" Height="20" RenderTransformOrigin="0.5,0.5">
                                    <Canvas.RenderTransform>
                                        <CompositeTransform Rotation="-90"/>
                                    </Canvas.RenderTransform>
                                    <Path x:Name="path" Data="M1.6666666,3.3333333 L17.833,3.3333333 L9.833168,15.167 z" Fill="#FF24556B" Height="10" Stretch="Fill" Canvas.Top="5.374" UseLayoutRounding="False" Width="14" Canvas.Left="3.125" RenderTransformOrigin="0.5,0.5">
                                        <Path.Effect>
                                            <DropShadowEffect Color="White" Direction="272" BlurRadius="0" ShadowDepth="2"/>
                                        </Path.Effect>
                                        <Path.RenderTransform>
                                            <CompositeTransform/>
                                        </Path.RenderTransform>
                                    </Path>
                                </Canvas>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <Rectangle x:Name="DisabledVisualElement" IsHitTestVisible="false" Opacity="0" RadiusY="3" RadiusX="3"/>
                        <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Margin="1" Opacity="0" RadiusY="2" RadiusX="2" StrokeThickness="1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="WorkSpaceRibbon_ToggleButton_Style"  BasedOn="{StaticResource RadToggleButtonRemStyle}" TargetType="telerik:RadToggleButton">
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Background" Value="{StaticResource WorkPadHeaderControl_Background_Normal}"/>
        <Setter Property="BorderBrush" Value="{StaticResource WorkPadHeaderControl_OuterBorder_Normal}"/>
    </Style>


    <Style x:Key="ActivityItemTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontSize" Value="10.667"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="2,0,0,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>



    <Style x:Key="ScheduleHeaderCalendarButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="#FF1F3B53"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Height="26" Width="26">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Normal" GeneratedDuration="0:0:0.2" To="MouseOver">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CircleEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.2" To="Normal">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CircleEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                        <Storyboard/>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background_Copy" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>


                        <Border Grid.Column="0" BorderThickness="0" CornerRadius="3" Margin="0">
                            <Border.Background>

                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF343535"/>
                                    <GradientStop Color="White" Offset="1"/>
                                    <GradientStop Color="#FF5A5A5A" Offset="0.866"/>
                                </LinearGradientBrush>

                            </Border.Background>
                        </Border>
                        <Border x:Name="Background" CornerRadius="3" Margin="1">
                            <Border.Background>

                                <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                                    <GradientStop Color="#FF939598" Offset="1"/>
                                    <GradientStop Color="#FF848484" Offset="0.507"/>
                                    <GradientStop Color="#FF636365"/>
                                </LinearGradientBrush>

                            </Border.Background>
                        </Border>
                        <Border x:Name="Background_Copy" Background="{StaticResource QuickSearchButtonMouseOverBackground}" CornerRadius="3" Height="30" Width="26" Margin="1" Opacity="0" d:IsHidden="True"/>
                        <ContentPresenter x:Name="contentPresenter"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsEnabled" Value="True"/>
        <Setter Property="Margin" Value="4,0"/>
    </Style>





    <Style x:Key="ScheduleHeaderDatePickerStyle" TargetType="telerikInput:RadDateTimePicker">
        <Setter Property="TabNavigation" Value="Once"/>
        <Setter Property="TooltipTemplate" Value="{StaticResource TooltipTemplate}"/>
        <Setter Property="Background" Value="{StaticResource PickerBackground_Normal}"/>
        <Setter Property="Foreground" Value="{StaticResource PickerForeground_Normal}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ControlOuterBorder_Normal}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontStyle" Value="Normal"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="MinHeight" Value="22"/>
        <Setter Property="Padding" Value="4 2"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="DateTimeWatermarkTemplate" Value="{StaticResource WatermarkTemplate}"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikInput:RadDateTimePicker">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Normal" GeneratedDuration="0:0:0.2" To="MouseOver">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CircleEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.2" To="Normal">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CircleEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                        <Storyboard/>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DropDownIcon" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background_Copy" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="InputTypeStates">
                                <VisualState x:Name="DateTimePicker"/>
                                <VisualState x:Name="DatePicker">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_Clock">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="TimePicker">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_Calendar">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="ValidationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.1">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <TextBlock x:Name="PART_DateTimeInput" Text="{Binding SelectedValue, RelativeSource={RelativeSource TemplatedParent}, StringFormat=\{0:MMMM\ d\, yyyy\}}" Style="{StaticResource MainHeaderTextBlockStyle}" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="8,0"/>
                        <telerik:RadDropDownButton x:Name="PART_DropDownButton" CloseOnEnter="True" Grid.Column="0" DropDownIndicatorVisibility="Collapsed" telerikInput:DateTimePickerExtensions.FocusContentOnOpen="True" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" IsTabStop="False" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="-1 0 0 0" Padding="0" PopupPlacementTarget="{Binding ElementName=PART_DropDownButton}" telerik:StyleManager.Theme="{StaticResource Theme}" TabIndex="1" VerticalAlignment="Stretch" VerticalContentAlignment="Stretch">
                            <telerik:RadDropDownButton.DropDownContent>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <telerikInput:RadCalendar x:Name="PART_Calendar" Culture="{TemplateBinding Culture}" Grid.Column="0" DisplayDateEnd="{Binding DisplayDateEnd, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" DateSelectionMode="{TemplateBinding DateSelectionMode}" DisplayDateStart="{Binding DisplayDateStart, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" DisplayDate="{Binding DisplayDate, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsReadOnly="{TemplateBinding IsReadOnly}" Style="{TemplateBinding CalendarStyle}" SelectableDateEnd="{Binding SelectableDateEnd, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" SelectionMode="Single" SelectedDate="{Binding SelectedDate, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" SelectableDateStart="{Binding SelectableDateStart, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    <telerikInput:DateTimePickerClock x:Name="PART_Clock" Culture="{TemplateBinding Culture}" Grid.Column="1" EndTime="{TemplateBinding EndTime}" IsReadOnly="{TemplateBinding IsReadOnly}" ItemsSource="{TemplateBinding ClockItemsSource}" Style="{TemplateBinding ClockStyle}" SelectedTime="{Binding SelectedTime, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" StartTime="{TemplateBinding StartTime}" TimeInterval="{Binding TimeInterval, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Grid>
                            </telerik:RadDropDownButton.DropDownContent>
                            <telerik:RadDropDownButton.Template>
                                <ControlTemplate TargetType="telerik:RadDropDownButton">
                                    <Grid>
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        <Primitives:Popup x:Name="DropDownPopup">
                                            <ContentPresenter x:Name="DropDownPopupContent" ContentTemplate="{TemplateBinding DropDownContentTemplate}" Content="{TemplateBinding DropDownContent}" DataContext="{Binding DataContext, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </Primitives:Popup>
                                    </Grid>
                                </ControlTemplate>
                            </telerik:RadDropDownButton.Template>
                            <Grid Height="26" Width="26">
                                <Border Grid.Column="0" BorderThickness="0" CornerRadius="3" Margin="0"/>
                                <Border x:Name="Background" Background="{StaticResource REMControl_Background_Normal}" CornerRadius="3" Margin="1" BorderThickness="1" BorderBrush="Black"/>
                                <Border x:Name="Background_Copy" Background="{StaticResource REMControl_Background_MouseOver}" CornerRadius="3" BorderThickness="1" BorderBrush="{StaticResource REMControl_OuterBorder_Focused}" Margin="1" Opacity="0" d:IsHidden="True"/>
                                <ContentControl x:Name="DropDownIcon" Background="{StaticResource ButtonIconBackground_Normal}" Foreground="{StaticResource ButtonIconForeground_Normal}" IsTabStop="False" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,2">
                                    <ContentPresenter>

                                        <Path Stretch="Fill" Fill="#FFFFFFFF" Data="F1 M 19.4493,14.1893L 19.4493,9.48934L 13.616,9.48934L 13.616,14.1893L 19.4493,14.1893 Z M 19.4493,18.4533L 19.4493,15.112L 13.616,15.112L 13.616,20.1413L 17.6053,20.1413C 18.624,20.1413 19.4493,19.384 19.4493,18.4533 Z M 12.6947,14.1893L 12.6947,9.488L 11.2187,9.488L 8.64933,9.488L 7.17333,9.488L 7.17333,14.1893L 8.64933,14.1893L 11.2187,14.1893L 12.6947,14.1893 Z M 12.6947,20.1413L 12.6947,15.112L 11.2187,15.112L 8.64933,15.112L 7.17333,15.112L 7.17333,20.1413L 8.64933,20.1413L 11.2187,20.1413L 12.6947,20.1413 Z M 6.25333,14.1893L 6.25333,9.48934L 0.421332,9.48934L 0.421332,14.1893L 6.25333,14.1893 Z M 6.25333,20.1413L 6.25333,15.112L 0.421332,15.112L 0.421332,18.4533C 0.421332,19.384 1.24533,20.1413 2.26133,20.1413L 6.25333,20.1413 Z M 18.0253,3.25334C 19.0427,3.25334 19.868,4.00934 19.868,4.94134L 19.868,19.6453C 19.868,20.5773 19.0427,21.3333 18.0253,21.3333L 11.2187,21.3333L 8.64933,21.3333L 1.84267,21.3333C 0.825332,21.3333 -1.27157e-006,20.5773 -1.27157e-006,19.6453L -1.27157e-006,4.94134C -1.27157e-006,4.00934 0.825332,3.25334 1.84267,3.25334L 4.80266,3.25334L 4.80266,4.208C 4.37866,4.54134 4.10133,5.05467 4.10133,5.636C 4.10133,6.64267 4.916,7.45867 5.92266,7.45867C 6.92933,7.45867 7.74666,6.64267 7.74666,5.636C 7.74666,5.05467 7.468,4.54134 7.04666,4.208L 7.04666,3.25334L 8.64933,3.25334L 11.2187,3.25334L 12.8213,3.25334L 12.8213,4.208C 12.4,4.54134 12.1213,5.05467 12.1213,5.636C 12.1213,6.64267 12.9387,7.45867 13.944,7.45867C 14.952,7.45867 15.7667,6.64267 15.7667,5.636C 15.7667,5.05467 15.4907,4.54134 15.0653,4.208L 15.0653,3.25334L 18.0253,3.25334 Z M 6.32666,0.524002L 6.32666,5.7L 5.488,5.7L 5.488,0.524002L 6.32666,0.524002 Z M 14.2933,0.524002L 14.2933,5.7L 13.4533,5.7L 13.4533,0.524002L 14.2933,0.524002 Z " Height="16.751" Canvas.Top="0" UseLayoutRounding="False" Width="15.995" Canvas.Left="4.8"/>

                                    </ContentPresenter>
                                </ContentControl>
                            </Grid>
                        </telerik:RadDropDownButton>
                        <Telerik_Windows_Controls_Chromes:ValidationTooltip x:Name="ValidationTooltip" Grid.ColumnSpan="2" TooltipPlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" telerik:StyleManager.Theme="{StaticResource Theme}" TooltipContent="{Binding (Validation.Errors), RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed"/>
                        <Primitives:Popup IsOpen="{Binding IsTooltipOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Owner="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Top" PlacementTarget="{Binding ElementName=PART_DateTimeInput}">
                            <ContentPresenter ContentTemplate="{TemplateBinding TooltipTemplate}" Content="{TemplateBinding TooltipContent}"/>
                        </Primitives:Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>





    <Style x:Key="BaseStandardButtonStyle_SingleRoundedSide" TargetType="Button">
        <Setter Property="Background" Value="#FF1F3B53"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Height="18" Width="18">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Normal" GeneratedDuration="0:0:0.2" To="MouseOver">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CircleEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.2" To="Normal">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CircleEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                        <Storyboard/>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background_Copy" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background" Margin="0" CornerRadius="8,0,0,8" BorderThickness="1" BorderBrush="Black">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                                    <GradientStop Color="#FF9EA0A2" Offset="0.966"/>
                                    <GradientStop Color="#FF484749" Offset="0.203"/>
                                    <GradientStop Color="#FF414042"/>
                                    <GradientStop Color="#FFE2E2E2" Offset="0.966"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border x:Name="Background_Copy" Background="{StaticResource BaseStandardButton_Background_MouseOver}" CornerRadius="8,0,0,8" BorderThickness="1" BorderBrush="{StaticResource ControlOuterBorder_MouseOver}" Opacity="0"/>
                        <ContentPresenter x:Name="contentPresenter" OpacityMask="White"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsEnabled" Value="True"/>
        <Setter Property="Margin" Value="4,0"/>
    </Style>
    <Style x:Key="VisitStatusComboBoxStyle" TargetType="ComboBox">
    	<Setter Property="Background" Value="{StaticResource VisitStatusNewAppointmentBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                		<VisualStateManager.VisualStateGroups>
                			<VisualStateGroup x:Name="CommonStates">
                				<VisualState x:Name="Normal"/>
                				<VisualState x:Name="MouseOver"/>
                				<VisualState x:Name="Disabled"/>
                			</VisualStateGroup>
                			<VisualStateGroup x:Name="FocusStates">
                				<VisualState x:Name="Unfocused"/>
                				<VisualState x:Name="Focused"/>
                				<VisualState x:Name="FocusedDropDown"/>
                			</VisualStateGroup>
                		</VisualStateManager.VisualStateGroups>
                		<Border x:Name="ContentPresenterBorder">
                			<Grid>
                				<ToggleButton x:Name="DropDownToggle" Background="{TemplateBinding Background}">
                					<ToggleButton.Template>
                						<ControlTemplate>
                							<Ellipse Fill="{TemplateBinding Background}" Height="15" Width="15" Stroke="Black" />
                						</ControlTemplate>
                					</ToggleButton.Template>
                				</ToggleButton>
                			</Grid>
                		</Border>
                		<Popup x:Name="Popup" HorizontalOffset="-15">
                			<Border x:Name="PopupBorder" HorizontalAlignment="Stretch" Height="Auto" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                				<Border.Background>
                					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                						<GradientStop Color="#FFFFFFFF" Offset="0"/>
                						<GradientStop Color="#FFFEFEFE" Offset="1"/>
                					</LinearGradientBrush>
                				</Border.Background>
                				<ScrollViewer x:Name="ScrollViewer" BorderThickness="0" Padding="1">
                					<ItemsPresenter/>
                				</ScrollViewer>
                			</Border>
                		</Popup>
                	</Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Ellipse Grid.Column="0" Fill="{Binding Converter={StaticResource VisitStatusToBrushConvert}}"  Stroke="Black"  Height="10" Width="10" Margin="3"/>
                        <TextBlock Grid.Column="1" Text="{Binding}"/>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TileVisitStatusComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Foreground" Value="{StaticResource BorderlessButtonForeground}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Width" Value="auto"/>
        <Setter Property="BorderThickness" Value=".5"/>
        <Setter Property="Padding" Value="4 2"/>
        <Setter Property="Margin" Value="6 2"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(ButtonChrome.RenderMouseOver)" Storyboard.TargetName="buttonChrome">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(ButtonChrome.RenderMouseOver)" Storyboard.TargetName="buttonChrome">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="FocusedDropDown">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(ButtonChrome.RenderPressed)" Storyboard.TargetName="buttonChrome">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="Text" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" Storyboard.TargetName="BtnArrow" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" Storyboard.TargetName="Text" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid Width="100" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>


                            <Telerik_Windows_Controls_Chromes:ButtonChrome x:Name="buttonChrome" 
                			Grid.Column="0" Grid.ColumnSpan="2"
                			Style="{StaticResource BorderlessButtonBaseStyle}"
                			Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
                			BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                			BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}"
                			RenderEnabled="{TemplateBinding IsEnabled}"
                			RenderNormal="{TemplateBinding telerik:RadToggleButton.IsBackgroundVisible}"
                			RenderFocused="{TemplateBinding ButtonBase.IsFocused}"
                			CornerRadius="3" Padding="0" Height="24" />

                            <StackPanel Orientation="Horizontal"  Margin="8 0" Grid.Column="0"  >
                                <Ellipse Fill="{TemplateBinding Background}" Height="12" Width="12" Stroke="Black" StrokeThickness="0.5" />
                                <TextBlock x:Name="Text" Style="{StaticResource TileReadOnlyTextBlockStyle}" Text="{Binding Visit.VisitStatus.Name}" Margin="4 0 0 0" Foreground="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Foreground,Mode=TwoWay}">
                				<TextBlock.Effect>
                					<DropShadowEffect Color="White" ShadowDepth="1" BlurRadius="0" Direction="323"/>        				
								</TextBlock.Effect>
                                </TextBlock>
                            </StackPanel>

                            <Path x:Name="BtnArrow" Grid.Column="2" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z " HorizontalAlignment="Right" Height="4" Margin="0,0,6,0" Stretch="Uniform" Width="8" Fill="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Foreground,Mode=TwoWay}">
                                <Path.Effect>
                                    <DropShadowEffect Color="White" ShadowDepth="1" BlurRadius="0" Direction="289"/>
                                </Path.Effect>
                            </Path>
                        </Grid>
                        <Primitives:Popup CloseOnOutsideClick="True" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Owner="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                            <Grid x:Name="PopupBorder">
                                <Telerik_Windows_Controls_Chromes:ShadowChrome telerik:StyleManager.Theme="{StaticResource Theme}"/>
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource PickerPopupBackground}" CornerRadius="{StaticResource SplitButton_SpanCornerRadius}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <ScrollViewer x:Name="PART_ScrollViewer" BorderThickness="0" telerik:ScrollViewerExtensions.EnableMouseWheel="True" Padding="1 1 1 0" Grid.Row="1" telerik:StyleManager.Theme="{StaticResource Theme}" VerticalScrollBarVisibility="Auto">
                                            <Grid Width="100">
                                                <ItemsPresenter />
                                            </Grid>
                                        </ScrollViewer>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Primitives:Popup>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid Margin="4 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Ellipse Grid.Column="0" Fill="{Binding Converter={StaticResource VisitStatusToBrushConvert}}" VerticalAlignment="Center" HorizontalAlignment="Center" Stroke="Black"  Height="10" Width="10" Margin="4 0 4 0"/>
                        <TextBlock Grid.Column="1" Text="{Binding}"  HorizontalAlignment="Left" Margin="0 2 0 0"/>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>


        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ComboBoxItem">
                    <Setter Property="Background" Value="{StaticResource REMControl_Background_Normal}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="BorderBrush" Value="{StaticResource REMControl_OuterBorder_Normal}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ComboBoxItem">
                                <Grid>

                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStatesGroup">
                                            <VisualStateGroup.Transitions>
                                                <VisualTransition From="MouseOver" GeneratedDuration="0" To="None"/>
                                                <VisualTransition From="Active" GeneratedDuration="00:00:00.150" To="None"/>
                                                <VisualTransition From="Normal" GeneratedDuration="0" To="MouseOver"/>
                                                <VisualTransition From="MouseOver" GeneratedDuration="0" To="Normal"/>
                                                <VisualTransition From="MouseOver" GeneratedDuration="0" To="Pressed"/>
                                                <VisualTransition From="Normal" GeneratedDuration="0" To="Checked"/>
                                                <VisualTransition From="None" GeneratedDuration="0" To="Checked"/>
                                                <VisualTransition From="MouseOver" GeneratedDuration="0" To="Checked"/>
                                                <VisualTransition From="Pressed" GeneratedDuration="0" To="Checked"/>
                                                <VisualTransition From="Checked" GeneratedDuration="0:0:0.3" To="Normal"/>
                                            </VisualStateGroup.Transitions>
                                            <VisualState x:Name="None">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity">
                                                        <LinearDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="Active">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background6" d:IsOptimized="True"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Highlighted"/>
                                            <VisualState x:Name="Selected">

                                            </VisualState>
                                            <VisualState x:Name="Checked">

                                            </VisualState>
                                            <VisualState x:Name="DisabledChecked"/>
                                            <VisualState x:Name="MouseOverChecked">

                                            </VisualState>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity">
                                                        <DiscreteDoubleKeyFrame KeyTime="00:00:00.115" Value="0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background2" d:IsOptimized="True"/>
                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InnerBorder2" d:IsOptimized="True"/>

                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity">
                                                        <DiscreteDoubleKeyFrame KeyTime="00:00:00.050" Value="0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background3" d:IsOptimized="True"/>
                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InnerBorder3" d:IsOptimized="True"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled">

                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To="0.97" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InnerBorderDisabled" d:IsOptimized="True"/>
                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundDisabled" d:IsOptimized="True"/>

                                                </Storyboard>

                                            </VisualState>
                                            <VisualState x:Name="NoneVertical"/>
                                            <VisualState x:Name="NormalVertical"/>
                                            <VisualState x:Name="MouseOverVertical">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity">
                                                        <DiscreteDoubleKeyFrame KeyTime="00:00:00.115" Value="0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="PressedVertical">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity">
                                                        <DiscreteDoubleKeyFrame KeyTime="00:00:00.050" Value="0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="DisabledVertical"/>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="FocusStatesGroup">
                                            <VisualState x:Name="Unfocused">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="00:00:00.150">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <Visibility>Collapsed</Visibility>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity">
                                                        <LinearDoubleKeyFrame KeyTime="00:00:00.150" Value="0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Focused">

                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>


                                    <Border x:Name="Background" BorderThickness="{TemplateBinding BorderThickness}" Opacity="0">
                                        <Border.BorderBrush>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FF1B1B1B" Offset="0.639"/>
                                                <GradientStop Color="#FFCACACA"/>
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                    </Border>
                                    <Border x:Name="InnerBorder" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_InnerBorder_Normal}"  CornerRadius="{Binding CornerRadius}" Margin="1" Opacity="0"/>
                                    <Border x:Name="Background2" Background="{StaticResource REMControl_Background_MouseOver}" BorderThickness="0" CornerRadius="{Binding CornerRadius}" BorderBrush="{StaticResource CloseButtonGrayOuterBorderBrush}" Opacity="0"/>
                                    <Border x:Name="InnerBorder2" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_OuterBorder_MouseOver}" CornerRadius="{Binding CornerRadius}" Margin="1" Opacity="0"/>
                                    <Border x:Name="Background3" Background="{StaticResource CloseButtonGrayBackgroundBrushPressed}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource CloseButtonGrayBackgroundBrushPressed}" CornerRadius="{Binding CornerRadius}" Opacity="0"/>
                                    <Border x:Name="InnerBorder3" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{x:Null}"  CornerRadius="{Binding CornerRadius}" Margin="1" Opacity="0"/>
                                    <Border x:Name="Background4" Background="{StaticResource REMControl_Background_Checked}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_OuterBorder_Checked}" CornerRadius="{Binding CornerRadius}" Opacity="0"/>
                                    <Border x:Name="InnerBorder4" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_InnerBorder_Checked}"  CornerRadius="{Binding CornerRadius}" Margin="1" Opacity="0"/>
                                    <Border x:Name="Background5" Background="{StaticResource REMControl_Background_MouseOverChecked}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_OuterBorder_MouseOverChecked}" CornerRadius="{Binding CornerRadius}" Opacity="0"/>
                                    <Border x:Name="InnerBorder5" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource REMControl_InnerBorder_MouseOverChecked}"  CornerRadius="{Binding CornerRadius}" Margin="1" Opacity="0"/>
                                    <Border x:Name="Background6" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding CornerRadius}" Opacity="0"/>
                                    <Border x:Name="BackgroundDisabled" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding CornerRadius}" Background="#FFB2B1B1" BorderBrush="#FFC8C8C8"  Opacity="0"/>
                                    <Border x:Name="InnerBorderDisabled" BorderThickness="{TemplateBinding BorderThickness}"  CornerRadius="{Binding CornerRadius}" Margin="1" BorderBrush="#FFB2B2B2"  Opacity="0"/>

                                    <Border x:Name="CommonStatesWrapper">
                                        <Border x:Name="FocusVisual" Visibility="Collapsed" Opacity="0" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding CornerRadius}" BorderBrush="{StaticResource REMControl_OuterBorder_Focused}"/>
                                    </Border>
                                    <ContentPresenter/>

                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Start Test Button Control-->

    <Style x:Key="RadGlobalButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource RadControlBackground_Normal}" />
        <Setter Property="BorderBrush" Value="{StaticResource ControlOuterBorder_Normal}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Height="26">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Normal" GeneratedDuration="0:0:0.1" To="MouseOver">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CircleEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0" To="Pressed"/>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1" To="Normal">
                                        <Storyboard/>
                                    </VisualTransition>
                                    <VisualTransition From="Pressed" GeneratedDuration="0:0:0.1" To="Normal"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverState" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusState" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedState" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NormalState" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusState" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedState" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NormalState" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverState" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedState" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="NormalState" Grid.Column="0" BorderThickness="1" CornerRadius="1" Margin="0" Background="{StaticResource RadControlBackground_Normal}" BorderBrush="{StaticResource CalendarOuterBorder}"/>
                        <Border x:Name="MouseOverState" Grid.Column="0" BorderThickness="1" CornerRadius="1" Margin="0" Background="{StaticResource HeaderButtonBackground_MouseOver}" BorderBrush="{StaticResource ControlOuterBorder_MouseOver}"/>
                        <Border x:Name="FocusState" Grid.Column="0" BorderThickness="1" CornerRadius="1" Margin="0" Background="{StaticResource RadControlBackground_Normal}" BorderBrush="{StaticResource ControlOuterBorder_MouseOver}"/>
                        <Border x:Name="PressedState" Grid.Column="0" BorderThickness="1" CornerRadius="1" Margin="0" Background="{StaticResource RadControlItem_Background_Selected}" BorderBrush="{StaticResource ControlOuterBorder_DisabledChecked}"/>
                        <Border x:Name="InnerHiglight" Margin="1" BorderThickness="1" BorderBrush="White"/>
                        <ContentPresenter x:Name="contentPresenter" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="4,0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsEnabled" Value="True"/>
        <Setter Property="Margin" Value="4,0"/>
    </Style>

    <!-- End Test Button Control-->


    <Style x:Key="WorkSpaceHeader_RibbonText_Style" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#000000"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Margin" Value="2,0,0,0"/>

        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <CornerRadius x:Key="ValidationTooltipCornerRadius">0</CornerRadius>
    <ControlTemplate x:Key="ErrorTooltipTemplate" TargetType="ToolTip">
        <Grid x:Name="RootVisual" Margin="5 0" Opacity="0" RenderTransformOrigin="0 0">
            <Grid.RenderTransform>
                <TranslateTransform x:Name="xform" X="-25"/>
            </Grid.RenderTransform>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0"/>
                        <VisualTransition GeneratedDuration="0:0:0.2" To="Open">
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="xform">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase Amplitude=".3" EasingMode="EaseOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="RootVisual"/>
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Closed">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="RootVisual"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Open">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="xform"/>
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="RootVisual"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter/>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="ValidationTooltipTemplate" TargetType="Telerik_Windows_Controls_Chromes:ValidationTooltip">
        <Grid x:Name="VisualRoot">
            <ToolTipService.ToolTip>
                <ToolTip x:Name="PART_ToolTip" Placement="Right" HorizontalOffset="-100" PlacementTarget="{TemplateBinding TooltipPlacementTarget}" Template="{StaticResource ErrorTooltipTemplate}">
                    <i:Interaction.Behaviors>
                        <behavior:ToolTipWidthOffsetBehavior/>
                    </i:Interaction.Behaviors>
                    <ToolTip.Triggers>
                        <EventTrigger RoutedEvent="Canvas.Loaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="PART_ToolTip">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <System:Boolean>true</System:Boolean>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ToolTip.Triggers>
                    <Border BorderBrush="{StaticResource ValidationTooltipOuterBorder}" BorderThickness="1" Background="{StaticResource ValidationTooltipBackground}" CornerRadius="{StaticResource ValidationTooltipCornerRadius}">
                        <Border BorderBrush="{StaticResource ValidationTooltipInnerBorder}" BorderThickness="1">
                            <ContentPresenter ContentTemplate="{TemplateBinding TooltipContentTemplate}" Content="{TemplateBinding TooltipContent}"/>
                        </Border>
                    </Border>
                </ToolTip>
            </ToolTipService.ToolTip>
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}" IsHitTestVisible="False"/>
            <Path Data="M2,1 L6,1 6,5 Z" Fill="{StaticResource ValidationInnerTick}" Stretch="Fill" HorizontalAlignment="Right" Margin="{TemplateBinding BorderThickness}" Height="14" VerticalAlignment="Top" Width="14"/>
            <Path Data="M0,0 L2,0 7,5 7,7 Z" Fill="{StaticResource ValidationOuterTick}" Stretch="Fill" HorizontalAlignment="Right" Margin="{TemplateBinding BorderThickness}" Height="14" VerticalAlignment="Top" Width="14"/>
            <Path x:Name="InvisibleHitArea" Data="M0,0 9,0 9,9 8,9 0,1 Z" Fill="Blue" HorizontalAlignment="Right" Height="18" Margin="-1" Opacity="0" VerticalAlignment="Top" Width="18"/>
        </Grid>
    </ControlTemplate>
    <DataTemplate x:Key="TooltipContentTemplate">
        <ItemsControl BorderThickness="0" Margin="0" Padding="0" ItemsSource="{Binding }">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Border BorderBrush="{StaticResource ValidationTooltipForeground}" BorderThickness="0,0,0,1">
                        <TextBlock Foreground="{StaticResource ValidationTooltipForeground}" MaxWidth="350" Padding="4 1" TextWrapping="Wrap" Text="{Binding ErrorContent}"/>
                    </Border>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>
    <Style x:Key="EditableExpanderValidationTooltipStyle" TargetType="Telerik_Windows_Controls_Chromes:ValidationTooltip">
        <Setter Property="CornerRadius" Value="0"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="Template" Value="{StaticResource ValidationTooltipTemplate}"/>
        <Setter Property="TooltipContentTemplate" Value="{StaticResource TooltipContentTemplate}"/>
    </Style>

    <!-- ViewModeSelection -->
    <Style x:Key="ViewModeSelectionListBoxItemStyle" TargetType="ListBoxItem">
        <Setter Property="Margin" Value="2" />
        <Setter Property="Padding" Value="6 3" />
        <Setter Property="MinWidth" Value="84" />
        <Setter Property="Foreground" Value="{StaticResource ViewModeButtonForeground}"  />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource ViewModeButtonForeground_MouseOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckOuterBorder" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource ViewModeButtonOuterBorder_MouseOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckOuterBorder" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource ViewModeButtonBackground_MouseOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckInnerBorder" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource ViewModeButtonInnerBorder_MouseOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource ViewModeButtonForeground_Pressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckOuterBorder" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource ViewModeButtonOuterBorder_Pressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckOuterBorder" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource ViewModeButtonBackground_Pressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckInnerBorder" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource ViewModeButtonInnerBorder_Pressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="CheckOuterBorder" CornerRadius="1" BorderThickness="1" BorderBrush="{StaticResource ViewModeButtonOuterBorder}" Background="{StaticResource ViewModeButtonBackground}">
                            <Rectangle x:Name="CheckInnerBorder"  Stroke="{StaticResource ViewModeButtonInnerBorder}" />
                        </Border>


                        <ContentControl x:Name="Content" Foreground="{TemplateBinding Foreground}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}" telerik:LocalizationManager.ResourceKey="{Binding Title}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />

                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ViewModeSelectionListBoxStyle" TargetType="ListBox">
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ViewModeSelectionListBoxItemStyle}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Primitives:RadUniformGrid Rows="1" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="EditableFormStackPanelStyle" TargetType="CustomControls:EditableStackPanel">
        <Setter Property="Width" Value="180"/>
        <Setter Property="Margin" Value="10,2,0,2"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Height" Value="auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="auto"/>
        <Setter Property="Orientation" Value="Vertical"/>
    </Style>
    <Style x:Key="EditableFormStackPanelStyleXS" BasedOn="{StaticResource EditableFormStackPanelStyle}"  TargetType="CustomControls:EditableStackPanel">
        <Setter Property="Width" Value="45"/>
    </Style>
    <Style x:Key="EditableFormStackPanelStyleS" BasedOn="{StaticResource EditableFormStackPanelStyle}"  TargetType="CustomControls:EditableStackPanel">
        <Setter Property="Width" Value="110"/>
    </Style>
    <Style x:Key="EditableFormStackPanelStyleM" BasedOn="{StaticResource EditableFormStackPanelStyle}"  TargetType="CustomControls:EditableStackPanel">
        <Setter Property="Width" Value="240"/>
    </Style>
    <Style x:Key="EditableFormStackPanelStyleL" BasedOn="{StaticResource EditableFormStackPanelStyle}"  TargetType="CustomControls:EditableStackPanel">
        <Setter Property="Width" Value="370"/>
    </Style>
    <Style x:Key="EditableFormStackPanelStyleXL" BasedOn="{StaticResource EditableFormStackPanelStyle}"  TargetType="CustomControls:EditableStackPanel">
        <Setter Property="Width" Value="750"/>
    </Style>
    <Style x:Key="EditableFormStackPanelStyleA" BasedOn="{StaticResource EditableFormStackPanelStyle}"  TargetType="CustomControls:EditableStackPanel">
        <Setter Property="Width" Value="auto"/>
        <Setter Property="Margin" Value="10,2,0,2"/>
    </Style>

    <Style x:Key="EditableFormStackPanelStyleList" BasedOn="{StaticResource EditableFormStackPanelStyle}"  TargetType="CustomControls:EditableStackPanel">
        <Setter Property="Margin" Value="10,0,0,0"/>
        <Setter Property="Height" Value="18"/>
    </Style>
    <Style x:Key="EditableFormStackPanelStyleListXS" BasedOn="{StaticResource EditableFormStackPanelStyle}"  TargetType="CustomControls:EditableStackPanel">
        <Setter Property="Width" Value="45"/>
    </Style>
    <Style x:Key="EditableFormStackPanelStyleListS" BasedOn="{StaticResource EditableFormStackPanelStyle}"  TargetType="CustomControls:EditableStackPanel">
        <Setter Property="Width" Value="110"/>
    </Style>
    <Style x:Key="EditableFormStackPanelStyleListM" BasedOn="{StaticResource EditableFormStackPanelStyle}"  TargetType="CustomControls:EditableStackPanel">
        <Setter Property="Width" Value="240"/>
    </Style>
    <Style x:Key="EditableFormStackPanelStyleListL" BasedOn="{StaticResource EditableFormStackPanelStyle}"  TargetType="CustomControls:EditableStackPanel">
        <Setter Property="Width" Value="370"/>
    </Style>
    <Style x:Key="EditableFormStackPanelStyleListXL" BasedOn="{StaticResource EditableFormStackPanelStyle}"  TargetType="CustomControls:EditableStackPanel">
        <Setter Property="Width" Value="750"/>
    </Style>
    <Style x:Key="EditableFormStackPanelStyleListA" BasedOn="{StaticResource EditableFormStackPanelStyle}"  TargetType="CustomControls:EditableStackPanel">
        <Setter Property="Width" Value="auto"/>
        <Setter Property="Margin" Value="10,0,0,0"/>
    </Style>

    <Style x:Key="EditFormStackPanelStyle" TargetType="StackPanel">
        <Setter Property="Width" Value="180"/>
        <Setter Property="Margin" Value="10,2,0,2"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Height" Value="auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="auto"/>
        <Setter Property="Orientation" Value="Vertical"/>
    </Style>
    <Style x:Key="EditFormStackPanelStyleXS" BasedOn="{StaticResource EditFormStackPanelStyle}"  TargetType="StackPanel">
        <Setter Property="Width" Value="45"/>
    </Style>
    <Style x:Key="EditFormStackPanelStyleS" BasedOn="{StaticResource EditFormStackPanelStyle}"  TargetType="StackPanel">
        <Setter Property="Width" Value="110"/>
    </Style>
    <Style x:Key="EditFormStackPanelStyleM" BasedOn="{StaticResource EditFormStackPanelStyle}"  TargetType="StackPanel">
        <Setter Property="Width" Value="240"/>
    </Style>
    <Style x:Key="EditFormStackPanelStyleL" BasedOn="{StaticResource EditFormStackPanelStyle}"  TargetType="StackPanel">
        <Setter Property="Width" Value="370"/>
    </Style>
    <Style x:Key="EditFormStackPanelStyleXL" BasedOn="{StaticResource EditFormStackPanelStyle}"  TargetType="StackPanel">
        <Setter Property="Width" Value="750"/>
    </Style>
    <Style x:Key="EditFormStackPanelStyleA" BasedOn="{StaticResource EditFormStackPanelStyle}"  TargetType="StackPanel">
        <Setter Property="Width" Value="auto"/>
        <Setter Property="Margin" Value="10,2,0,2"/>
    </Style>

    <Style x:Key="EditFormStackPanelStyleList" BasedOn="{StaticResource EditFormStackPanelStyle}"  TargetType="StackPanel">
        <Setter Property="Margin" Value="5,0,0,0"/>
        <Setter Property="Height" Value="18"/>
    </Style>
    <Style x:Key="EditFormStackPanelStyleListXS" BasedOn="{StaticResource EditFormStackPanelStyleList}"  TargetType="StackPanel">
        <Setter Property="Width" Value="45"/>
    </Style>
    <Style x:Key="EditFormStackPanelStyleListS" BasedOn="{StaticResource EditFormStackPanelStyleList}"  TargetType="StackPanel">
        <Setter Property="Width" Value="110"/>
    </Style>
    <Style x:Key="EditFormStackPanelStyleListM" BasedOn="{StaticResource EditFormStackPanelStyleList}"  TargetType="StackPanel">
        <Setter Property="Width" Value="240"/>
    </Style>
    <Style x:Key="EditFormStackPanelStyleListL" BasedOn="{StaticResource EditFormStackPanelStyleList}"  TargetType="StackPanel">
        <Setter Property="Width" Value="370"/>
    </Style>
    <Style x:Key="EditFormStackPanelStyleListXL" BasedOn="{StaticResource EditFormStackPanelStyleList}"  TargetType="StackPanel">
        <Setter Property="Width" Value="750"/>
    </Style>
    <Style x:Key="EditFormStackPanelStyleListA" BasedOn="{StaticResource EditFormStackPanelStyleList}"  TargetType="StackPanel">
        <Setter Property="Width" Value="auto"/>
        <Setter Property="Margin" Value="10,0,0,0"/>
    </Style>

    <Style x:Key="TileGridRowStackPanelStyleListS" BasedOn="{StaticResource EditFormStackPanelStyleList}"  TargetType="StackPanel">
        <Setter Property="Width" Value="110"/>
        <Setter Property="Height" Value="auto"/>
        <Setter Property="Margin" Value="0 0 0 2"/>
    </Style>
    <Style x:Key="TileGridRowStackPanelStyleListM" BasedOn="{StaticResource TileGridRowStackPanelStyleListS}"  TargetType="StackPanel">
        <Setter Property="Width" Value="240"/>
    </Style>
    <Style x:Key="TileGridRowStackPanelStyleListA" BasedOn="{StaticResource TileGridRowStackPanelStyleListS}"  TargetType="StackPanel">
        <Setter Property="Width" Value="auto"/>
    </Style>
    <Style x:Key="ScreenerStackPanelStyle" BasedOn="{StaticResource EditFormStackPanelStyle}"  TargetType="StackPanel">
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
    </Style>

    <Style x:Key="HorizontalLineFormDivider" TargetType="Border">
        <Setter Property="BorderBrush" Value="Darkgray"/>
        <Setter Property="BorderThickness" Value="0,1,0,0"/>
        <Setter Property="Margin" Value="10,15"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Width" Value="Auto"/>
    </Style>

    <Style x:Key="VerticalLineFormDivider" TargetType="Border">
        <Setter Property="BorderBrush" Value="Darkgray"/>
        <Setter Property="BorderThickness" Value="0,1,0,0"/>
        <Setter Property="Margin" Value="10,15"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>

    <Style x:Key="HorizontalLineReadFormDivider" TargetType="Border"  BasedOn="{StaticResource HorizontalLineFormDivider}">
        <Setter Property="Margin" Value="10,8"/>
    </Style>

    <Style x:Key="HorizontalLineEditFormDivider" TargetType="Border" BasedOn="{StaticResource HorizontalLineReadFormDivider}">
        <Setter Property="BorderBrush" Value="{StaticResource EditorHeaderEditingForeground}"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style x:Key="HorizontalLineEditFormSpacer" TargetType="Border" BasedOn="{StaticResource HorizontalLineReadFormDivider}">
        <Setter Property="Margin" Value="0,0,0,30"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style x:Key="HorizontalLineAddFormDivider" TargetType="Border" BasedOn="{StaticResource HorizontalLineReadFormDivider}">
        <Setter Property="BorderBrush" Value="#FFE6E6E6"/>
        <Setter Property="Margin" Value="10,2"/>
    </Style>

    <Style x:Key="PopUpFormPanelStyle" TargetType="Border">
        <Setter Property="Background" Value="White"/>
        <Setter Property="CornerRadius" Value="10"/>
    </Style>

    <Style x:Key="EditFormLabelStyle" TargetType="sdk1:Label">
        <Setter Property="FontStyle" Value="Italic"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Foreground" Value="#FF848484"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <Style x:Key="EditFormLabelRemStyle" TargetType="dataInput:Label">
        <Setter Property="FontStyle" Value="Italic"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Foreground" Value="#FF848484"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <Style x:Key="EditFormLabelTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontStyle" Value="Italic"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Foreground" Value="#FF848484"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>
    <Style x:Key="EditFormHeaderTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="#FFF7F7F7"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>
    <Style x:Key="EditFormDataElementTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="FontFamily" Value="Trebuchet MS"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>
    <Style x:Key="SlideOutSummaryDataElementTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="FontFamily" Value="Trebuchet MS"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>
    <Style x:Key="SlideOutSummaryLabelTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontStyle" Value="Italic"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Foreground" Value="#FF848484"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>
    <Style x:Key="TileGridRowDataElementTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="FontFamily" Value="Lucida Sans Unicode"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>
    <Style x:Key="TileGridRowLabelTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Lucida Sans Unicode"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="Foreground" Value="#FF5E5E5E"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>
    <Style x:Key="ResultGridRowDataElementTextBlockStyle" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="FontFamily" Value="Lucida Sans Unicode"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>
    <Style x:Key="ResultGridRowLabelTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Lucida Sans Unicode"/>
        <Setter Property="Foreground" Value="#FF5E5E5E"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>
    <Style x:Key="ScreenerLabelTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="FontFamily" Value="Trebuchet MS"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Margin" Value="0,0,0,5"/>
    </Style>

    <Style x:Key="ScreenerLabelStyle" TargetType="sdk1:Label">
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="FontFamily" Value="Trebuchet MS"/>
        <Setter Property="Margin" Value="0,0,0,5"/>
    </Style>

    <Style x:Key="ScreenerLabelTextBlockStyleL" TargetType="TextBlock" BasedOn="{StaticResource ScreenerLabelTextBlockStyle}" >
        <Setter Property="FontSize" Value="16" />
    </Style>

    <Style x:Key="ScreenerLabelTextBlockStyleS" TargetType="TextBlock" BasedOn="{StaticResource ScreenerLabelTextBlockStyle}" >
        <Setter Property="Width" Value="200" />
    </Style>

    <Style x:Key="ScreenerMatrixHeaderTextBlockStyle" BasedOn="{StaticResource ScreenerLabelTextBlockStyle}" TargetType="TextBlock">
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0"/>
    </Style>
    <Style x:Key="ScreenerDataElementTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="FontFamily" Value="Trebuchet MS"/>
    </Style>

    <Style x:Key="EditFormSectionBorderStyle" TargetType="Border">
        <Setter Property="Margin" Value="10,8"/>
        <Setter Property="Height" Value="auto"/>
    </Style>
    <Style x:Key="ScreenerSectionBorderStyle" TargetType="Border">
        <Setter Property="Margin" Value="0,8"/>
        <Setter Property="Height" Value="auto"/>
    </Style>

    <Style x:Key="LargeScreenerSectionBorderStyle" TargetType="Border">
        <Setter Property="Margin" Value="0 0 0 5"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="BorderBrush" Value="#FF787878"/>
        <Setter Property="BorderThickness" Value=".5 .5 .5 1"/>
    </Style>

    <Style x:Key="EditFormBorderStyle" TargetType="Border">
        <Setter Property="Margin" Value="20,8"/>
        <Setter Property="Height" Value="auto"/>
    </Style>
    <Style x:Key="EditFormHeaderBorderStyle" TargetType="Border">
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Background" Value="#FF6E6E6E"/>
    </Style>
    <Style x:Key="EditFormStackPanelSpacer" TargetType="Border">
        <Setter Property="Height" Value="16"/>
        <Setter Property="Width" Value="auto"/>
    </Style>
    <DropShadowEffect x:Key="IndicateAddDropShadowEffect" Color="Blue" ShadowDepth="0" Direction="0" BlurRadius="100" />

    <Style TargetType="telerikInput:RadComboBox">
        <Setter Property="ClearSelectionButtonVisibility" Value="Visible"/>
        <Setter Property="ClearSelectionButtonContent" Value="Clear"/>
        <Setter Property="EmptySelectionBoxTemplate" Value="{StaticResource WatermarkTemplate}" />
    </Style>
    <Style TargetType="telerikInput:RadDatePicker">
        <Setter Property="Width" Value="100"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>
    <Style TargetType="telerikInput:RadDateTimePicker">
        <Setter Property="Width" Value="100"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <Style TargetType="ItemsControl" x:Key="ICStyle">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Style="{StaticResource EditFormStackPanelStyleListA}" Margin="0,0,0,0">
                        <TextBlock Text="{Binding}" Style="{StaticResource EditFormDataElementTextBlockStyle}"/>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Border" x:Key="EditFormCommentsBorderStyle">
        <Setter Property="Background" Value="#FFEFEDE8"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0,5,10,10"/>
        <Setter Property="Margin" Value="0,5,0,0"/>
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="Opacity" Value="1"/>
    </Style>
    <Style TargetType="TextBox" x:Key="EditFormCommentsTextBoxStyle">
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="MaxHeight" Value="120"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="AcceptsReturn" Value="True"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
    </Style>
    <Style TargetType="telerikInput:RadMaskedTextBox" x:Key="EditFormCommentsRadMaskedTextBoxStyle" BasedOn="{StaticResource EditFormCommentsTextBoxStyle}">
    </Style>
    <Style TargetType="ListBox" x:Key="EditFormListBoxStyle">
        <Setter Property="Height" Value="125"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    </Style>
    <Style x:Key="CaseSummaryDataElementTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontFamily" Value="Trebuchet MS"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>
    <Style x:Key="TileCommentsTextBoxStyle" TargetType="TextBox">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontFamily" Value="Trebuchet MS"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value=".5"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="MaxHeight" Value="60"/>
    </Style>
    <Style x:Key="CaseSummaryLabelTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="10.667"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontStyle" Value="Italic"/>
        <Setter Property="Foreground" Value="Gray"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>
    <Style x:Key="ScreenerMatrixHeaderBorderStyle" TargetType="Border">
        <Setter Property="Width" Value="90"/>
        <Setter Property="Padding" Value="6"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="BorderBrush" Value="#FFA5A5A5"/>
        <Setter Property="Background" Value="#FFC8C8C8"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>
    <Style x:Key="ScreenerMatrixResultsBorderStyle" TargetType="Border">
        <Setter Property="Width" Value="90"/>
        <Setter Property="Padding" Value="6"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="BorderBrush" Value="#FFA5A5A5"/>
        <Setter Property="Background" Value="#FFEFEFEF"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
    </Style>
    <Style x:Key="ScreenerSectionHeaderBorderStyle" TargetType="Border" BasedOn="{StaticResource EditFormCommentsBorderStyle}">
        <Setter Property="Margin" Value="0,0,0,5"/>
        <Setter Property="Padding" Value="0,8,10,2"/>
    </Style>
    <Style x:Key="ScreenerCommentsBorderStyle" TargetType="Border" BasedOn="{StaticResource EditFormCommentsBorderStyle}">
        <Setter Property="Background" Value="#FFFFFDD7" />
        <Setter Property="BorderBrush" Value="#FFF5F077" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
    </Style>
    <Style x:Key="ScreenerMatrixStackPanelStyle" TargetType="StackPanel">
        <Setter Property="Margin" Value="10,0,5,0"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Orientation" Value="Vertical"/>
    </Style>

    <Style x:Key="ScreenerMatrixQuestionBorderStyle" TargetType="Border">
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="BorderBrush" Value="#FFA5A5A5"/>
        <Setter Property="Padding" Value="0,6"/>
    </Style>

    <Style x:Key="ScreenerResultsBorderStyle" TargetType="Border">
        <Setter Property="Background" Value="#FFE7E266"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
    </Style>

    <Style x:Key="ScreenerScoreBorderStyle" BasedOn="{StaticResource ScreenerResultsBorderStyle}" TargetType="Border">
        <Setter Property="Background" Value="#FFFFFDD7" />
    </Style>

    <Style x:Key="ScreenerInstructionsBorderStyle" TargetType="Border" BasedOn="{StaticResource EditFormCommentsBorderStyle}">
        <Setter Property="Background" >
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFDEDEDE" Offset="1"/>
                    <GradientStop Color="White" Offset="0.463"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" >
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF9D9D9D" Offset="1"/>
                    <GradientStop Color="White" Offset="0"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
    </Style>

    <Style x:Key="ScreenerScoreTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="14.667"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="FontFamily" Value="Trebuchet MS"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Margin" Value="0,0,0,5"/>
    </Style>
    <SolidColorBrush x:Key="Expander_Background" Color="#00FFFFFF"/>
    <SolidColorBrush x:Key="Expander_BorderBrush" Color="#00FFFFFF"/>
    <Thickness x:Key="Expander_BorderThickness">0</Thickness>
    <LinearGradientBrush x:Key="ControlBackground_Normal" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFFFF" Offset="0"/>
        <GradientStop Color="#FFDCDCDC" Offset="0.50"/>
        <GradientStop Color="#FFADADAD" Offset="0.50"/>
        <GradientStop Color="#FFD4D4D4" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ControlInnerBorder_Normal" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ControlElement_Normal" Color="#FF000000"/>
    <SolidColorBrush x:Key="ControlOuterBorder_Focused2" Color="#FFFFC92B"/>
    <ControlTemplate x:Key="ToggleTemplate" TargetType="telerik:RadToggleButton">
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0:0:0.2" To="Focused"/>
                        <VisualTransition GeneratedDuration="0:0:0.2" To="Unfocused"/>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Unfocused"/>
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0:0:0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusDecorator">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            <Rectangle x:Name="FocusDecorator" IsHitTestVisible="false" Stroke="{StaticResource ControlOuterBorder_Focused2}" StrokeThickness="1" StrokeDashArray="1 2" Visibility="Collapsed"/>
        </Grid>
    </ControlTemplate>
    <CornerRadius x:Key="Expander_BorderRadius">3</CornerRadius>
    <SolidColorBrush x:Key="ControlOuterBorder_Disabled2" Color="#FF989898"/>
    <SolidColorBrush x:Key="ControlInnerBorder_Disabled" Color="Transparent"/>
    <SolidColorBrush x:Key="ControlBackground_Disabled2" Color="#FFE0E0E0"/>
    <SolidColorBrush x:Key="ControlElement_Disabled" Color="#FF8D8D8D"/>
    <SolidColorBrush x:Key="ControlOuterBorder_MouseOver2" Color="#FFFFC92B"/>
    <SolidColorBrush x:Key="ControlInnerBorder_MouseOver" Color="#FFFFFFFF"/>
    <LinearGradientBrush x:Key="ControlBackground_MouseOver" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFBDA" Offset="0"/>
        <GradientStop Color="#FFFEEBAE" Offset="0.50"/>
        <GradientStop Color="#FFFFD25A" Offset="0.50"/>
        <GradientStop Color="#FFFFFBA3" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ControlElement_MouseOver" Color="#FF000000"/>
    <LinearGradientBrush x:Key="ControlInnerBorder_Pressed" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFB69A78"/>
        <GradientStop Color="#FFFFE17A" Offset="0.126"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ControlBackground_Pressed2" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFDCAB" Offset="0"/>
        <GradientStop Color="#FFFFD18F" Offset="0.5"/>
        <GradientStop Color="#FFFE9227" Offset="0.5"/>
        <GradientStop Color="#FFFFBA74" Offset="0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ControlElement_Pressed" Color="#FF000000"/>


    <ControlTemplate x:Key="ExpanderTemplate" TargetType="telerik:RadExpander">
        <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStateGroup">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0:0:0" Storyboard.TargetProperty="Stroke" Storyboard.TargetName="OuterCircle">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource ControlOuterBorder_Disabled2}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Duration="0:0:0" Storyboard.TargetProperty="Stroke" Storyboard.TargetName="InnerCircle">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource ControlInnerBorder_Disabled}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Duration="0:0:0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="OuterCircle">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource ControlBackground_Disabled2}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="arrow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ControlElement_Disabled}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimation To=".5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Content"/>
                            <DoubleAnimation To=".5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HeaderContent"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="HeaderStateGroup">
                    <VisualState x:Name="NormalHeader"/>
                    <VisualState x:Name="MouseOverHeader">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0:0:0" Storyboard.TargetProperty="Stroke" Storyboard.TargetName="OuterCircle">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource ControlOuterBorder_MouseOver2}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Duration="0:0:0" Storyboard.TargetProperty="Stroke" Storyboard.TargetName="InnerCircle">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource ControlInnerBorder_MouseOver}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Duration="0:0:0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="OuterCircle">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource ControlBackground_MouseOver}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="arrow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ControlElement_MouseOver}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="PressedHeader">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0:0:0" Storyboard.TargetProperty="Stroke" Storyboard.TargetName="OuterCircle">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource ControlOuterBorder_Pressed}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Duration="0:0:0" Storyboard.TargetProperty="Stroke" Storyboard.TargetName="InnerCircle">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource ControlInnerBorder_Pressed}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Duration="0:0:0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="OuterCircle">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource ControlBackground_Pressed2}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="arrow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ControlElement_Pressed}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="HeaderOrientationGroup">
                    <VisualState x:Name="HorizontalOrientation">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="LayoutTransform" Storyboard.TargetName="HeaderContentTransform">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <RotateTransform Angle="0"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="HeaderContentTransform">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="VerticalOrientation">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="LayoutTransform" Storyboard.TargetName="HeaderContentTransform">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <RotateTransform Angle="90"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="HeaderContentTransform">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ExpandStateGroup">
                    <VisualState x:Name="Expanded">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Content">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimation Duration="0:0:0.2" To="180" Storyboard.TargetProperty="(FrameworkElement.RenderTransform).Angle" Storyboard.TargetName="arrow"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Collapsed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Content">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(FrameworkElement.RenderTransform).Angle" Storyboard.TargetName="arrow"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ExpandDirectionStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition>
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="Content">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="Content">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="HeaderButton">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="HeaderButton">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Width" Storyboard.TargetName="col0">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Auto"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Width" Storyboard.TargetName="col1">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Auto"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Height" Storyboard.TargetName="row0">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Auto"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Height" Storyboard.TargetName="row1">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Auto"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="DirectionLeft">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Width" Storyboard.TargetName="col0">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Height" Storyboard.TargetName="row0">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="HeaderButton">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimation Duration="0:0:0" To="90" Storyboard.TargetProperty="(FrameworkElement.RenderTransform).Angle" Storyboard.TargetName="arrowPanel"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="DirectionRight">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Width" Storyboard.TargetName="col1">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Height" Storyboard.TargetName="row0">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="Content">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimation Duration="0:0:0" To="-90" Storyboard.TargetProperty="(FrameworkElement.RenderTransform).Angle" Storyboard.TargetName="arrowPanel"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="DirectionUp">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Width" Storyboard.TargetName="col0">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Height" Storyboard.TargetName="row0">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="HeaderButton">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimation Duration="0:0:0" To="180" Storyboard.TargetProperty="(FrameworkElement.RenderTransform).Angle" Storyboard.TargetName="arrowPanel"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="DirectionDown">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Width" Storyboard.TargetName="col0">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Height" Storyboard.TargetName="row1">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="Content">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{StaticResource Expander_BorderRadius}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition x:Name="col0" Width="Auto"/>
                        <ColumnDefinition x:Name="col1" Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition x:Name="row0" Height="Auto"/>
                        <RowDefinition x:Name="row1" Height="Auto"/>
                    </Grid.RowDefinitions>

                    <telerik:RadToggleButton x:Name="HeaderButton" Background="Transparent" ClickMode="{TemplateBinding ClickMode}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalAlignment="{TemplateBinding HorizontalHeaderAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalHeaderAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ToggleTemplate}" VerticalAlignment="{TemplateBinding VerticalHeaderAlignment}" VerticalContentAlignment="{TemplateBinding VerticalHeaderAlignment}">
                        <Grid x:Name="HeaderPanel">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid Grid.Column="0" Grid.Row="0">
                                <Ellipse x:Name="OuterCircle" Fill="{StaticResource ControlBackground_Normal}" HorizontalAlignment="Center" Height="20" Stroke="{StaticResource ControlOuterBorder_Normal}" VerticalAlignment="Center" Width="20"/>
                                <Ellipse x:Name="InnerCircle" HorizontalAlignment="Center" Height="18" Stroke="{StaticResource ControlInnerBorder_Normal}" VerticalAlignment="Center" Width="18"/>
                                <Grid x:Name="arrowPanel" RenderTransformOrigin=".5 .5">
                                    <Grid.RenderTransform>
                                        <RotateTransform/>
                                    </Grid.RenderTransform>
                                    <Path x:Name="arrow" Data="M0,0 L0.67,0 4,2.67 7.25,0 8,0 8,0.67 4,4 0,0.75 z" Fill="{StaticResource ControlElement_Normal}" Height="4" RenderTransformOrigin="0.5,0.5" Stretch="None" Width="8">
                                        <Path.RenderTransform>
                                            <RotateTransform Angle="0"/>
                                        </Path.RenderTransform>
                                    </Path>
                                </Grid>
                            </Grid>
                            <Primitives:LayoutTransformControl x:Name="HeaderContentTransform" Grid.Column="0" Grid.Row="0" RenderTransformOrigin=".5 .5">
                                <ContentPresenter x:Name="HeaderContent" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" HorizontalAlignment="Stretch" Margin="5 0" VerticalAlignment="Stretch"/>
                            </Primitives:LayoutTransformControl>
                        </Grid>
                    </telerik:RadToggleButton>
                    <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Grid>
            </Border>
        </Grid>
    </ControlTemplate>

    <Style x:Key="ScreenerInstructionsRadExpanderStyle" TargetType="telerik:RadExpander">
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="0,2,0,10" />
        <Setter Property="Background" Value="#FFDDEBEF"/>
        <Setter Property="BorderBrush" Value="{StaticResource Expander_BorderBrush}"/>
        <Setter Property="BorderThickness" Value="{StaticResource Expander_BorderThickness}"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Template" Value="{StaticResource ExpanderTemplate}"/>
        <Setter Property="Animation:AnimationManager.AnimationSelector">
            <Setter.Value>
                <Animation:AnimationSelector>
                    <Animation:ExpanderExpandCollapseAnimation AnimationName="Expand" Direction="In" TargetElementName="Content"/>
                    <Animation:ExpanderExpandCollapseAnimation AnimationName="Collapse" Direction="Out" TargetElementName="Content"/>
                </Animation:AnimationSelector>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="ScreenerRadioButtonStyle" TargetType="RadioButton">
        <Setter Property="Background" Value="#FF448DCA"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Padding" Value="4,1,0,0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid Width="50" Margin="4,0" VerticalAlignment="Bottom">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.457*"/>
                            <RowDefinition Height="0.543*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundOverlay"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BoxMiddleBackground"/>
                                        <ColorAnimation Duration="0" To="#7FFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
                                        <ColorAnimation Duration="0" To="#CCFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
                                        <ColorAnimation Duration="0" To="#F2FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundOverlay"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BoxMiddleBackground"/>
                                        <ColorAnimation Duration="0" To="#6BFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
                                        <ColorAnimation Duration="0" To="#C6FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
                                        <ColorAnimation Duration="0" To="#EAFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
                                        <ColorAnimation Duration="0" To="#F4FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
                                        <ColorAnimation Duration="0" To="#FF6DBDD1" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
                                        <ColorAnimation Duration="0" To="#FF6DBDD1" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
                                        <ColorAnimation Duration="0" To="#FF6DBDD1" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
                                        <ColorAnimation Duration="0" To="#FF6DBDD1" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                        <DoubleAnimation Duration="0" To="0.55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckIcon"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentFocusVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid d:LayoutOverrides="Height" Grid.Row="1" HorizontalAlignment="Center">
                            <Ellipse x:Name="Background" Fill="#FFFFFFFF" Height="14" Margin="1" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" Width="14"/>
                            <Ellipse x:Name="BackgroundOverlay" Fill="#FFC4DBEE" Height="14" Margin="1" Opacity="0" Stroke="#00000000" StrokeThickness="1" Width="14"/>
                            <Ellipse x:Name="BoxMiddleBackground" Fill="{TemplateBinding Background}" Height="10" Stroke="#00000000" StrokeThickness="1" Width="10"/>
                            <Ellipse x:Name="BoxMiddle" Height="10" StrokeThickness="1" Width="10">
                                <Ellipse.Fill>
                                    <LinearGradientBrush EndPoint="0.64,0.88" StartPoint="0.62,0.15">
                                        <GradientStop Color="#FFFFFFFF" Offset="0.013"/>
                                        <GradientStop Color="#F9FFFFFF" Offset="0.375"/>
                                        <GradientStop Color="#EAFFFFFF" Offset="0.603"/>
                                        <GradientStop Color="#D8FFFFFF" Offset="1"/>
                                    </LinearGradientBrush>
                                </Ellipse.Fill>
                                <Ellipse.Stroke>
                                    <LinearGradientBrush EndPoint=".5,1" StartPoint=".5,0">
                                        <GradientStop Color="#FFFFFFFF" Offset="1"/>
                                        <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                        <GradientStop Color="#FFFFFFFF" Offset="0.375"/>
                                        <GradientStop Color="#FFFFFFFF" Offset="0.375"/>
                                    </LinearGradientBrush>
                                </Ellipse.Stroke>
                            </Ellipse>
                            <Ellipse x:Name="BoxMiddleLine" Height="10" Opacity=".2" Stroke="#FF333333" StrokeThickness="1" Width="10"/>
                            <Ellipse x:Name="CheckIcon" Fill="#FF333333" Height="4" Opacity="0" Width="4"/>
                            <Ellipse x:Name="DisabledVisualElement" Fill="#FFFFFFFF" Height="14" Opacity="0" Width="14"/>
                            <Grid x:Name="ValidationErrorElement" ToolTipService.PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
                                <ToolTipService.ToolTip>
                                    <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                                        <ToolTip.Triggers>
                                            <EventTrigger RoutedEvent="Canvas.Loaded">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <System:Boolean>true</System:Boolean>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </ToolTip.Triggers>
                                    </ToolTip>
                                </ToolTipService.ToolTip>
                                <Ellipse Height="14" Stroke="#FFDB000C" StrokeThickness="1" Width="14"/>
                                <Ellipse Fill="#FFDB000C" HorizontalAlignment="Right" Height="4" Margin="0,-2,-1,0" VerticalAlignment="Top" Width="4"/>
                                <Ellipse Fill="Transparent" HorizontalAlignment="Right" Height="10" Margin="0,-5,-4,0" VerticalAlignment="Top" Width="10"/>
                                <Ellipse x:Name="ContentFocusVisualElement" Height="16" IsHitTestVisible="false" Opacity="0" Stroke="#FF6DBDD1" StrokeThickness="1" Width="16" Margin="55,2,54,1"/>
                            </Grid>
                        </Grid>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="EditorExpanderHeaderStyle" TargetType="TextBlock">
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="10 0 0 0 "/>
        <Setter Property="Foreground" Value="{StaticResource EditorHeaderForeground}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>


    <Style x:Key="ScreenerSectionEditableStackPanelStyle" TargetType="CustomControls:EditableStackPanel">
        <Setter Property="Margin" Value="0 30 0 0"/>
    </Style>

<!-- Non Response Questions START -->

    <Style x:Key="NonResponseQuestionStyle" TargetType="CustomControls:NonResponseQuestionControl">
        <Setter Property="Margin" Value="0 0 0 50"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style x:Key="GpraNonResponseQuestionStyle" TargetType="CustomControls:NonResponseQuestionControl">
        <Setter Property="Margin" Value="0 0 0 50"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>


    <Style x:Key="NonResponseQuestionsGroupStyle" TargetType="CustomControls:NonResponseQuestionControl">
        <Setter Property="Margin" Value="0 0 0 10"/>
        <Setter Property="Padding" Value="10 0 0 0"/>
    </Style>
    <Style x:Key="NonResponseQuestionsListStyle" TargetType="CustomControls:NonResponseQuestionControl">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="20 0 0 0"/>
    </Style>
    <Style x:Key="NonResponseQuestionsSubListStyle" TargetType="CustomControls:NonResponseQuestionControl">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="30 0 0 0"/>
    </Style>

    <Style x:Key="AlternatingQuestionBackgroundStyle" TargetType="CustomControls:EditableGrid">
        <Setter Property="Background" Value="#FFF2F2E8"/>
    </Style>
    <Style x:Key="BasicScreenQuestionStyle" TargetType="CustomControls:BasicScreenQuestionControl">
        <Setter Property="Margin" Value="0 0 0 50"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>
    <Style x:Key="GpraBasicScreenQuestionStyle" TargetType="CustomControls:BasicScreenQuestionControl">
        <Setter Property="Margin" Value="0 0 0 50"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style x:Key="BasicScreenQuestionsGroupStyle" TargetType="CustomControls:BasicScreenQuestionControl">
        <Setter Property="Margin" Value="0 0 0 10"/>
    </Style>
    <Style x:Key="BasicScreenQuestionsListStyle" TargetType="CustomControls:BasicScreenQuestionControl">
        <Setter Property="Margin" Value="0"/>
    </Style>
    <Style x:Key="BasicScreenQuestionsSubListStyle" TargetType="CustomControls:BasicScreenQuestionControl">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="30 0 0 0"/>
    </Style>
	
	<!-- Non Response Questions END -->
	
    <Style x:Key="EmptyScrollViewerStyle" TargetType="ScrollViewer">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Border CornerRadius="2" BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <ScrollContentPresenter x:Name="ScrollContentPresenter"
									Cursor="{TemplateBinding Cursor}"
									Margin="{TemplateBinding Padding}"
									ContentTemplate="{TemplateBinding ContentTemplate}" 
									/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="MainSearchTabControlStyle" TargetType="Controls:RadTabControl">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="10,0,0,0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="Controls:RadTabItem">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Margin" Value="0,0,10,0"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Padding" Value="4 2 4 0"/>
                    <Setter Property="FontFamily" Value="Arial"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="Foreground" Value="#FFD2D2D2"/>
                    <Setter Property="FontSize" Value="11"/>
                    <Setter Property="HeaderTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <TextBlock Text="{Binding}"/>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Controls:RadTabItem">
                                <Grid x:Name="wrapper">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStateGroup">
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ForegroundController">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="White"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Normal">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ForegroundController">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="#FFB2B2B2"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Selected">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ForegroundController">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="#FF777676"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimation Duration="0" Storyboard.TargetName="SelectionVisual"
                                    					Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />
                                                    <DoubleAnimation Duration="0" Storyboard.TargetName="MouseOverVisual"
                                    					Storyboard.TargetProperty="(UIElement.Opacity)" To="0" />
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="SelectedMouseOver">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ForegroundController">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="White"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimation Duration="0" Storyboard.TargetName="MouseOverVisual"
                                    					Storyboard.TargetProperty="(UIElement.Opacity)" To="0" />
                                                    <DoubleAnimation Duration="0" Storyboard.TargetName="SelectionVisual"
                                    					Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                    					Storyboard.TargetName="HeaderElement" To="0.3"
                                    					Duration="0:0:0.1" />
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                    					Storyboard.TargetName="NormalVisual" To="0" Duration="0:0:0.1" />
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="FocusStates">
                                            <VisualState x:Name="Unfocused" />
                                            <VisualState x:Name="Focused" />
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <!-- normal -->
                                    <Border x:Name="NormalVisual" Margin="0"
					                BorderBrush="{TemplateBinding BorderBrush}"
					                Background="{TemplateBinding Background}"
					                BorderThickness="{TemplateBinding BorderThickness}"
					                CornerRadius="3">
                                    </Border>
                                    <!-- mouseover-->
                                    <Border x:Name="MouseOverVisual" Margin="0" Background="#FFC6C6C6" CornerRadius="2,2,0,0" Opacity="0"/>
                                    <!-- select-->
                                    <Border x:Name="SelectionVisual" Opacity="0" Margin="0" Background="#FFE7E7E7" CornerRadius="2 2 0 0"/>
                                    <!--Content-->
                                    <ContentControl x:Name="ForegroundController" Foreground="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Foreground,Mode=TwoWay}"/>
                                    <ContentPresenter x:Name="HeaderElement" ContentTemplate="{TemplateBinding HeaderTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Controls:RadTabControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DropDownDisplayStates">
                                <VisualState x:Name="DropDownButtonVisible"/>
                                <VisualState x:Name="DropDownButtonCollapsed"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="PlacementStates">
                                <VisualState x:Name="Left"/>
                                <VisualState x:Name="Right"/>
                                <VisualState x:Name="Top"/>
                                <VisualState x:Name="Bottom"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ScrollViewer Grid.Row="0" x:Name="ScrollViewerElement"
                			Style="{StaticResource EmptyScrollViewerStyle}"
                			Margin="0" VerticalScrollBarVisibility="Disabled"
                			Padding="0"
                			BorderThickness="0" IsTabStop="False"
                			HorizontalScrollBarVisibility="{Binding (ScrollViewer.HorizontalScrollBarVisibility), RelativeSource={RelativeSource TemplatedParent}}">
                            <ItemsPresenter />
                        </ScrollViewer>
                        <!--Content-->
                        <Border Grid.Row="1" x:Name="ContentBorder" BorderBrush="{TemplateBinding BorderBrush}"
                			BorderThickness="{TemplateBinding BorderThickness}"
                			Background="{TemplateBinding Background}"
                			Padding="{TemplateBinding Padding}">
                            <Grid>
                                <ContentPresenter x:Name="ContentElement"
                					Visibility="{Binding IsContentPreserved, Converter={StaticResource InvertedBooleanToVisibilityConverterInstance}, RelativeSource={RelativeSource TemplatedParent}}"
                					ContentTemplate="{TemplateBinding SelectedContentTemplate}"
							
							/>
                                <Grid x:Name="ContentElementsPanel"
                					Visibility="{Binding IsContentPreserved, Converter={StaticResource BooleanToVisibilityConverterInstance}, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CheckBoxListBoxItemStyle" TargetType="ListBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid Background="Transparent">
                        <CheckBox IsHitTestVisible="False" IsChecked="{TemplateBinding IsSelected}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="CheckBoxListStyle" TargetType="ListBox">
        <Setter Property="ItemContainerStyle" Value="{StaticResource CheckBoxListBoxItemStyle}"/>
    </Style>

    <Style x:Key="SearchResultTextBlockForegroundStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#FF4D4D4D"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="White" ShadowDepth="1" BlurRadius="0" Direction="323"/>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- TopLevelHeader -->

    <ControlTemplate x:Key="TopLevelHeaderBorderlessButtonTemplate" TargetType="telerikNavigation:RadMenuItem">

        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Highlighted" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentGrid"
                                    Storyboard.TargetProperty="Opacity">
                                <DiscreteDoubleKeyFrame KeyTime="0" Value="0.5" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Normal" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Unfocused" />
                    <VisualState x:Name="Focused" >
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" Storyboard.TargetName="radMenuContent" d:IsOptimized="True"/>
                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="radMenuContent" d:IsOptimized="True"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">

                    </VisualState>
                    <VisualState x:Name="Unchecked" />
                    <VisualState x:Name="HideIcon"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <Telerik_Windows_Controls_Chromes:ButtonChrome 
                            x:Name="SelectionChrome"
						    Grid.Column="0"
						    Grid.ColumnSpan="3"
                			Style="{StaticResource BorderlessButtonBaseStyle}"
                			Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
                			BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                			BorderThickness="{TemplateBinding BorderThickness}"
                            RenderNormal="False"
                            RenderMouseOver="{TemplateBinding IsHighlighted}"
                            RenderPressed="{TemplateBinding IsSubmenuOpen}"
                			CornerRadius="3" Padding="0" />


            <ContentControl x:Name="radMenuContent" Grid.Column="1"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Content="{TemplateBinding Header}"
                        ContentTemplate="{TemplateBinding HeaderTemplate}"
                            Foreground="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Foreground,Mode=TwoWay}"
					 >
                <ContentControl.Effect>
                    <DropShadowEffect Color="White" ShadowDepth="1" BlurRadius="0" Direction="323"/>
                </ContentControl.Effect>
            </ContentControl>


            <Primitives:Popup x:Name="PART_Popup" HorizontalOffset="-1" VerticalOffset="-1">


                <Grid>
                    <Grid x:Name="PopupContentElement" Margin="0 0 3 3">

                        <Telerik_Windows_Controls_Chromes:ShadowChrome
                                telerik:StyleManager.Theme="{StaticResource Theme}" />

                        <Border BorderThickness="1"
                                BorderBrush="{StaticResource MenuPopupOuterBorder}"
                                Background="{StaticResource MenuPopupBackground}">
                            <Grid>
                                <Grid Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Menu.IconColumnWidth}" HorizontalAlignment="Left">
                                    <Rectangle Fill="{StaticResource MenuPopupIconsBackground}"
											Margin="0 0 2 0" />
                                    <Grid HorizontalAlignment="Right" Margin="{StaticResource MenuPopupIconsSeparatorMargin}">
                                        <Rectangle Width="1" HorizontalAlignment="Right" Margin="0 0 1 0" Fill="{StaticResource MenuPopupIconsSeparatorLeft}" />
                                        <Rectangle Width="1" HorizontalAlignment="Right" Margin="0 0 0 0" Fill="{StaticResource MenuPopupIconsSeparatorRight}" />
                                    </Grid>
                                </Grid>
                                <ItemsPresenter Margin="1" />
                            </Grid>
                        </Border>
                    </Grid>
                </Grid>


            </Primitives:Popup>


        </Grid>
    </ControlTemplate>
    <Style x:Key="TopLevelHeaderBorderlessButtonTemplateStyle" TargetType="telerikNavigation:RadMenuItem">
        <Setter Property="Template" Value="{StaticResource TopLevelHeaderBorderlessButtonTemplate}"/>
        <Setter Property="Foreground" Value="{StaticResource BorderlessButtonForeground}"/>
        <Setter Property="Background" Value="{StaticResource CloseButtonGrayBackgroundBrush}"/>
        <Setter Property="Width" Value="auto"/>
        <Setter Property="BorderThickness" Value=".5"/>
        <Setter Property="Padding" Value="4 2"/>
        <Setter Property="Margin" Value="6 2"/>
    </Style>
    
    <Style x:Key="ButtonRadioButtonStyle" TargetType="telerik:RadRadioButton">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadRadioButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BaseButtonForeground}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Content" To="0.9"
                							Duration="0" Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BaseButtonForeground_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BaseButtonForeground_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BaseButtonForeground_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Telerik_Windows_Controls_Chromes:ButtonChrome
                			Style="{StaticResource ButtonChromeRemStyle}"
                			Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
                			BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                			BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}"
                			RenderEnabled="{TemplateBinding IsEnabled}"
                			RenderNormal="{TemplateBinding IsBackgroundVisible}"
                			RenderMouseOver="{TemplateBinding IsMouseOver}"
                			RenderPressed="{TemplateBinding IsPressed}"
                			RenderFocused="{TemplateBinding IsFocused}"
                			RenderChecked="{TemplateBinding IsChecked}"
                			CornerRadius="{TemplateBinding CornerRadius}" />
                        <ContentControl x:Name="Content"
                			Margin="{TemplateBinding Padding}"
                			Content="{TemplateBinding Content}"
                			ContentTemplate="{TemplateBinding ContentTemplate}"
                			VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                			HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                			Foreground="{Binding Foreground, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
								     />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>
