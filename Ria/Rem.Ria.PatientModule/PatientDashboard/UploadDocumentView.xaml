<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
    xmlns:RemBehaviors="clr-namespace:Rem.Ria.Infrastructure.View.Behavior;assembly=Rem.Ria.Infrastructure" 
    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" 
    xmlns:sdk="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk" 
    xmlns:System="clr-namespace:System;assembly=mscorlib" xmlns:CustomControls="clr-namespace:Rem.Ria.Infrastructure.View.CustomControls;assembly=Rem.Ria.Infrastructure" x:Class="Rem.Ria.PatientModule.PatientDashboard.UploadDocumentView" 
    x:Name="UploadDocView"
    mc:Ignorable="d"  
    d:DesignWidth="400">
	<UserControl.Resources>
		<Style x:Key="RightCheckBoxStyle" TargetType="CheckBox">
			<Setter Property="Background" Value="#FF448DCA"/>
			<Setter Property="Foreground" Value="#FF000000"/>
			<Setter Property="HorizontalContentAlignment" Value="Left"/>
			<Setter Property="VerticalContentAlignment" Value="Top"/>
			<Setter Property="Padding" Value="4,1,0,0"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="BorderBrush">
				<Setter.Value>
					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
						<GradientStop Color="#FFA3AEB9" Offset="0"/>
						<GradientStop Color="#FF8399A9" Offset="0.375"/>
						<GradientStop Color="#FF718597" Offset="0.375"/>
						<GradientStop Color="#FF617584" Offset="1"/>
					</LinearGradientBrush>
				</Setter.Value>
			</Setter>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="CheckBox">
						<Grid>
							<Grid.ColumnDefinitions>
								
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="16"/>
							</Grid.ColumnDefinitions>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundOverlay"/>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BoxMiddleBackground"/>
											<ColorAnimation Duration="0" To="#7FFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
											<ColorAnimation Duration="0" To="#CCFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
											<ColorAnimation Duration="0" To="#F2FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundOverlay"/>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BoxMiddleBackground"/>
											<ColorAnimation Duration="0" To="#6BFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
											<ColorAnimation Duration="0" To="#C6FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
											<ColorAnimation Duration="0" To="#EAFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
											<ColorAnimation Duration="0" To="#F4FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
											<ColorAnimation Duration="0" To="#FF6DBDD1" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
											<ColorAnimation Duration="0" To="#FF6DBDD1" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
											<ColorAnimation Duration="0" To="#FF6DBDD1" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
											<ColorAnimation Duration="0" To="#FF6DBDD1" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled">
										<Storyboard>
											<DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
											<DoubleAnimation Duration="0" To="0.55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement"/>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="CheckStates">
									<VisualState x:Name="Checked">
										<Storyboard>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckIcon"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Unchecked"/>
									<VisualState x:Name="Indeterminate">
										<Storyboard>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IndeterminateIcon"/>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="FocusStates">
									<VisualState x:Name="Focused">
										<Storyboard>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentFocusVisualElement"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Unfocused"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="ValidationStates">
									<VisualState x:Name="Valid"/>
									<VisualState x:Name="InvalidUnfocused">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<Visibility>Visible</Visibility>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="InvalidFocused">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<Visibility>Visible</Visibility>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<System:Boolean>True</System:Boolean>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Grid HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Column="1">
								<Rectangle x:Name="Background" Fill="#FFFFFFFF" Height="14" Margin="1" RadiusY="1" RadiusX="1" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" Width="14"/>
								<Rectangle x:Name="BackgroundOverlay" Fill="#FFC4DBEE" Height="14" Margin="1" Opacity="0" RadiusY="1" RadiusX="1" Stroke="#00000000" StrokeThickness="1" Width="14"/>
								<Rectangle x:Name="BoxMiddleBackground" Fill="{TemplateBinding Background}" Height="10" RadiusY="1" RadiusX="1" Stroke="#00000000" StrokeThickness="1" Width="10"/>
								<Rectangle x:Name="BoxMiddle" Height="10" RadiusY="1" RadiusX="1" StrokeThickness="1" Width="10">
									<Rectangle.Fill>
										<LinearGradientBrush EndPoint="0.64,0.88" StartPoint="0.62,0.15">
											<GradientStop Color="#FFFFFFFF" Offset="0.013"/>
											<GradientStop Color="#F9FFFFFF" Offset="0.375"/>
											<GradientStop Color="#EAFFFFFF" Offset="0.603"/>
											<GradientStop Color="#D8FFFFFF" Offset="1"/>
										</LinearGradientBrush>
									</Rectangle.Fill>
									<Rectangle.Stroke>
										<LinearGradientBrush EndPoint=".5,1" StartPoint=".5,0">
											<GradientStop Color="#FFFFFFFF" Offset="1"/>
											<GradientStop Color="#FFFFFFFF" Offset="0"/>
											<GradientStop Color="#FFFFFFFF" Offset="0.375"/>
											<GradientStop Color="#FFFFFFFF" Offset="0.375"/>
										</LinearGradientBrush>
									</Rectangle.Stroke>
								</Rectangle>
								<Rectangle x:Name="BoxMiddleLine" Height="10" Opacity=".2" RadiusY="1" RadiusX="1" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" Width="10"/>
								<Path x:Name="CheckIcon" Data="M102.03442,598.79645 L105.22962,597.78918 L106.78825,600.42358 C106.78825,600.42358 108.51028,595.74304 110.21724,593.60419 C112.00967,591.35822 114.89314,591.42316 114.89314,591.42316 C114.89314,591.42316 112.67844,593.42645 111.93174,594.44464 C110.7449,596.06293 107.15683,604.13837 107.15683,604.13837 z" Fill="#FF333333" FlowDirection="LeftToRight" Height="10" Margin="1,1,0,1.5" Opacity="0" Stretch="Fill" Width="10.5"/>
								<Rectangle x:Name="IndeterminateIcon" Fill="#FF333333" Height="2" Opacity="0" Width="6"/>
								<Rectangle x:Name="DisabledVisualElement" Fill="#FFFFFFFF" Height="14" Opacity="0" RadiusY="1" RadiusX="1" Width="14"/>
								<Rectangle x:Name="ContentFocusVisualElement" Height="16" IsHitTestVisible="false" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1" Width="16"/>
								<Border x:Name="ValidationErrorElement" BorderBrush="#FFDB000C" BorderThickness="1" CornerRadius="1" Margin="1" ToolTipService.PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
									<ToolTipService.ToolTip>
										<ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
											<ToolTip.Triggers>
												<EventTrigger RoutedEvent="Canvas.Loaded">
													<BeginStoryboard>
														<Storyboard>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
																<DiscreteObjectKeyFrame KeyTime="0">
																	<DiscreteObjectKeyFrame.Value>
																		<System:Boolean>true</System:Boolean>
																	</DiscreteObjectKeyFrame.Value>
																</DiscreteObjectKeyFrame>
															</ObjectAnimationUsingKeyFrames>
														</Storyboard>
													</BeginStoryboard>
												</EventTrigger>
											</ToolTip.Triggers>
										</ToolTip>
									</ToolTipService.ToolTip>
									<Grid Background="Transparent" HorizontalAlignment="Right" Height="10" Margin="0,-4,-4,0" VerticalAlignment="Top" Width="10">
										<Path Data="M 1,0 L5,0 A 2,2 90 0 1 7,2 L7,6 z" Fill="#FFDC000C" Margin="0,3,0,0"/>
										<Path Data="M 0,0 L2,0 L 7,5 L7,7" Fill="#ffffff" Margin="0,3,0,0"/>
									</Grid>
								</Border>
							</Grid>
							<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</UserControl.Resources>
    <i:Interaction.Behaviors>
        <RemBehaviors:CloseViewBehavior />
    </i:Interaction.Behaviors>
	<Grid Opacity="0.9" Background="#FFFFFDFD" Margin="5" >
		<Grid.RowDefinitions>
			<RowDefinition Height="auto"/>
			<RowDefinition Height="auto"/>
		</Grid.RowDefinitions>
		<Border Grid.Row="0" Style="{StaticResource TileHeaderBorderStyle}" VerticalAlignment="Top" Margin="0">
			<TextBlock Text="Upload Document"  Style="{StaticResource TileHeaderTextBlockStyle}"/>  
		</Border>
		<Grid Grid.Row="1" Margin="0" VerticalAlignment="Top">
			<Grid.RowDefinitions>
				<RowDefinition Height="auto"/>
				<RowDefinition Height="auto"/> 
				<RowDefinition Height="auto"/> 
				<RowDefinition Height="auto"/>    	
			</Grid.RowDefinitions>
			<StackPanel Grid.Row="0" HorizontalAlignment="Center" MinWidth="300">
				<TextBlock Text="Document:"/>
				<Border BorderThickness="2" BorderBrush="#FF2D2B2B" Background="#FFF1F1F1" MinWidth="200" MinHeight="100" Margin="5" AllowDrop="True">
					<i:Interaction.Behaviors>
						<RemBehaviors:DropFilesBehavior DropFilesCommand="{Binding AddFilesCommand}"/>
					</i:Interaction.Behaviors>
					<ItemsControl ItemsSource="{Binding SelectedFiles}" Margin="0">
						<ItemsControl.ItemTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding Name}"/>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
				</Border>
				<telerik:RadButton Content="Browse" ToolTipService.ToolTip="Browse for a document" Style="{StaticResource TileRoundedCornerButtonStyle}" HorizontalAlignment="Right" Margin="0,5,0,0" >
					<i:Interaction.Triggers>
						<i:EventTrigger EventName="Click">
							<RemBehaviors:OpenFileDialogBoxTriggerAction MultiSelect="False" FileDialogDialogResultCommand="{Binding AddFilesCommand}"/>
						</i:EventTrigger>
					</i:Interaction.Triggers>
				</telerik:RadButton>				
			</StackPanel>
			<StackPanel x:Name="EncryptedStackPanel" Grid.Row="1" Margin="5,4,0,6"  Orientation="Horizontal" HorizontalAlignment="Left" Width="141">
			<CheckBox Content="Decrypt Document" Width="141"  Margin="0,0,5,0" VerticalAlignment="Top" IsChecked="{Binding IsEncryptedDocument, Mode=TwoWay}" Style="{StaticResource RightCheckBoxStyle}"/>
			</StackPanel>
			<Border BorderThickness="0,2,0,0" Grid.Row="2" />
			<Grid Grid.Row="3" Margin="5">
				<Grid.RowDefinitions>
					<RowDefinition Height="auto"/>
					<RowDefinition Height="auto"/>
					<RowDefinition Height="auto"/>
					<RowDefinition Height="auto"/>
					<RowDefinition Height="auto"/>
					<RowDefinition Height="auto"/>
					<RowDefinition Height="auto"/>
				</Grid.RowDefinitions>	
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width=".4*"/>
					<ColumnDefinition />
				</Grid.ColumnDefinitions>
				<TextBlock Grid.Row="0" Grid.Column="0" Text="Document Type:" HorizontalAlignment="Right" Margin="0,0,0,5"/>
				<telerik:RadComboBox x:Name="DocumentTypeCombobox" Grid.Row="0" ItemsSource="{Binding DocumentTypeDtos}" DisplayMemberPath="Name" 
					SelectedValue="{Binding PatientDocumentDto.PatientDocumentType, Mode=TwoWay}" Grid.Column="1" MinWidth="150" HorizontalAlignment="Left" Margin="0,0,0,5" >
					<i:Interaction.Triggers>
						<i:EventTrigger EventName="SelectionChanged">
							<i:InvokeCommandAction Command="{Binding DocumentTypeChangedCommand}" CommandParameter="{Binding SelectedItem, ElementName=DocumentTypeCombobox}"/>
						</i:EventTrigger>
					</i:Interaction.Triggers>
				</telerik:RadComboBox>
				<TextBlock Grid.Row="1" Grid.Column="0" Text="Other Type:" HorizontalAlignment="Right" Margin="0,0,0,5"/>
				<TextBox Grid.Row="1" Grid.Column="1" MinWidth="150" HorizontalAlignment="Left" Text="{Binding PatientDocumentDto.OtherDocumentTypeName, Mode=TwoWay}" IsReadOnly="{Binding IsOtherTypeReadOnly}" Margin="0,0,0,5"/>
				<TextBlock Grid.Row="2" Grid.Column="0" Text="Description:" HorizontalAlignment="Right"/>
				<TextBox Grid.Row="2" Grid.Column="1" Style="{StaticResource CommentTextBox}" Text="{Binding PatientDocumentDto.Description, Mode=TwoWay}" Margin="-5,0,0,0"/>
				<TextBlock Grid.Row="3" Grid.Column="0" Text="Clinical Start Date:" HorizontalAlignment="Right" Margin="0,0,0,5"/>
				<telerik:RadDateTimePicker Grid.Row="3" Grid.Column="1" InputMode="DatePicker" MinWidth="100" x:Name="ClinicalStartDate" SelectedValue="{Binding PatientDocumentDto.ClinicalStartDate, Mode=TwoWay}" 
					HorizontalAlignment="Left" Margin="0,0,0,5">
					<i:Interaction.Triggers>
						<i:EventTrigger EventName="SelectionChanged">
							<i:InvokeCommandAction Command="{Binding ClinicalStartDateChangedCommand}" CommandParameter="{Binding ElementName=ClinicalStartDate}"/>
						</i:EventTrigger>
					</i:Interaction.Triggers>
				</telerik:RadDateTimePicker>
				<TextBlock Grid.Row="4" Grid.Column="0" Text="Clinical End Date:" HorizontalAlignment="Right"/>
				<telerik:RadDateTimePicker Grid.Row="4" Grid.Column="1" InputMode="DatePicker" MinWidth="100" SelectedValue="{Binding PatientDocumentDto.ClinicalEndDate, Mode=TwoWay}" 
					HorizontalAlignment="Left" Margin="0,0,0,5"/>
				<TextBlock Grid.Row="5" Grid.Column="0" Text="Document Provider:" HorizontalAlignment="Right"/>
				<TextBox Grid.Row="5" Grid.Column="1" MinWidth="150" Text="{Binding PatientDocumentDto.DocumentProviderName, Mode=TwoWay}" HorizontalAlignment="Left" Margin="0,0,0,5" />
				<StackPanel Grid.Row="6" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
					<telerik:RadButton  Content="Cancel" 
						ToolTipService.ToolTip="Cancel" Style="{StaticResource TileRoundedCornerButtonStyle}" Margin="0,5,5,0" Command="{Binding CloseViewCommand}" />
					<telerik:RadButton Content="Upload" 
						ToolTipService.ToolTip="Upload Document"
						Command="{Binding UploadDocumentCommand}" Style="{StaticResource TileRoundedCornerButtonStyle}" Margin="0,5,0,0" />
				</StackPanel>
			</Grid>
		</Grid>
        <CustomControls:LoadingControl IsLoading="{Binding IsLoading}" />
    </Grid>
</UserControl>
