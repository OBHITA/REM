<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="microsoft.identityModel" type="Microsoft.IdentityModel.Configuration.MicrosoftIdentityModelSection, Microsoft.IdentityModel, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    <sectionGroup name="common">
      <section name="logging" type="Common.Logging.ConfigurationSectionHandler, Common.Logging" />
    </sectionGroup>
    <section name="syscache" type="NHibernate.Caches.SysCache.SysCacheSectionHandler, NHibernate.Caches.SysCache" />
    <section name="PerpetuumSoftServices" type="PerpetuumSoft.ReportingServices.Viewer.Server.ServicesConfigurationSection, PerpetuumSoft.ReportingServices.Viewer.Server" allowLocation="true" allowDefinition="Everywhere" />
    <section name="MsmqTransportConfig" type="NServiceBus.Config.MsmqTransportConfig, NServiceBus.Core" />
    <section name="UnicastBusConfig" type="NServiceBus.Config.UnicastBusConfig, NServiceBus.Core" />
  </configSections>
  <microsoft.identityModel configSource="Configuration\Wif\dev.wif.config" />
  <appSettings file="Configuration/dev.settings.config" />
  <common>
    <logging>
      <factoryAdapter type="Common.Logging.NLog.NLogLoggerFactoryAdapter, Common.Logging.NLog">
        <arg key="configType" value="FILE" />
        <arg key="configFile" value="~/NLog.config" />
      </factoryAdapter>
    </logging>
  </common>
  <syscache>
    <cache region="LookupRegion" expiration="36000" priority="5" />
    <cache region="CacheAttributeRegion" expiration="3600" priority="3" />
  </syscache>
  <PerpetuumSoftServices>
    <LogMode value="On" />
    <Service Type="Rem.Ria.ReportsModule.Web.ReportService, Rem.Ria.ReportsModule.Web" />
  </PerpetuumSoftServices>

  <system.web>
    <authorization>
      <deny users="?" />
    </authorization>
    <authentication mode="None" />
    <httpRuntime requestValidationType="Rem.Infrastructure.Web.WifPassiveRequestValidator" />
  </system.web>
  
  <!-- Metadata directory for hosting the FederationMetadata according to the WSFederation protocol -->
  <location path="FederationMetadata">
    <system.web>
      <authorization>
        <allow users="*" />
      </authorization>
    </system.web>
  </location>
  <location path="Styles">
    <system.web>
      <authorization>
        <allow users="*" />
      </authorization>
    </system.web>
  </location>
  <!--  Allow all identities access to the custom error page -->
  <location path="ErrorDefault.aspx">
    <system.web>
      <authorization>
        <allow users="*" />
      </authorization>
    </system.web>
  </location>
  <!-- Allow anonymous access to health test to be used by IIS ARR module -->
  <location path="arr">
    <system.web>
      <authorization>
        <allow users="*" />
      </authorization>
    </system.web>
  </location>

  <location path="C32Service.svc">
    <system.web>
      <authorization>
        <allow users="*" />
      </authorization>
    </system.web>
  </location>

  <system.web>
    <compilation debug="true" targetFramework="4.0">
      <assemblies>
        <add assembly="Microsoft.IdentityModel, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      </assemblies>
    </compilation>
    <customErrors mode="RemoteOnly" defaultRedirect="ErrorDefault.aspx" />
    <sessionState timeout="600" />
  </system.web>
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false" />
    <modules runAllManagedModulesForAllRequests="true">
      <add name="SessionAuthenticationModule" type="Microsoft.IdentityModel.Web.SessionAuthenticationModule, Microsoft.IdentityModel, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" preCondition="managedHandler" />
      <add name="WSFederationAuthenticationModule" type="Microsoft.IdentityModel.Web.WSFederationAuthenticationModule, Microsoft.IdentityModel, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" preCondition="managedHandler" />
      <add name="ClaimsAuthorizationModule" type="Microsoft.IdentityModel.Web.ClaimsAuthorizationModule, Microsoft.IdentityModel, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
      <add name="AddSlashToHomeRealmModule" type="Rem.Infrastructure.Web.AddSlashToHomeRealmModule, Rem.Infrastructure" preCondition="managedHandler" />
    </modules>
    <handlers>
      <add name="REMFederationMetaXml" path="FederationMetadata.xml" verb="*" type="Rem.Infrastructure.Web.FederationMetadataXmlHandler" resourceType="Unspecified" preCondition="integratedMode" />
      <add name="PatientModuleHandler" verb="*" path="PatientModuleHandler.ashx*" type="Rem.Ria.PatientModule.Web.HttpHandler" />
      <add name="EncryptedFileOpen" verb="*" path="DownloadEncryptedDocument.ashx*" type="Rem.Infrastructure.Web.EncryptedFileOpenHandler" />
      <add name="eRxHttpHandler" verb="*" path="NewCropHttpHandler.ashx*" type="Rem.Ria.NewCropModule.Web.NewCropHttpHandler" />
      <add name="BillingModuleHandler" verb="*" path="BillingModuleHandler.ashx*" type="Rem.Ria.BillingModule.Web.HttpHandler" />
      <add name="LoginHandler" verb="*" path="LoginHandler.ashx*" type="Rem.Web.LoginHandler" />
    </handlers>
  </system.webServer>
  <system.serviceModel>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true">
      <serviceActivations>
        <add relativeAddress="AuthenticationService.svc" factory="SL.IdentityModel.Server.AuthenticationServiceServiceHostFactory" service="SL.IdentityModel.Server.SL.IdentityModel.Server" />
        <add relativeAddress="Silverlight/Service/TerminologyService.svc" service="TerminologyService.WebService.TerminologyService, TerminologyService.WebService" />
        <add relativeAddress="Silverlight/Service/WcfRequestProcessor.svc" service="Agatha.ServiceLayer.WCF.WcfRequestProcessor, Agatha.ServiceLayer" />
        <add relativeAddress="ReportService.svc" service="Rem.Ria.ReportsModule.Web.ReportService" />
        <add relativeAddress="C32Service.svc" service="Rem.Infrastructure.Service.C32Service, Rem.Infrastructure" />
      </serviceActivations>
    </serviceHostingEnvironment>
    <bindings>
      <customBinding>
        <binding name="remCustomBinding">
          <binaryMessageEncoding>
            <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="52428800" maxBytesPerRead="4096" maxNameTableCharCount="16384" />
          </binaryMessageEncoding>
          <httpsTransport maxBufferSize="52428800" maxBufferPoolSize="5242880" maxReceivedMessageSize="52428800" transferMode="Buffered" />
        </binding>
        <binding name="NewCropCustomBinding">
          <textMessageEncoding maxReadPoolSize="64" maxWritePoolSize="16" messageVersion="Soap12" writeEncoding="utf-8">
            <readerQuotas maxDepth="32" maxStringContentLength="52428800" maxArrayLength="52428800" maxBytesPerRead="4096" maxNameTableCharCount="16384" />
          </textMessageEncoding>
          <httpTransport manualAddressing="false" maxBufferPoolSize="52428800" maxReceivedMessageSize="52428800" allowCookies="false" authenticationScheme="Anonymous" bypassProxyOnLocal="false" decompressionEnabled="true" hostNameComparisonMode="StrongWildcard" keepAliveEnabled="true" maxBufferSize="52428800" proxyAuthenticationScheme="Anonymous" realm="" transferMode="Buffered" unsafeConnectionNtlmAuthentication="false" useDefaultWebProxy="true" />
        </binding>
        <!-- SSRS Service -->
        <binding name="ReportingService2005Soap11">
          <textMessageEncoding maxReadPoolSize="64" maxWritePoolSize="16" messageVersion="Soap11" writeEncoding="utf-8">
            <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384" maxBytesPerRead="4096" maxNameTableCharCount="16384" />
          </textMessageEncoding>
          <httpsTransport manualAddressing="false" maxBufferPoolSize="524288" maxReceivedMessageSize="65536" allowCookies="false" authenticationScheme="Ntlm" bypassProxyOnLocal="false" decompressionEnabled="true" hostNameComparisonMode="StrongWildcard" keepAliveEnabled="true" maxBufferSize="65536" proxyAuthenticationScheme="Ntlm" realm="" transferMode="Buffered" unsafeConnectionNtlmAuthentication="false" useDefaultWebProxy="true" requireClientCertificate="false" />
        </binding>
      </customBinding>
      <webHttpBinding>
        <!-- Perpetuum Service -->
        <binding name="webHttpBindingConf">
          <security mode="Transport" />
        </binding>
      </webHttpBinding>
      <basicHttpBinding>
        <!-- Perpetuum Service -->
        <binding name="basicHttpBindingConf">
          <security mode="Transport" />
        </binding>
        <!-- SSRS Service -->
        <binding name="ReportingService2005Soap" closeTimeout="00:01:00" openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00" allowCookies="false" bypassProxyOnLocal="false" hostNameComparisonMode="StrongWildcard" maxBufferSize="65536" maxBufferPoolSize="524288" maxReceivedMessageSize="65536" messageEncoding="Text" textEncoding="utf-8" transferMode="Buffered" useDefaultWebProxy="true">
          <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384" maxBytesPerRead="4096" maxNameTableCharCount="16384" />
          <security mode="TransportCredentialOnly">
            <transport clientCredentialType="None" proxyCredentialType="None" realm="" />
            <message clientCredentialType="UserName" algorithmSuite="Default" />
          </security>
        </binding>
        <!-- Identity Server Membership Service-->
        <binding name="BasicHttpBinding_IMembershipService" closeTimeout="00:01:00" openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00" allowCookies="false" bypassProxyOnLocal="false" hostNameComparisonMode="StrongWildcard" maxBufferSize="65536" maxBufferPoolSize="524288" maxReceivedMessageSize="65536" messageEncoding="Text" textEncoding="utf-8" transferMode="Buffered" useDefaultWebProxy="true">
          <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384" maxBytesPerRead="4096" maxNameTableCharCount="16384" />
          <security mode="None">
            <transport clientCredentialType="None" proxyCredentialType="None" realm="" />
            <message clientCredentialType="UserName" algorithmSuite="Default" />
          </security>
        </binding>
      </basicHttpBinding>
    </bindings>
    <extensions>
      <behaviorExtensions>
        <add name="nhibernateBehavior" type="Rem.Infrastructure.Service.NHibernateSessionPerCallBehaviorExtensionElement, Rem.Infrastructure" />
        <add name="instantiationBehavior" type="Rem.Infrastructure.Service.InstantiationBehaviorExtensionElement, Rem.Infrastructure" />
        <add name="faultServiceBehavior" type="Rem.Infrastructure.Service.WcfFaultServiceBehaviorElement, Rem.Infrastructure" />
        <add name="federatedServiceHostConfiguration" type="Microsoft.IdentityModel.Configuration.ConfigureServiceHostBehaviorExtensionElement, Microsoft.IdentityModel, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
      </behaviorExtensions>
    </extensions>
    <behaviors>
      <serviceBehaviors>
        <behavior name="Rem.Ria.Web.Services.Behavior">
          <!-- To avoid disclosing metadata information, set the value below to false and remove the metadata endpoint above before deployment -->
          <serviceMetadata httpsGetEnabled="true" />
          <!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="true" />
          <!-- Behavior extension to make the service claims aware -->
          <federatedServiceHostConfiguration />
          <instantiationBehavior />
          <nhibernateBehavior />
          <faultServiceBehavior />
          <serviceAuthorization serviceAuthorizationManagerType="Rem.Infrastructure.Security.ServiceAuthorizationManager, Rem.Infrastructure" />
        </behavior>
        <behavior name="RequestProcessorBehavior">
          <!-- Behavior extension to make the service claims aware -->
          <federatedServiceHostConfiguration />
          <!-- To avoid disclosing metadata information, set the value below to false and remove the metadata endpoint above before deployment -->
          <serviceMetadata httpsGetEnabled="true" />
          <!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="true" />
          <dataContractSerializer maxItemsInObjectGraph="2147483647" />
          <serviceThrottling maxConcurrentCalls="500" maxConcurrentInstances="500" />
          <serviceAuthorization serviceAuthorizationManagerType="Rem.Infrastructure.Security.ServiceAuthorizationManager, Rem.Infrastructure" />
        </behavior>
        <behavior name="Rem.Ria.ReportsModule.Web.ReportServiceBehavior">
          <serviceMetadata httpsGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
        <behavior name="C32ServiceBehavior">
          <!-- To avoid disclosing metadata information, set the value below to false and remove the metadata endpoint above before deployment -->
          <serviceMetadata httpsGetEnabled="true" />
          <!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="true" />
          <instantiationBehavior />
          <nhibernateBehavior />
          <faultServiceBehavior />
        </behavior>
      </serviceBehaviors>
      <endpointBehaviors>
        <behavior name="webBehavior">
          <webHttp />
        </behavior>
      </endpointBehaviors>
    </behaviors>
    <!-- Services -->
    <services>
      <service name="TerminologyService.WebService.TerminologyService" behaviorConfiguration="Rem.Ria.Web.Services.Behavior">
        <endpoint address="" binding="customBinding" bindingConfiguration="remCustomBinding" contract="TerminologyService.WebService.ITerminologyService"></endpoint>
        <endpoint address="mexHttps" binding="mexHttpsBinding" contract="IMetadataExchange" />
      </service>
      <service name="Agatha.ServiceLayer.WCF.WcfRequestProcessor" behaviorConfiguration="RequestProcessorBehavior">
        <endpoint address="" binding="customBinding" bindingConfiguration="remCustomBinding" contract="Agatha.Common.WCF.IWcfRequestProcessor" />
      </service>
      <service name="Rem.Ria.ReportsModule.Web.ReportService" behaviorConfiguration="RequestProcessorBehavior" >
        <endpoint address="" binding="basicHttpBinding" bindingConfiguration="basicHttpBindingConf" contract="PerpetuumSoft.ReportingServices.Viewer.Server.IReportService">
          <identity>
            <dns value="localhost" />
          </identity>
        </endpoint>
        <endpoint address="mex" binding="mexHttpsBinding" contract="IMetadataExchange" />
        <endpoint address="rest" binding="webHttpBinding" contract="PerpetuumSoft.ReportingServices.Viewer.Server.IReportServiceResources" behaviorConfiguration="webBehavior" bindingConfiguration="webHttpBindingConf" />
      </service>
      <service name="Rem.Infrastructure.Service.C32Service" behaviorConfiguration="C32ServiceBehavior">
        <endpoint address="" binding="basicHttpBinding" bindingConfiguration="basicHttpBindingConf" contract="Rem.Infrastructure.Service.IC32Service" />
      </service>
    </services>
    <client configSource="Configuration\Client\dev.client.config" />
  </system.serviceModel>
  <!--Turn on to facilitate debugging WCF services from the server-side-->
  <system.diagnostics>
    <sources>
      <!--WCF Message Logging-->
      <!--<source name="System.ServiceModel.MessageLogging">
        <listeners>
          <add name="messages" type="System.Diagnostics.XmlWriterTraceListener" initializeData="c:\temp\logs\messages.svclog" />
        </listeners>
      </source>-->
      <!--WCF Trace Logging-->
      <source name="System.ServiceModel" switchValue="Information, ActivityTracing" propagateActivity="true">
        <listeners>
          <add name="traceListener" type="System.Diagnostics.XmlWriterTraceListener" initializeData="c:\temp\logs\Traces.svclog" />
        </listeners>
      </source>
      <!-- WIF Trace Logging-->
      <!--<source name="Microsoft.IdentityModel" switchValue="Verbose">
        <listeners>
          <add name="xml" type="System.Diagnostics.XmlWriterTraceListener" initializeData="c:\temp\logs\WIFTrace.log" />
        </listeners>
      </source>-->
    </sources>
  </system.diagnostics>
  <system.serviceModel>
    <diagnostics>
      <messageLogging logEntireMessage="false" logMalformedMessages="false" logMessagesAtServiceLevel="true" logMessagesAtTransportLevel="true" maxMessagesToLog="3000" maxSizeOfMessageToLog="9000000" />
    </diagnostics>
  </system.serviceModel>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="StructureMap" publicKeyToken="e60ad81abae3c223" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.6.3.0" newVersion="2.6.3.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="NLog" publicKeyToken="5120e14c03d0593c" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.0.0.0" newVersion="2.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Castle.Core" publicKeyToken="407dd0808d44fbdc" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Common.Logging" publicKeyToken="af08829b84f0328e" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.0.0.0" newVersion="2.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Common.Logging.Log4Net" publicKeyToken="af08829b84f0328e" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.0.0.0" newVersion="2.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <!-- 1. In order to configure remote endpoints use the format: "queue@machine" 
       2. Input queue must be on the same machine as the process feeding off of it.
       3. Error queue can (and often should) be on a different machine.
       4. The community edition doesn't support more than one worker thread.
  -->
  <MsmqTransportConfig ErrorQueue="RemWebErrorQueue" NumberOfWorkerThreads="1" MaxRetries="5" />
  <UnicastBusConfig>
    <MessageEndpointMappings>
      <add Messages="Rem.Domain.ClinicalBilling.ContextMap" Endpoint="RemServerInputQueue" />
    </MessageEndpointMappings>
  </UnicastBusConfig>
</configuration>